
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+2406 (git sha1 UNKNOWN, clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Executing script file `/gb3-resources/processor/yscripts/sail.ys' --

1. Executing Verilog-2005 frontend: sail-core/verilog/adder.v
Parsing Verilog input from `sail-core/verilog/adder.v' to AST representation.
Generating RTLIL representation for module `\adder'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: sail-core/verilog/cpu.v
Parsing Verilog input from `sail-core/verilog/cpu.v' to AST representation.
Generating RTLIL representation for module `\cpu'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: sail-core/verilog/mux2to1.v
Parsing Verilog input from `sail-core/verilog/mux2to1.v' to AST representation.
Generating RTLIL representation for module `\mux2to1'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: sail-core/verilog/alu_control.v
Parsing Verilog input from `sail-core/verilog/alu_control.v' to AST representation.
Generating RTLIL representation for module `\ALUControl'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: sail-core/verilog/pipeline_registers.v
Parsing Verilog input from `sail-core/verilog/pipeline_registers.v' to AST representation.
Generating RTLIL representation for module `\if_id'.
Generating RTLIL representation for module `\id_ex'.
Generating RTLIL representation for module `\ex_mem'.
Generating RTLIL representation for module `\mem_wb'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: sail-core/verilog/alu.v
Parsing Verilog input from `sail-core/verilog/alu.v' to AST representation.
Generating RTLIL representation for module `\alu'.
Note: Assuming pure combinatorial block at sail-core/verilog/alu.v:78.2-145.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at sail-core/verilog/alu.v:147.2-158.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: sail-core/verilog/program_counter.v
Parsing Verilog input from `sail-core/verilog/program_counter.v' to AST representation.
Generating RTLIL representation for module `\program_counter'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: sail-core/verilog/branch_decide.v
Parsing Verilog input from `sail-core/verilog/branch_decide.v' to AST representation.
Generating RTLIL representation for module `\branch_decision'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: sail-core/verilog/forwarding_unit.v
Parsing Verilog input from `sail-core/verilog/forwarding_unit.v' to AST representation.
Generating RTLIL representation for module `\ForwardingUnit'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: sail-core/verilog/branch_predictor.v
Parsing Verilog input from `sail-core/verilog/branch_predictor.v' to AST representation.
Generating RTLIL representation for module `\branch_predictor'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: sail-core/verilog/imm_gen.v
Parsing Verilog input from `sail-core/verilog/imm_gen.v' to AST representation.
Generating RTLIL representation for module `\imm_gen'.
Note: Assuming pure combinatorial block at sail-core/verilog/imm_gen.v:54.2-72.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: sail-core/verilog/control_unit.v
Parsing Verilog input from `sail-core/verilog/control_unit.v' to AST representation.
Generating RTLIL representation for module `\control'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: sail-core/verilog/instruction_mem.v
Parsing Verilog input from `sail-core/verilog/instruction_mem.v' to AST representation.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: sail-core/verilog/data_mem.v
Parsing Verilog input from `sail-core/verilog/data_mem.v' to AST representation.
Generating RTLIL representation for module `\data_mem'.
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: sail-core/verilog/register_file.v
Parsing Verilog input from `sail-core/verilog/register_file.v' to AST representation.
Generating RTLIL representation for module `\regfile'.
Successfully finished Verilog frontend.

16. Executing Verilog-2005 frontend: sail-core/verilog/CSR.v
Parsing Verilog input from `sail-core/verilog/CSR.v' to AST representation.
Generating RTLIL representation for module `\csr_file'.
Successfully finished Verilog frontend.

17. Executing Verilog-2005 frontend: sail-core/verilog/dataMem_mask_gen.v
Parsing Verilog input from `sail-core/verilog/dataMem_mask_gen.v' to AST representation.
Generating RTLIL representation for module `\sign_mask_gen'.
Successfully finished Verilog frontend.

18. Executing Verilog-2005 frontend: toplevel.v
Parsing Verilog input from `toplevel.v' to AST representation.
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

19. Executing SYNTH_ICE40 pass.

19.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

19.2. Executing HIERARCHY pass (managing design hierarchy).

19.2.1. Finding top of design hierarchy..
root of   2 design levels: top                 
root of   0 design levels: sign_mask_gen       
root of   0 design levels: csr_file            
root of   0 design levels: regfile             
root of   0 design levels: data_mem            
root of   0 design levels: control             
root of   0 design levels: imm_gen             
root of   0 design levels: branch_predictor    
root of   0 design levels: ForwardingUnit      
root of   0 design levels: branch_decision     
root of   0 design levels: program_counter     
root of   0 design levels: alu                 
root of   0 design levels: mem_wb              
root of   0 design levels: ex_mem              
root of   0 design levels: id_ex               
root of   0 design levels: if_id               
root of   0 design levels: ALUControl          
root of   0 design levels: mux2to1             
root of   1 design levels: cpu                 
root of   0 design levels: adder               
Automatically selected top as design top module.

19.2.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \data_mem
Used module:     \cpu
Used module:         \mux2to1
Used module:         \branch_predictor
Used module:         \ForwardingUnit
Used module:         \mem_wb
Used module:         \branch_decision
Used module:         \ex_mem
Used module:         \alu
Used module:         \adder
Used module:         \id_ex
Used module:         \csr_file
Used module:         \sign_mask_gen
Used module:         \ALUControl
Used module:         \imm_gen
Used module:         \regfile
Used module:         \control
Used module:         \if_id
Used module:         \program_counter

19.2.3. Analyzing design hierarchy..
Top module:  \top
Used module:     \data_mem
Used module:     \cpu
Used module:         \mux2to1
Used module:         \branch_predictor
Used module:         \ForwardingUnit
Used module:         \mem_wb
Used module:         \branch_decision
Used module:         \ex_mem
Used module:         \alu
Used module:         \adder
Used module:         \id_ex
Used module:         \csr_file
Used module:         \sign_mask_gen
Used module:         \ALUControl
Used module:         \imm_gen
Used module:         \regfile
Used module:         \control
Used module:         \if_id
Used module:         \program_counter
Removed 0 unused modules.

19.3. Executing PROC pass (convert processes to netlists).

19.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `regfile.$proc$sail-core/verilog/register_file.v:0$268'.
Cleaned up 0 empty switches.

19.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$sail-core/verilog/dataMem_mask_gen.v:58$275 in module sign_mask_gen.
Marked 1 switch rules as full_case in process $proc$sail-core/verilog/data_mem.v:240$229 in module data_mem.
Marked 1 switch rules as full_case in process $proc$sail-core/verilog/imm_gen.v:54$102 in module imm_gen.
Marked 1 switch rules as full_case in process $proc$sail-core/verilog/alu.v:147$32 in module alu.
Marked 1 switch rules as full_case in process $proc$sail-core/verilog/alu.v:78$18 in module alu.
Removed 5 dead cases from process $proc$sail-core/verilog/alu_control.v:82$8 in module ALUControl.
Marked 10 switch rules as full_case in process $proc$sail-core/verilog/alu_control.v:82$8 in module ALUControl.
Removed a total of 5 dead cases.

19.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 37 assignments to connections.

19.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\csr_file.$proc$sail-core/verilog/CSR.v:0$274'.
  Set init value: \rdVal_CSR = 0
Found init rule in `\data_mem.$proc$sail-core/verilog/data_mem.v:0$244'.
  Set init value: \clk_stall = 1'0
Found init rule in `\data_mem.$proc$sail-core/verilog/data_mem.v:60$243'.
  Set init value: \state = 0
Found init rule in `\imm_gen.$proc$sail-core/verilog/imm_gen.v:0$103'.
  Set init value: \imm = 0
Found init rule in `\branch_predictor.$proc$sail-core/verilog/branch_predictor.v:0$101'.
  Set init value: \s = 2'00
  Set init value: \branch_mem_sig_reg = 1'0
Found init rule in `\program_counter.$proc$sail-core/verilog/program_counter.v:0$42'.
  Set init value: \outAddr = 0
  Set init value: \bufferedOutAddr = 0
Found init rule in `\alu.$proc$sail-core/verilog/alu.v:0$40'.
  Set init value: \ALUOut = 0
  Set init value: \Branch_Enable = 1'0
Found init rule in `\mem_wb.$proc$sail-core/verilog/pipeline_registers.v:0$17'.
  Set init value: \data_out = 117'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\ex_mem.$proc$sail-core/verilog/pipeline_registers.v:0$15'.
  Set init value: \data_out = 155'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\id_ex.$proc$sail-core/verilog/pipeline_registers.v:0$13'.
  Set init value: \data_out = 178'0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\if_id.$proc$sail-core/verilog/pipeline_registers.v:0$11'.
  Set init value: \data_out = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\ALUControl.$proc$sail-core/verilog/alu_control.v:0$9'.
  Set init value: \ALUCtl = 7'0000000

19.3.5. Executing PROC_ARST pass (detect async resets in processes).

19.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\top.$proc$toplevel.v:52$279'.
Creating decoders for process `\top.$proc$toplevel.v:51$278'.
Creating decoders for process `\sign_mask_gen.$proc$sail-core/verilog/dataMem_mask_gen.v:58$275'.
     1/1: $1\mask[2:0]
Creating decoders for process `\csr_file.$proc$sail-core/verilog/CSR.v:0$274'.
Creating decoders for process `\csr_file.$proc$sail-core/verilog/CSR.v:54$273'.
Creating decoders for process `\csr_file.$proc$sail-core/verilog/CSR.v:64$269'.
     1/1: $0\rdVal_CSR[31:0]
Creating decoders for process `\regfile.$proc$sail-core/verilog/register_file.v:95$247'.
     1/3: $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250
     2/3: $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_DATA[31:0]$249
     3/3: $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_ADDR[4:0]$248
Creating decoders for process `\data_mem.$proc$sail-core/verilog/data_mem.v:0$244'.
Creating decoders for process `\data_mem.$proc$sail-core/verilog/data_mem.v:60$243'.
Creating decoders for process `\data_mem.$proc$sail-core/verilog/data_mem.v:240$229'.
     1/12: $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232
     2/12: $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_DATA[31:0]$231
     3/12: $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_ADDR[31:0]$230
     4/12: $0\sign_mask_buf[3:0]
     5/12: $0\addr_buf[31:0]
     6/12: $0\write_data_buffer[31:0]
     7/12: $0\memwrite_buf[0:0]
     8/12: $0\memread_buf[0:0]
     9/12: $0\word_buf[31:0]
    10/12: $0\state[31:0]
    11/12: $0\clk_stall[0:0]
    12/12: $0\read_data[31:0]
Creating decoders for process `\data_mem.$proc$sail-core/verilog/data_mem.v:231$225'.
     1/1: $0\led_reg[31:0]
Creating decoders for process `\imm_gen.$proc$sail-core/verilog/imm_gen.v:0$103'.
Creating decoders for process `\imm_gen.$proc$sail-core/verilog/imm_gen.v:54$102'.
     1/1: $1\imm[31:0]
Creating decoders for process `\branch_predictor.$proc$sail-core/verilog/branch_predictor.v:0$101'.
Creating decoders for process `\branch_predictor.$proc$sail-core/verilog/branch_predictor.v:101$86'.
     1/2: $0\s[1:0] [1]
     2/2: $0\s[1:0] [0]
Creating decoders for process `\branch_predictor.$proc$sail-core/verilog/branch_predictor.v:92$85'.
Creating decoders for process `\program_counter.$proc$sail-core/verilog/program_counter.v:0$42'.
Creating decoders for process `\program_counter.$proc$sail-core/verilog/program_counter.v:67$41'.
Creating decoders for process `\alu.$proc$sail-core/verilog/alu.v:0$40'.
Creating decoders for process `\alu.$proc$sail-core/verilog/alu.v:147$32'.
     1/1: $1\Branch_Enable[0:0]
Creating decoders for process `\alu.$proc$sail-core/verilog/alu.v:78$18'.
     1/1: $1\ALUOut[31:0]
Creating decoders for process `\mem_wb.$proc$sail-core/verilog/pipeline_registers.v:0$17'.
Creating decoders for process `\mem_wb.$proc$sail-core/verilog/pipeline_registers.v:145$16'.
Creating decoders for process `\ex_mem.$proc$sail-core/verilog/pipeline_registers.v:0$15'.
Creating decoders for process `\ex_mem.$proc$sail-core/verilog/pipeline_registers.v:118$14'.
Creating decoders for process `\id_ex.$proc$sail-core/verilog/pipeline_registers.v:0$13'.
Creating decoders for process `\id_ex.$proc$sail-core/verilog/pipeline_registers.v:91$12'.
Creating decoders for process `\if_id.$proc$sail-core/verilog/pipeline_registers.v:0$11'.
Creating decoders for process `\if_id.$proc$sail-core/verilog/pipeline_registers.v:64$10'.
Creating decoders for process `\ALUControl.$proc$sail-core/verilog/alu_control.v:0$9'.
Creating decoders for process `\ALUControl.$proc$sail-core/verilog/alu_control.v:82$8'.
     1/10: $10\ALUCtl[6:0]
     2/10: $9\ALUCtl[6:0]
     3/10: $8\ALUCtl[6:0]
     4/10: $7\ALUCtl[6:0]
     5/10: $6\ALUCtl[6:0]
     6/10: $5\ALUCtl[6:0]
     7/10: $4\ALUCtl[6:0]
     8/10: $3\ALUCtl[6:0]
     9/10: $2\ALUCtl[6:0]
    10/10: $1\ALUCtl[6:0]

19.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\top.\CLKHF_POWERUP' from process `\top.$proc$toplevel.v:52$279'.
No latch inferred for signal `\top.\ENCLKHF' from process `\top.$proc$toplevel.v:51$278'.
No latch inferred for signal `\sign_mask_gen.\mask' from process `\sign_mask_gen.$proc$sail-core/verilog/dataMem_mask_gen.v:58$275'.
No latch inferred for signal `\csr_file.\RE' from process `\csr_file.$proc$sail-core/verilog/CSR.v:54$273'.
No latch inferred for signal `\imm_gen.\imm' from process `\imm_gen.$proc$sail-core/verilog/imm_gen.v:54$102'.
No latch inferred for signal `\alu.\Branch_Enable' from process `\alu.$proc$sail-core/verilog/alu.v:147$32'.
No latch inferred for signal `\alu.\ALUOut' from process `\alu.$proc$sail-core/verilog/alu.v:78$18'.
No latch inferred for signal `\ALUControl.\ALUCtl' from process `\ALUControl.$proc$sail-core/verilog/alu_control.v:82$8'.

19.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\csr_file.\rdVal_CSR' using process `\csr_file.$proc$sail-core/verilog/CSR.v:64$269'.
  created $dff cell `$procdff$848' with positive edge clock.
Creating register for signal `\regfile.\rdAddrA_buf' using process `\regfile.$proc$sail-core/verilog/register_file.v:95$247'.
  created $dff cell `$procdff$849' with positive edge clock.
Creating register for signal `\regfile.\rdAddrB_buf' using process `\regfile.$proc$sail-core/verilog/register_file.v:95$247'.
  created $dff cell `$procdff$850' with positive edge clock.
Creating register for signal `\regfile.\regDatA' using process `\regfile.$proc$sail-core/verilog/register_file.v:95$247'.
  created $dff cell `$procdff$851' with positive edge clock.
Creating register for signal `\regfile.\regDatB' using process `\regfile.$proc$sail-core/verilog/register_file.v:95$247'.
  created $dff cell `$procdff$852' with positive edge clock.
Creating register for signal `\regfile.\wrAddr_buf' using process `\regfile.$proc$sail-core/verilog/register_file.v:95$247'.
  created $dff cell `$procdff$853' with positive edge clock.
Creating register for signal `\regfile.\wrData_buf' using process `\regfile.$proc$sail-core/verilog/register_file.v:95$247'.
  created $dff cell `$procdff$854' with positive edge clock.
Creating register for signal `\regfile.\write_buf' using process `\regfile.$proc$sail-core/verilog/register_file.v:95$247'.
  created $dff cell `$procdff$855' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile$sail-core/verilog/register_file.v:97$246_ADDR' using process `\regfile.$proc$sail-core/verilog/register_file.v:95$247'.
  created $dff cell `$procdff$856' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile$sail-core/verilog/register_file.v:97$246_DATA' using process `\regfile.$proc$sail-core/verilog/register_file.v:95$247'.
  created $dff cell `$procdff$857' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN' using process `\regfile.$proc$sail-core/verilog/register_file.v:95$247'.
  created $dff cell `$procdff$858' with positive edge clock.
Creating register for signal `\data_mem.\read_data' using process `\data_mem.$proc$sail-core/verilog/data_mem.v:240$229'.
  created $dff cell `$procdff$859' with positive edge clock.
Creating register for signal `\data_mem.\clk_stall' using process `\data_mem.$proc$sail-core/verilog/data_mem.v:240$229'.
  created $dff cell `$procdff$860' with positive edge clock.
Creating register for signal `\data_mem.\state' using process `\data_mem.$proc$sail-core/verilog/data_mem.v:240$229'.
  created $dff cell `$procdff$861' with positive edge clock.
Creating register for signal `\data_mem.\word_buf' using process `\data_mem.$proc$sail-core/verilog/data_mem.v:240$229'.
  created $dff cell `$procdff$862' with positive edge clock.
Creating register for signal `\data_mem.\memread_buf' using process `\data_mem.$proc$sail-core/verilog/data_mem.v:240$229'.
  created $dff cell `$procdff$863' with positive edge clock.
Creating register for signal `\data_mem.\memwrite_buf' using process `\data_mem.$proc$sail-core/verilog/data_mem.v:240$229'.
  created $dff cell `$procdff$864' with positive edge clock.
Creating register for signal `\data_mem.\write_data_buffer' using process `\data_mem.$proc$sail-core/verilog/data_mem.v:240$229'.
  created $dff cell `$procdff$865' with positive edge clock.
Creating register for signal `\data_mem.\addr_buf' using process `\data_mem.$proc$sail-core/verilog/data_mem.v:240$229'.
  created $dff cell `$procdff$866' with positive edge clock.
Creating register for signal `\data_mem.\sign_mask_buf' using process `\data_mem.$proc$sail-core/verilog/data_mem.v:240$229'.
  created $dff cell `$procdff$867' with positive edge clock.
Creating register for signal `\data_mem.$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_ADDR' using process `\data_mem.$proc$sail-core/verilog/data_mem.v:240$229'.
  created $dff cell `$procdff$868' with positive edge clock.
Creating register for signal `\data_mem.$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_DATA' using process `\data_mem.$proc$sail-core/verilog/data_mem.v:240$229'.
  created $dff cell `$procdff$869' with positive edge clock.
Creating register for signal `\data_mem.$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN' using process `\data_mem.$proc$sail-core/verilog/data_mem.v:240$229'.
  created $dff cell `$procdff$870' with positive edge clock.
Creating register for signal `\data_mem.\led_reg' using process `\data_mem.$proc$sail-core/verilog/data_mem.v:231$225'.
  created $dff cell `$procdff$871' with positive edge clock.
Creating register for signal `\branch_predictor.\s' using process `\branch_predictor.$proc$sail-core/verilog/branch_predictor.v:101$86'.
  created $dff cell `$procdff$872' with positive edge clock.
Creating register for signal `\branch_predictor.\branch_mem_sig_reg' using process `\branch_predictor.$proc$sail-core/verilog/branch_predictor.v:92$85'.
  created $dff cell `$procdff$873' with negative edge clock.
Creating register for signal `\program_counter.\outAddr' using process `\program_counter.$proc$sail-core/verilog/program_counter.v:67$41'.
  created $dff cell `$procdff$874' with positive edge clock.
Creating register for signal `\program_counter.\bufferedOutAddr' using process `\program_counter.$proc$sail-core/verilog/program_counter.v:67$41'.
  created $dff cell `$procdff$875' with positive edge clock.
Creating register for signal `\mem_wb.\data_out' using process `\mem_wb.$proc$sail-core/verilog/pipeline_registers.v:145$16'.
  created $dff cell `$procdff$876' with positive edge clock.
Creating register for signal `\ex_mem.\data_out' using process `\ex_mem.$proc$sail-core/verilog/pipeline_registers.v:118$14'.
  created $dff cell `$procdff$877' with positive edge clock.
Creating register for signal `\id_ex.\data_out' using process `\id_ex.$proc$sail-core/verilog/pipeline_registers.v:91$12'.
  created $dff cell `$procdff$878' with positive edge clock.
Creating register for signal `\if_id.\data_out' using process `\if_id.$proc$sail-core/verilog/pipeline_registers.v:64$10'.
  created $dff cell `$procdff$879' with positive edge clock.

19.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `top.$proc$toplevel.v:52$279'.
Removing empty process `top.$proc$toplevel.v:51$278'.
Found and cleaned up 1 empty switch in `\sign_mask_gen.$proc$sail-core/verilog/dataMem_mask_gen.v:58$275'.
Removing empty process `sign_mask_gen.$proc$sail-core/verilog/dataMem_mask_gen.v:58$275'.
Removing empty process `csr_file.$proc$sail-core/verilog/CSR.v:0$274'.
Removing empty process `csr_file.$proc$sail-core/verilog/CSR.v:54$273'.
Found and cleaned up 1 empty switch in `\csr_file.$proc$sail-core/verilog/CSR.v:64$269'.
Removing empty process `csr_file.$proc$sail-core/verilog/CSR.v:64$269'.
Found and cleaned up 1 empty switch in `\regfile.$proc$sail-core/verilog/register_file.v:95$247'.
Removing empty process `regfile.$proc$sail-core/verilog/register_file.v:95$247'.
Removing empty process `data_mem.$proc$sail-core/verilog/data_mem.v:0$244'.
Removing empty process `data_mem.$proc$sail-core/verilog/data_mem.v:60$243'.
Found and cleaned up 4 empty switches in `\data_mem.$proc$sail-core/verilog/data_mem.v:240$229'.
Removing empty process `data_mem.$proc$sail-core/verilog/data_mem.v:240$229'.
Found and cleaned up 1 empty switch in `\data_mem.$proc$sail-core/verilog/data_mem.v:231$225'.
Removing empty process `data_mem.$proc$sail-core/verilog/data_mem.v:231$225'.
Removing empty process `imm_gen.$proc$sail-core/verilog/imm_gen.v:0$103'.
Found and cleaned up 1 empty switch in `\imm_gen.$proc$sail-core/verilog/imm_gen.v:54$102'.
Removing empty process `imm_gen.$proc$sail-core/verilog/imm_gen.v:54$102'.
Removing empty process `branch_predictor.$proc$sail-core/verilog/branch_predictor.v:0$101'.
Found and cleaned up 1 empty switch in `\branch_predictor.$proc$sail-core/verilog/branch_predictor.v:101$86'.
Removing empty process `branch_predictor.$proc$sail-core/verilog/branch_predictor.v:101$86'.
Removing empty process `branch_predictor.$proc$sail-core/verilog/branch_predictor.v:92$85'.
Removing empty process `program_counter.$proc$sail-core/verilog/program_counter.v:0$42'.
Removing empty process `program_counter.$proc$sail-core/verilog/program_counter.v:67$41'.
Removing empty process `alu.$proc$sail-core/verilog/alu.v:0$40'.
Found and cleaned up 1 empty switch in `\alu.$proc$sail-core/verilog/alu.v:147$32'.
Removing empty process `alu.$proc$sail-core/verilog/alu.v:147$32'.
Found and cleaned up 1 empty switch in `\alu.$proc$sail-core/verilog/alu.v:78$18'.
Removing empty process `alu.$proc$sail-core/verilog/alu.v:78$18'.
Removing empty process `mem_wb.$proc$sail-core/verilog/pipeline_registers.v:0$17'.
Removing empty process `mem_wb.$proc$sail-core/verilog/pipeline_registers.v:145$16'.
Removing empty process `ex_mem.$proc$sail-core/verilog/pipeline_registers.v:0$15'.
Removing empty process `ex_mem.$proc$sail-core/verilog/pipeline_registers.v:118$14'.
Removing empty process `id_ex.$proc$sail-core/verilog/pipeline_registers.v:0$13'.
Removing empty process `id_ex.$proc$sail-core/verilog/pipeline_registers.v:91$12'.
Removing empty process `if_id.$proc$sail-core/verilog/pipeline_registers.v:0$11'.
Removing empty process `if_id.$proc$sail-core/verilog/pipeline_registers.v:64$10'.
Removing empty process `ALUControl.$proc$sail-core/verilog/alu_control.v:0$9'.
Found and cleaned up 10 empty switches in `\ALUControl.$proc$sail-core/verilog/alu_control.v:82$8'.
Removing empty process `ALUControl.$proc$sail-core/verilog/alu_control.v:82$8'.
Cleaned up 22 empty switches.

19.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
Optimizing module sign_mask_gen.
<suppressed ~1 debug messages>
Optimizing module csr_file.
<suppressed ~2 debug messages>
Optimizing module regfile.
<suppressed ~4 debug messages>
Optimizing module data_mem.
<suppressed ~24 debug messages>
Optimizing module control.
Optimizing module imm_gen.
Optimizing module branch_predictor.
Optimizing module ForwardingUnit.
<suppressed ~8 debug messages>
Optimizing module branch_decision.
Optimizing module program_counter.
Optimizing module alu.
<suppressed ~3 debug messages>
Optimizing module mem_wb.
Optimizing module ex_mem.
Optimizing module id_ex.
Optimizing module if_id.
Optimizing module ALUControl.
<suppressed ~9 debug messages>
Optimizing module mux2to1.
Optimizing module cpu.
Optimizing module adder.

19.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Finding unused cells or wires in module \sign_mask_gen..
Finding unused cells or wires in module \csr_file..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \data_mem..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \imm_gen..
Finding unused cells or wires in module \branch_predictor..
Finding unused cells or wires in module \ForwardingUnit..
Finding unused cells or wires in module \branch_decision..
Finding unused cells or wires in module \program_counter..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \mem_wb..
Finding unused cells or wires in module \ex_mem..
Finding unused cells or wires in module \id_ex..
Finding unused cells or wires in module \if_id..
Finding unused cells or wires in module \ALUControl..
Finding unused cells or wires in module \mux2to1..
Finding unused cells or wires in module \cpu..
Finding unused cells or wires in module \adder..
Removed 0 unused cells and 168 unused wires.
<suppressed ~22 debug messages>

19.6. Executing CHECK pass (checking for obvious problems).
checking module ALUControl..
checking module ForwardingUnit..
checking module adder..
checking module alu..
checking module branch_decision..
checking module branch_predictor..
checking module control..
checking module cpu..
checking module csr_file..
checking module data_mem..
checking module ex_mem..
checking module id_ex..
checking module if_id..
checking module imm_gen..
checking module mem_wb..
checking module mux2to1..
checking module program_counter..
checking module regfile..
checking module sign_mask_gen..
checking module top..
found and reported 0 problems.

19.7. Executing OPT pass (performing simple optimizations).

19.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALUControl.
Optimizing module ForwardingUnit.
Optimizing module adder.
Optimizing module alu.
Optimizing module branch_decision.
Optimizing module branch_predictor.
Optimizing module control.
Optimizing module cpu.
Optimizing module csr_file.
Optimizing module data_mem.
Optimizing module ex_mem.
Optimizing module id_ex.
Optimizing module if_id.
Optimizing module imm_gen.
Optimizing module mem_wb.
Optimizing module mux2to1.
Optimizing module program_counter.
Optimizing module regfile.
Optimizing module sign_mask_gen.
Optimizing module top.

19.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALUControl'.
<suppressed ~108 debug messages>
Finding identical cells in module `\ForwardingUnit'.
<suppressed ~9 debug messages>
Finding identical cells in module `\adder'.
Finding identical cells in module `\alu'.
<suppressed ~9 debug messages>
Finding identical cells in module `\branch_decision'.
<suppressed ~6 debug messages>
Finding identical cells in module `\branch_predictor'.
<suppressed ~6 debug messages>
Finding identical cells in module `\control'.
<suppressed ~60 debug messages>
Finding identical cells in module `\cpu'.
Finding identical cells in module `\csr_file'.
Finding identical cells in module `\data_mem'.
<suppressed ~72 debug messages>
Finding identical cells in module `\ex_mem'.
Finding identical cells in module `\id_ex'.
Finding identical cells in module `\if_id'.
Finding identical cells in module `\imm_gen'.
Finding identical cells in module `\mem_wb'.
Finding identical cells in module `\mux2to1'.
Finding identical cells in module `\program_counter'.
Finding identical cells in module `\regfile'.
<suppressed ~3 debug messages>
Finding identical cells in module `\sign_mask_gen'.
Finding identical cells in module `\top'.
Removed a total of 91 cells.

19.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALUControl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$740.
    dead port 2/2 on $mux $procmux$742.
    dead port 2/2 on $mux $procmux$756.
    dead port 2/2 on $mux $procmux$795.
    dead port 2/2 on $mux $procmux$758.
    dead port 2/2 on $mux $procmux$806.
    dead port 2/2 on $mux $procmux$820.
    dead port 2/2 on $mux $procmux$771.
    dead port 2/2 on $mux $procmux$731.
    dead port 2/2 on $mux $procmux$836.
    dead port 2/2 on $mux $procmux$779.
    dead port 2/2 on $mux $procmux$781.
Running muxtree optimizer on module \ForwardingUnit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \adder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \branch_decision..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \branch_predictor..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \control..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \csr_file..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \data_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ex_mem..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \id_ex..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \if_id..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \imm_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mem_wb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mux2to1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \program_counter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \regfile..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sign_mask_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 12 multiplexer ports.
<suppressed ~31 debug messages>

19.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALUControl.
    New ctrl vector for $pmux cell $procmux$762: { $procmux$757_CMP $procmux$769_CMP $auto$opt_reduce.cc:134:opt_mux$881 $procmux$766_CMP $procmux$741_CMP $procmux$764_CMP $procmux$763_CMP }
    New ctrl vector for $pmux cell $procmux$814: $auto$opt_reduce.cc:134:opt_mux$883
    New ctrl vector for $pmux cell $procmux$839: { $auto$opt_reduce.cc:134:opt_mux$885 $procmux$837_CMP $procmux$821_CMP $procmux$807_CMP $procmux$782_CMP $procmux$743_CMP $procmux$732_CMP }
    New ctrl vector for $pmux cell $procmux$802: $auto$opt_reduce.cc:134:opt_mux$887
    New ctrl vector for $pmux cell $procmux$786: { $procmux$757_CMP $auto$opt_reduce.cc:134:opt_mux$889 $procmux$766_CMP $procmux$764_CMP $procmux$763_CMP $procmux$769_CMP $procmux$741_CMP }
  Optimizing cells in module \ALUControl.
  Optimizing cells in module \ForwardingUnit.
  Optimizing cells in module \adder.
  Optimizing cells in module \alu.
    New ctrl vector for $pmux cell $procmux$712: { $procmux$724_CMP $procmux$722_CMP $procmux$721_CMP $procmux$720_CMP $procmux$719_CMP $procmux$718_CMP $procmux$717_CMP $procmux$716_CMP $procmux$715_CMP $auto$opt_reduce.cc:134:opt_mux$891 $procmux$713_CMP }
  Optimizing cells in module \alu.
  Optimizing cells in module \branch_decision.
  Optimizing cells in module \branch_predictor.
  Optimizing cells in module \control.
  Optimizing cells in module \cpu.
  Optimizing cells in module \csr_file.
  Optimizing cells in module \data_mem.
    Consolidated identical input bits for $mux cell $procmux$633:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232
      New ports: A=1'0, B=1'1, Y=$0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0]
      New connections: $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [31:1] = { $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0] $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0] $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0] $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0] $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0] $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0] $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0] $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0] $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0] $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0] $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0] $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0] $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0] $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0] $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0] $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0] $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0] $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0] $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0] $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0] $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0] $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0] $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0] $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0] $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0] $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0] $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0] $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0] $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0] $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0] $0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_EN[31:0]$232 [0] }
    New ctrl vector for $pmux cell $procmux$668: { $procmux$643_CMP $procmux$667_CMP $auto$opt_reduce.cc:134:opt_mux$893 }
    New ctrl vector for $pmux cell $procmux$680: { $procmux$643_CMP $auto$opt_reduce.cc:134:opt_mux$895 }
  Optimizing cells in module \data_mem.
  Optimizing cells in module \ex_mem.
  Optimizing cells in module \id_ex.
  Optimizing cells in module \if_id.
  Optimizing cells in module \imm_gen.
    New ctrl vector for $pmux cell $procmux$692: { $procmux$698_CMP $procmux$697_CMP $auto$opt_reduce.cc:134:opt_mux$897 $procmux$694_CMP $procmux$693_CMP }
  Optimizing cells in module \imm_gen.
  Optimizing cells in module \mem_wb.
  Optimizing cells in module \mux2to1.
  Optimizing cells in module \program_counter.
  Optimizing cells in module \regfile.
    Consolidated identical input bits for $mux cell $procmux$627:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0]
      New connections: $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [31:1] = { $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0] $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0] $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0] $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0] $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0] $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0] $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0] $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0] $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0] $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0] $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0] $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0] $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0] $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0] $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0] $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0] $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0] $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0] $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0] $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0] $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0] $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0] $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0] $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0] $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0] $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0] $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0] $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0] $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0] $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0] $0$memwr$\regfile$sail-core/verilog/register_file.v:97$246_EN[31:0]$250 [0] }
  Optimizing cells in module \regfile.
  Optimizing cells in module \sign_mask_gen.
  Optimizing cells in module \top.
Performed a total of 11 changes.

19.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALUControl'.
<suppressed ~6 debug messages>
Finding identical cells in module `\ForwardingUnit'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\alu'.
Finding identical cells in module `\branch_decision'.
Finding identical cells in module `\branch_predictor'.
Finding identical cells in module `\control'.
Finding identical cells in module `\cpu'.
Finding identical cells in module `\csr_file'.
Finding identical cells in module `\data_mem'.
<suppressed ~3 debug messages>
Finding identical cells in module `\ex_mem'.
Finding identical cells in module `\id_ex'.
Finding identical cells in module `\if_id'.
Finding identical cells in module `\imm_gen'.
Finding identical cells in module `\mem_wb'.
Finding identical cells in module `\mux2to1'.
Finding identical cells in module `\program_counter'.
Finding identical cells in module `\regfile'.
Finding identical cells in module `\sign_mask_gen'.
Finding identical cells in module `\top'.
Removed a total of 3 cells.

19.7.6. Executing OPT_RMDFF pass (remove dff with constant values).

19.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALUControl..
Finding unused cells or wires in module \ForwardingUnit..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \branch_decision..
Finding unused cells or wires in module \branch_predictor..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \cpu..
Finding unused cells or wires in module \csr_file..
Finding unused cells or wires in module \data_mem..
Finding unused cells or wires in module \ex_mem..
Finding unused cells or wires in module \id_ex..
Finding unused cells or wires in module \if_id..
Finding unused cells or wires in module \imm_gen..
Finding unused cells or wires in module \mem_wb..
Finding unused cells or wires in module \mux2to1..
Finding unused cells or wires in module \program_counter..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \sign_mask_gen..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 106 unused wires.
<suppressed ~8 debug messages>

19.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALUControl.
Optimizing module ForwardingUnit.
Optimizing module adder.
Optimizing module alu.
Optimizing module branch_decision.
Optimizing module branch_predictor.
Optimizing module control.
Optimizing module cpu.
Optimizing module csr_file.
Optimizing module data_mem.
Optimizing module ex_mem.
Optimizing module id_ex.
Optimizing module if_id.
Optimizing module imm_gen.
Optimizing module mem_wb.
Optimizing module mux2to1.
Optimizing module program_counter.
Optimizing module regfile.
Optimizing module sign_mask_gen.
Optimizing module top.

19.7.9. Rerunning OPT passes. (Maybe there is more to do..)

19.7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALUControl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ForwardingUnit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \adder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \branch_decision..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \branch_predictor..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \control..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \csr_file..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \data_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ex_mem..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \id_ex..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \if_id..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \imm_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mem_wb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mux2to1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \program_counter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \regfile..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sign_mask_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

19.7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALUControl.
  Optimizing cells in module \ForwardingUnit.
  Optimizing cells in module \adder.
  Optimizing cells in module \alu.
  Optimizing cells in module \branch_decision.
  Optimizing cells in module \branch_predictor.
  Optimizing cells in module \control.
  Optimizing cells in module \cpu.
  Optimizing cells in module \csr_file.
  Optimizing cells in module \data_mem.
  Optimizing cells in module \ex_mem.
  Optimizing cells in module \id_ex.
  Optimizing cells in module \if_id.
  Optimizing cells in module \imm_gen.
  Optimizing cells in module \mem_wb.
  Optimizing cells in module \mux2to1.
  Optimizing cells in module \program_counter.
  Optimizing cells in module \regfile.
  Optimizing cells in module \sign_mask_gen.
  Optimizing cells in module \top.
Performed a total of 0 changes.

19.7.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALUControl'.
Finding identical cells in module `\ForwardingUnit'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\alu'.
Finding identical cells in module `\branch_decision'.
Finding identical cells in module `\branch_predictor'.
Finding identical cells in module `\control'.
Finding identical cells in module `\cpu'.
Finding identical cells in module `\csr_file'.
Finding identical cells in module `\data_mem'.
Finding identical cells in module `\ex_mem'.
Finding identical cells in module `\id_ex'.
Finding identical cells in module `\if_id'.
Finding identical cells in module `\imm_gen'.
Finding identical cells in module `\mem_wb'.
Finding identical cells in module `\mux2to1'.
Finding identical cells in module `\program_counter'.
Finding identical cells in module `\regfile'.
Finding identical cells in module `\sign_mask_gen'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

19.7.13. Executing OPT_RMDFF pass (remove dff with constant values).

19.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALUControl..
Finding unused cells or wires in module \ForwardingUnit..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \branch_decision..
Finding unused cells or wires in module \branch_predictor..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \cpu..
Finding unused cells or wires in module \csr_file..
Finding unused cells or wires in module \data_mem..
Finding unused cells or wires in module \ex_mem..
Finding unused cells or wires in module \id_ex..
Finding unused cells or wires in module \if_id..
Finding unused cells or wires in module \imm_gen..
Finding unused cells or wires in module \mem_wb..
Finding unused cells or wires in module \mux2to1..
Finding unused cells or wires in module \program_counter..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \sign_mask_gen..
Finding unused cells or wires in module \top..

19.7.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALUControl.
Optimizing module ForwardingUnit.
Optimizing module adder.
Optimizing module alu.
Optimizing module branch_decision.
Optimizing module branch_predictor.
Optimizing module control.
Optimizing module cpu.
Optimizing module csr_file.
Optimizing module data_mem.
Optimizing module ex_mem.
Optimizing module id_ex.
Optimizing module if_id.
Optimizing module imm_gen.
Optimizing module mem_wb.
Optimizing module mux2to1.
Optimizing module program_counter.
Optimizing module regfile.
Optimizing module sign_mask_gen.
Optimizing module top.

19.7.16. Finished OPT passes. (There is nothing left to do.)

19.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 4 bits (of 7) from mux cell ALUControl.$procmux$727 ($pmux).
Removed top 1 bits (of 2) from port B of cell ALUControl.$procmux$730_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell ALUControl.$procmux$743_CMP0 ($eq).
Removed top 4 bits (of 7) from mux cell ALUControl.$procmux$753 ($pmux).
Removed top 1 bits (of 3) from port B of cell ALUControl.$procmux$767_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell ALUControl.$procmux$768_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell ALUControl.$procmux$769_CMP0 ($eq).
Removed top 4 bits (of 7) from mux cell ALUControl.$procmux$776 ($pmux).
Removed top 2 bits (of 7) from port B of cell ALUControl.$procmux$782_CMP0 ($eq).
Removed top 3 bits (of 7) from mux cell ALUControl.$procmux$786 ($pmux).
Removed top 3 bits (of 7) from mux cell ALUControl.$procmux$802 ($mux).
Removed top 1 bits (of 7) from port B of cell ALUControl.$procmux$807_CMP0 ($eq).
Removed top 3 bits (of 7) from mux cell ALUControl.$procmux$814 ($mux).
Removed top 5 bits (of 7) from port B of cell ALUControl.$procmux$821_CMP0 ($eq).
Removed top 2 bits (of 7) from port B of cell ALUControl.$procmux$846_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell ALUControl.$procmux$847_CMP0 ($eq).
Removed top 4 bits (of 7) from wire ALUControl.$10\ALUCtl[6:0].
Removed top 3 bits (of 7) from wire ALUControl.$3\ALUCtl[6:0].
Removed top 3 bits (of 7) from wire ALUControl.$4\ALUCtl[6:0].
Removed top 31 bits (of 32) from mux cell alu.$ternary$sail-core/verilog/alu.v:103$24 ($mux).
Removed top 1 bits (of 3) from port B of cell alu.$procmux$708_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell alu.$procmux$709_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell alu.$procmux$710_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell alu.$procmux$717_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell alu.$procmux$718_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell alu.$procmux$719_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell alu.$procmux$720_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell alu.$procmux$721_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell alu.$procmux$722_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell alu.$procmux$723_CMP0 ($eq).
Removed top 31 bits (of 32) from wire alu.$ternary$sail-core/verilog/alu.v:103$24_Y.
Removed top 22 address bits (of 32) from memory init port csr_file.$meminit$\csr_file$sail-core/verilog/CSR.v:0$272 (csr_file).
Removed top 22 address bits (of 32) from memory init port data_mem.$meminit$\data_block$sail-core/verilog/data_mem.v:0$241 (data_block).
Removed top 22 address bits (of 32) from memory read port data_mem.$memrd$\data_block$sail-core/verilog/data_mem.v:261$236 (data_block).
Removed top 22 address bits (of 32) from memory write port data_mem.$memwr$\data_block$sail-core/verilog/data_mem.v:0$242 (data_block).
Removed top 18 bits (of 32) from port B of cell data_mem.$eq$sail-core/verilog/data_mem.v:232$227 ($eq).
Removed top 19 bits (of 32) from port B of cell data_mem.$sub$sail-core/verilog/data_mem.v:261$237 ($sub).
Removed top 18 bits (of 32) from port Y of cell data_mem.$sub$sail-core/verilog/data_mem.v:261$237 ($sub).
Removed top 30 bits (of 32) from port B of cell data_mem.$procmux$634_CMP0 ($eq).
Removed cell data_mem.$procmux$635 ($mux).
Removed cell data_mem.$procmux$637 ($mux).
Removed top 31 bits (of 32) from port B of cell data_mem.$procmux$667_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell data_mem.$procmux$670_CMP0 ($eq).
Removed top 18 bits (of 32) from FF cell data_mem.$procdff$868 ($dff).
Removed top 31 bits (of 32) from FF cell data_mem.$procdff$870 ($dff).
Removed top 4 bits (of 14) from FF cell data_mem.$procdff$868 ($dff).
Removed top 4 bits (of 14) from port Y of cell data_mem.$sub$sail-core/verilog/data_mem.v:261$237 ($sub).
Removed top 12 bits (of 13) from port B of cell data_mem.$sub$sail-core/verilog/data_mem.v:261$237 ($sub).
Removed top 22 bits (of 32) from wire data_mem.$0$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_ADDR[31:0]$230.
Removed top 22 bits (of 32) from wire data_mem.$memwr$\data_block$sail-core/verilog/data_mem.v:283$160_ADDR.
Removed top 22 bits (of 32) from wire data_mem.$sub$sail-core/verilog/data_mem.v:261$237_Y.
Removed top 1 bits (of 32) from mux cell imm_gen.$procmux$692 ($pmux).
Removed top 3 bits (of 4) from port B of cell imm_gen.$procmux$695_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell imm_gen.$procmux$696_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell imm_gen.$procmux$697_CMP0 ($eq).
Removed top 27 address bits (of 32) from memory init port regfile.$meminit$\regfile$sail-core/verilog/register_file.v:0$266 (regfile).
Removed cell regfile.$procmux$629 ($mux).
Removed cell regfile.$procmux$631 ($mux).
Removed top 27 bits (of 32) from FF cell regfile.$procdff$853 ($dff).
Removed top 31 bits (of 32) from FF cell regfile.$procdff$858 ($dff).
Removed top 27 bits (of 32) from port A of cell regfile.$eq$sail-core/verilog/register_file.v:108$256 ($eq).
Removed top 27 bits (of 32) from port A of cell regfile.$eq$sail-core/verilog/register_file.v:109$261 ($eq).
Removed top 27 bits (of 32) from wire regfile.wrAddr_buf.
Removed top 1 bits (of 2) from port B of cell sign_mask_gen.$procmux$623_CMP0 ($eq).

19.9. Executing PEEPOPT pass (run peephole optimizers).

19.10. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALUControl..
Finding unused cells or wires in module \ForwardingUnit..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \branch_decision..
Finding unused cells or wires in module \branch_predictor..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \cpu..
Finding unused cells or wires in module \csr_file..
Finding unused cells or wires in module \data_mem..
Finding unused cells or wires in module \ex_mem..
Finding unused cells or wires in module \id_ex..
Finding unused cells or wires in module \if_id..
Finding unused cells or wires in module \imm_gen..
Finding unused cells or wires in module \mem_wb..
Finding unused cells or wires in module \mux2to1..
Finding unused cells or wires in module \program_counter..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \sign_mask_gen..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 12 unused wires.
<suppressed ~4 debug messages>

19.11. Executing SHARE pass (SAT-based resource sharing).
Found 3 cells in module alu that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$sail-core/verilog/alu.v:113$26 ($sshr):
    Found 1 activation_patterns using ctrl signal $procmux$718_CMP.
    No candidates found.
  Analyzing resource sharing options for $shr$sail-core/verilog/alu.v:108$25 ($shr):
    Found 1 activation_patterns using ctrl signal $procmux$719_CMP.
    No candidates found.
  Analyzing resource sharing options for $shl$sail-core/verilog/alu.v:118$27 ($shl):
    Found 1 activation_patterns using ctrl signal $procmux$717_CMP.
    No candidates found.

19.12. Executing TECHMAP pass (map to technology primitives).

19.12.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

19.12.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~108 debug messages>

19.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALUControl.
Optimizing module ForwardingUnit.
Optimizing module adder.
Optimizing module alu.
Optimizing module branch_decision.
Optimizing module branch_predictor.
Optimizing module control.
Optimizing module cpu.
Optimizing module csr_file.
Optimizing module data_mem.
<suppressed ~1 debug messages>
Optimizing module ex_mem.
Optimizing module id_ex.
Optimizing module if_id.
Optimizing module imm_gen.
Optimizing module mem_wb.
Optimizing module mux2to1.
Optimizing module program_counter.
Optimizing module regfile.
Optimizing module sign_mask_gen.
Optimizing module top.

19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALUControl..
Finding unused cells or wires in module \ForwardingUnit..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \branch_decision..
Finding unused cells or wires in module \branch_predictor..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \cpu..
Finding unused cells or wires in module \csr_file..
Finding unused cells or wires in module \data_mem..
Finding unused cells or wires in module \ex_mem..
Finding unused cells or wires in module \id_ex..
Finding unused cells or wires in module \if_id..
Finding unused cells or wires in module \imm_gen..
Finding unused cells or wires in module \mem_wb..
Finding unused cells or wires in module \mux2to1..
Finding unused cells or wires in module \program_counter..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \sign_mask_gen..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

19.15. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module ALUControl:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module ForwardingUnit:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module adder:
  creating $macc model for $add$sail-core/verilog/adder.v:53$1 ($add).
  creating $alu model for $macc $add$sail-core/verilog/adder.v:53$1.
  creating $alu cell for $add$sail-core/verilog/adder.v:53$1: $auto$alumacc.cc:485:replace_alu$906
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module alu:
  creating $macc model for $add$sail-core/verilog/alu.v:93$21 ($add).
  creating $macc model for $sub$sail-core/verilog/alu.v:98$22 ($sub).
  creating $alu model for $macc $sub$sail-core/verilog/alu.v:98$22.
  creating $alu model for $macc $add$sail-core/verilog/alu.v:93$21.
  creating $alu model for $ge$sail-core/verilog/alu.v:152$37 ($ge): new $alu
  creating $alu model for $ge$sail-core/verilog/alu.v:154$39 ($ge): merged with $sub$sail-core/verilog/alu.v:98$22.
  creating $alu model for $lt$sail-core/verilog/alu.v:103$23 ($lt): merged with $ge$sail-core/verilog/alu.v:152$37.
  creating $alu model for $lt$sail-core/verilog/alu.v:153$38 ($lt): merged with $sub$sail-core/verilog/alu.v:98$22.
  creating $alu cell for $ge$sail-core/verilog/alu.v:152$37, $lt$sail-core/verilog/alu.v:103$23: $auto$alumacc.cc:485:replace_alu$910
  creating $alu cell for $add$sail-core/verilog/alu.v:93$21: $auto$alumacc.cc:485:replace_alu$925
  creating $alu cell for $sub$sail-core/verilog/alu.v:98$22, $ge$sail-core/verilog/alu.v:154$39, $lt$sail-core/verilog/alu.v:153$38: $auto$alumacc.cc:485:replace_alu$928
  created 3 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module branch_decision:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module branch_predictor:
  creating $macc model for $add$sail-core/verilog/branch_predictor.v:108$99 ($add).
  creating $alu model for $macc $add$sail-core/verilog/branch_predictor.v:108$99.
  creating $alu cell for $add$sail-core/verilog/branch_predictor.v:108$99: $auto$alumacc.cc:485:replace_alu$941
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module control:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module cpu:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module csr_file:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module data_mem:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module ex_mem:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module id_ex:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module if_id:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module imm_gen:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module mem_wb:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module mux2to1:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module program_counter:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module regfile:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module sign_mask_gen:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module top:
  created 0 $alu and 0 $macc cells.

19.16. Executing OPT pass (performing simple optimizations).

19.16.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALUControl.
Optimizing module ForwardingUnit.
Optimizing module adder.
Optimizing module alu.
Optimizing module branch_decision.
Optimizing module branch_predictor.
Optimizing module control.
Optimizing module cpu.
Optimizing module csr_file.
Optimizing module data_mem.
Optimizing module ex_mem.
Optimizing module id_ex.
Optimizing module if_id.
Optimizing module imm_gen.
Optimizing module mem_wb.
Optimizing module mux2to1.
Optimizing module program_counter.
Optimizing module regfile.
Optimizing module sign_mask_gen.
Optimizing module top.

19.16.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALUControl'.
Finding identical cells in module `\ForwardingUnit'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\alu'.
Finding identical cells in module `\branch_decision'.
Finding identical cells in module `\branch_predictor'.
Finding identical cells in module `\control'.
Finding identical cells in module `\cpu'.
Finding identical cells in module `\csr_file'.
Finding identical cells in module `\data_mem'.
Finding identical cells in module `\ex_mem'.
Finding identical cells in module `\id_ex'.
Finding identical cells in module `\if_id'.
Finding identical cells in module `\imm_gen'.
Finding identical cells in module `\mem_wb'.
Finding identical cells in module `\mux2to1'.
Finding identical cells in module `\program_counter'.
Finding identical cells in module `\regfile'.
<suppressed ~6 debug messages>
Finding identical cells in module `\sign_mask_gen'.
Finding identical cells in module `\top'.
Removed a total of 2 cells.

19.16.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALUControl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ForwardingUnit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \adder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \branch_decision..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \branch_predictor..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \control..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \csr_file..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \data_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ex_mem..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \id_ex..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \if_id..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \imm_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mem_wb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mux2to1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \program_counter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \regfile..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sign_mask_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~29 debug messages>

19.16.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALUControl.
  Optimizing cells in module \ForwardingUnit.
  Optimizing cells in module \adder.
  Optimizing cells in module \alu.
  Optimizing cells in module \branch_decision.
  Optimizing cells in module \branch_predictor.
  Optimizing cells in module \control.
  Optimizing cells in module \cpu.
  Optimizing cells in module \csr_file.
  Optimizing cells in module \data_mem.
  Optimizing cells in module \ex_mem.
  Optimizing cells in module \id_ex.
  Optimizing cells in module \if_id.
  Optimizing cells in module \imm_gen.
  Optimizing cells in module \mem_wb.
  Optimizing cells in module \mux2to1.
  Optimizing cells in module \program_counter.
  Optimizing cells in module \regfile.
  Optimizing cells in module \sign_mask_gen.
  Optimizing cells in module \top.
Performed a total of 0 changes.

19.16.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALUControl'.
Finding identical cells in module `\ForwardingUnit'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\alu'.
Finding identical cells in module `\branch_decision'.
Finding identical cells in module `\branch_predictor'.
Finding identical cells in module `\control'.
Finding identical cells in module `\cpu'.
Finding identical cells in module `\csr_file'.
Finding identical cells in module `\data_mem'.
Finding identical cells in module `\ex_mem'.
Finding identical cells in module `\id_ex'.
Finding identical cells in module `\if_id'.
Finding identical cells in module `\imm_gen'.
Finding identical cells in module `\mem_wb'.
Finding identical cells in module `\mux2to1'.
Finding identical cells in module `\program_counter'.
Finding identical cells in module `\regfile'.
Finding identical cells in module `\sign_mask_gen'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

19.16.6. Executing OPT_RMDFF pass (remove dff with constant values).

19.16.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALUControl..
Finding unused cells or wires in module \ForwardingUnit..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \branch_decision..
Finding unused cells or wires in module \branch_predictor..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \cpu..
Finding unused cells or wires in module \csr_file..
Finding unused cells or wires in module \data_mem..
Finding unused cells or wires in module \ex_mem..
Finding unused cells or wires in module \id_ex..
Finding unused cells or wires in module \if_id..
Finding unused cells or wires in module \imm_gen..
Finding unused cells or wires in module \mem_wb..
Finding unused cells or wires in module \mux2to1..
Finding unused cells or wires in module \program_counter..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \sign_mask_gen..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 6 unused wires.
<suppressed ~2 debug messages>

19.16.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALUControl.
Optimizing module ForwardingUnit.
Optimizing module adder.
Optimizing module alu.
Optimizing module branch_decision.
Optimizing module branch_predictor.
Optimizing module control.
Optimizing module cpu.
Optimizing module csr_file.
Optimizing module data_mem.
Optimizing module ex_mem.
Optimizing module id_ex.
Optimizing module if_id.
Optimizing module imm_gen.
Optimizing module mem_wb.
Optimizing module mux2to1.
Optimizing module program_counter.
Optimizing module regfile.
Optimizing module sign_mask_gen.
Optimizing module top.

19.16.9. Rerunning OPT passes. (Maybe there is more to do..)

19.16.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALUControl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ForwardingUnit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \adder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \branch_decision..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \branch_predictor..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \control..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \csr_file..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \data_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ex_mem..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \id_ex..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \if_id..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \imm_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mem_wb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mux2to1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \program_counter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \regfile..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sign_mask_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~29 debug messages>

19.16.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALUControl.
  Optimizing cells in module \ForwardingUnit.
  Optimizing cells in module \adder.
  Optimizing cells in module \alu.
  Optimizing cells in module \branch_decision.
  Optimizing cells in module \branch_predictor.
  Optimizing cells in module \control.
  Optimizing cells in module \cpu.
  Optimizing cells in module \csr_file.
  Optimizing cells in module \data_mem.
  Optimizing cells in module \ex_mem.
  Optimizing cells in module \id_ex.
  Optimizing cells in module \if_id.
  Optimizing cells in module \imm_gen.
  Optimizing cells in module \mem_wb.
  Optimizing cells in module \mux2to1.
  Optimizing cells in module \program_counter.
  Optimizing cells in module \regfile.
  Optimizing cells in module \sign_mask_gen.
  Optimizing cells in module \top.
Performed a total of 0 changes.

19.16.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALUControl'.
Finding identical cells in module `\ForwardingUnit'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\alu'.
Finding identical cells in module `\branch_decision'.
Finding identical cells in module `\branch_predictor'.
Finding identical cells in module `\control'.
Finding identical cells in module `\cpu'.
Finding identical cells in module `\csr_file'.
Finding identical cells in module `\data_mem'.
Finding identical cells in module `\ex_mem'.
Finding identical cells in module `\id_ex'.
Finding identical cells in module `\if_id'.
Finding identical cells in module `\imm_gen'.
Finding identical cells in module `\mem_wb'.
Finding identical cells in module `\mux2to1'.
Finding identical cells in module `\program_counter'.
Finding identical cells in module `\regfile'.
Finding identical cells in module `\sign_mask_gen'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

19.16.13. Executing OPT_RMDFF pass (remove dff with constant values).

19.16.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALUControl..
Finding unused cells or wires in module \ForwardingUnit..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \branch_decision..
Finding unused cells or wires in module \branch_predictor..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \cpu..
Finding unused cells or wires in module \csr_file..
Finding unused cells or wires in module \data_mem..
Finding unused cells or wires in module \ex_mem..
Finding unused cells or wires in module \id_ex..
Finding unused cells or wires in module \if_id..
Finding unused cells or wires in module \imm_gen..
Finding unused cells or wires in module \mem_wb..
Finding unused cells or wires in module \mux2to1..
Finding unused cells or wires in module \program_counter..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \sign_mask_gen..
Finding unused cells or wires in module \top..

19.16.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALUControl.
Optimizing module ForwardingUnit.
Optimizing module adder.
Optimizing module alu.
Optimizing module branch_decision.
Optimizing module branch_predictor.
Optimizing module control.
Optimizing module cpu.
Optimizing module csr_file.
Optimizing module data_mem.
Optimizing module ex_mem.
Optimizing module id_ex.
Optimizing module if_id.
Optimizing module imm_gen.
Optimizing module mem_wb.
Optimizing module mux2to1.
Optimizing module program_counter.
Optimizing module regfile.
Optimizing module sign_mask_gen.
Optimizing module top.

19.16.16. Finished OPT passes. (There is nothing left to do.)

19.17. Executing FSM pass (extract and optimize FSM).

19.17.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking data_mem.state as FSM state register:
    Register has an initialization value.

19.17.2. Executing FSM_EXTRACT pass (extracting FSM from design).

19.17.3. Executing FSM_OPT pass (simple optimizations of FSMs).

19.17.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALUControl..
Finding unused cells or wires in module \ForwardingUnit..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \branch_decision..
Finding unused cells or wires in module \branch_predictor..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \cpu..
Finding unused cells or wires in module \csr_file..
Finding unused cells or wires in module \data_mem..
Finding unused cells or wires in module \ex_mem..
Finding unused cells or wires in module \id_ex..
Finding unused cells or wires in module \if_id..
Finding unused cells or wires in module \imm_gen..
Finding unused cells or wires in module \mem_wb..
Finding unused cells or wires in module \mux2to1..
Finding unused cells or wires in module \program_counter..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \sign_mask_gen..
Finding unused cells or wires in module \top..

19.17.5. Executing FSM_OPT pass (simple optimizations of FSMs).

19.17.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

19.17.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

19.17.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

19.18. Executing OPT pass (performing simple optimizations).

19.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALUControl.
Optimizing module ForwardingUnit.
Optimizing module adder.
Optimizing module alu.
Optimizing module branch_decision.
Optimizing module branch_predictor.
Optimizing module control.
Optimizing module cpu.
Optimizing module csr_file.
Optimizing module data_mem.
Optimizing module ex_mem.
Optimizing module id_ex.
Optimizing module if_id.
Optimizing module imm_gen.
Optimizing module mem_wb.
Optimizing module mux2to1.
Optimizing module program_counter.
Optimizing module regfile.
Optimizing module sign_mask_gen.
Optimizing module top.

19.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALUControl'.
Finding identical cells in module `\ForwardingUnit'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\alu'.
Finding identical cells in module `\branch_decision'.
Finding identical cells in module `\branch_predictor'.
Finding identical cells in module `\control'.
Finding identical cells in module `\cpu'.
Finding identical cells in module `\csr_file'.
Finding identical cells in module `\data_mem'.
Finding identical cells in module `\ex_mem'.
Finding identical cells in module `\id_ex'.
Finding identical cells in module `\if_id'.
Finding identical cells in module `\imm_gen'.
Finding identical cells in module `\mem_wb'.
Finding identical cells in module `\mux2to1'.
Finding identical cells in module `\program_counter'.
Finding identical cells in module `\regfile'.
Finding identical cells in module `\sign_mask_gen'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

19.18.3. Executing OPT_RMDFF pass (remove dff with constant values).

19.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALUControl..
Finding unused cells or wires in module \ForwardingUnit..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \branch_decision..
Finding unused cells or wires in module \branch_predictor..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \cpu..
Finding unused cells or wires in module \csr_file..
Finding unused cells or wires in module \data_mem..
Finding unused cells or wires in module \ex_mem..
Finding unused cells or wires in module \id_ex..
Finding unused cells or wires in module \if_id..
Finding unused cells or wires in module \imm_gen..
Finding unused cells or wires in module \mem_wb..
Finding unused cells or wires in module \mux2to1..
Finding unused cells or wires in module \program_counter..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \sign_mask_gen..
Finding unused cells or wires in module \top..

19.18.5. Finished fast OPT passes.

19.19. Executing MEMORY pass.

19.19.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

19.19.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$memrd$\csr_file$sail-core/verilog/CSR.v:66$270' in module `\csr_file': no (compatible) $dff found.
Checking cell `$memwr$\data_block$sail-core/verilog/data_mem.v:0$242' in module `\data_mem': merged $dff to cell.
Checking cell `$memrd$\data_block$sail-core/verilog/data_mem.v:261$236' in module `\data_mem': merged data $dff with rd enable to cell.
Checking cell `$memwr$\regfile$sail-core/verilog/register_file.v:0$267' in module `\regfile': merged $dff to cell.
Checking cell `$memrd$\regfile$sail-core/verilog/register_file.v:104$254' in module `\regfile': merged data $dff to cell.
Checking cell `$memrd$\regfile$sail-core/verilog/register_file.v:105$255' in module `\regfile': merged data $dff to cell.

19.19.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALUControl..
Finding unused cells or wires in module \ForwardingUnit..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \branch_decision..
Finding unused cells or wires in module \branch_predictor..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \cpu..
Finding unused cells or wires in module \csr_file..
Finding unused cells or wires in module \data_mem..
Finding unused cells or wires in module \ex_mem..
Finding unused cells or wires in module \id_ex..
Finding unused cells or wires in module \if_id..
Finding unused cells or wires in module \imm_gen..
Finding unused cells or wires in module \mem_wb..
Finding unused cells or wires in module \mux2to1..
Finding unused cells or wires in module \program_counter..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \sign_mask_gen..
Finding unused cells or wires in module \top..
Removed 8 unused cells and 11 unused wires.
<suppressed ~10 debug messages>

19.19.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

19.19.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALUControl..
Finding unused cells or wires in module \ForwardingUnit..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \branch_decision..
Finding unused cells or wires in module \branch_predictor..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \cpu..
Finding unused cells or wires in module \csr_file..
Finding unused cells or wires in module \data_mem..
Finding unused cells or wires in module \ex_mem..
Finding unused cells or wires in module \id_ex..
Finding unused cells or wires in module \if_id..
Finding unused cells or wires in module \imm_gen..
Finding unused cells or wires in module \mem_wb..
Finding unused cells or wires in module \mux2to1..
Finding unused cells or wires in module \program_counter..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \sign_mask_gen..
Finding unused cells or wires in module \top..

19.19.6. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\csr_file' in module `\csr_file':
  $meminit$\csr_file$sail-core/verilog/CSR.v:0$272 ($meminit)
  $memrd$\csr_file$sail-core/verilog/CSR.v:66$270 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\data_block' in module `\data_mem':
  $meminit$\data_block$sail-core/verilog/data_mem.v:0$241 ($meminit)
  $memwr$\data_block$sail-core/verilog/data_mem.v:0$242 ($memwr)
  $memrd$\data_block$sail-core/verilog/data_mem.v:261$236 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\regfile' in module `\regfile':
  $meminit$\regfile$sail-core/verilog/register_file.v:0$266 ($meminit)
  $memwr$\regfile$sail-core/verilog/register_file.v:0$267 ($memwr)
  $memrd$\regfile$sail-core/verilog/register_file.v:104$254 ($memrd)
  $memrd$\regfile$sail-core/verilog/register_file.v:105$255 ($memrd)

19.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALUControl..
Finding unused cells or wires in module \ForwardingUnit..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \branch_decision..
Finding unused cells or wires in module \branch_predictor..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \cpu..
Finding unused cells or wires in module \csr_file..
Finding unused cells or wires in module \data_mem..
Finding unused cells or wires in module \ex_mem..
Finding unused cells or wires in module \id_ex..
Finding unused cells or wires in module \if_id..
Finding unused cells or wires in module \imm_gen..
Finding unused cells or wires in module \mem_wb..
Finding unused cells or wires in module \mux2to1..
Finding unused cells or wires in module \program_counter..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \sign_mask_gen..
Finding unused cells or wires in module \top..

19.21. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing csr_file.csr_file:
  Properties: ports=1 bits=8192 rports=1 wports=0 dbits=32 abits=8 words=256
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M0 failed.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=256 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=768 dwaste=0 bwaste=3072 waste=3072 efficiency=25
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1792 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  No acceptable bram resources found.
Processing data_mem.data_block:
  Properties: ports=2 bits=32768 rports=1 wports=1 dbits=32 abits=10 words=1024
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1024 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2048 efficiency=50
      Storing for later selection.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1024 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1024 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'max wports 0' not met.
  Selecting best of 4 rules:
    Efficiency for rule 4.3: efficiency=50, cells=16, acells=1
    Efficiency for rule 4.2: efficiency=100, cells=8, acells=1
    Efficiency for rule 4.1: efficiency=100, cells=8, acells=2
    Efficiency for rule 1.1: efficiency=100, cells=8, acells=4
    Selected rule 4.2 with efficiency 100.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: data_block.0.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <1 0 0>: data_block.1.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <2 0 0>: data_block.2.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <3 0 0>: data_block.3.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <4 0 0>: data_block.4.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <5 0 0>: data_block.5.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <6 0 0>: data_block.6.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <7 0 0>: data_block.7.0.0
Processing regfile.regfile:
  Properties: ports=3 bits=1024 rports=2 wports=1 dbits=32 abits=5 words=32
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7168 efficiency=6
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7680 efficiency=3
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7936 efficiency=1
    Rule for bram type $__ICE40_RAM4K_M123 rejected: requirement 'min efficiency 2' not met.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'max wports 0' not met.
  Selecting best of 2 rules:
    Efficiency for rule 4.1: efficiency=3, cells=8, acells=1
    Efficiency for rule 1.1: efficiency=6, cells=4, acells=1
    Selected rule 1.1 with efficiency 6.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Mapped to bram port A1.2.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: regfile.0.0.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 1>: regfile.0.0.1
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 0>: regfile.1.0.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 1>: regfile.1.0.1

19.22. Executing TECHMAP pass (map to technology primitives).

19.22.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

19.22.2. Continuing TECHMAP pass.
Using template $paramod$7c01128c47821c00041f4149da79e5374eeb90af\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$960485841f660243af450c42d6b4560e3d9823f2\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$f40b41ed01e4edcf07af4d0a3bcd82a7638e29a5\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$393e15b5e00bc13490e1ef7bc58db2210e872efb\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$0ebeabc03b314c1f58b345584c0f3d48bde60c83\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$96730f2979e4ec5e6048c90567de94ce5992570a\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$da3c7878040e8ca4ef0dce62b8cea858bb503ae9\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$55976fa431d00d916e4cc349ebb8c767a6abec12\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$1d8f31ba647830b3cf268a83409ed2fbc24aa924\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$ee338b437991470233af7a84b55b37defcaac296\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$6b1aed27008580900f145b31eb5ead97cb45f703\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$04590b1c0ad951b467387fa50f06eed86cffb2a0\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$071f02249dad81b315ad801809edf76aa20f7e76\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$d5070268d5bb8fc23c4cc63974544bf8804d7014\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$fea0615c67e0fd592c8e25f0e136394aabe19257\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$2d6113b3d225f43c78ca19de2be7bd4451250b9c\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$c627afcf99922150bea99dfd202f51f330026882\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$6f4dc0cd3afe34139e925dfc011d512bf5e38ff3\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.
<suppressed ~632 debug messages>

19.23. Executing ICE40_BRAMINIT pass.

19.24. Executing OPT pass (performing simple optimizations).

19.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALUControl.
<suppressed ~4 debug messages>
Optimizing module ForwardingUnit.
<suppressed ~2 debug messages>
Optimizing module adder.
Optimizing module alu.
<suppressed ~1 debug messages>
Optimizing module branch_decision.
Optimizing module branch_predictor.
Optimizing module control.
Optimizing module cpu.
Optimizing module csr_file.
Optimizing module data_mem.
<suppressed ~65 debug messages>
Optimizing module ex_mem.
Optimizing module id_ex.
Optimizing module if_id.
Optimizing module imm_gen.
Optimizing module mem_wb.
Optimizing module mux2to1.
Optimizing module program_counter.
Optimizing module regfile.
<suppressed ~18 debug messages>
Optimizing module sign_mask_gen.
Optimizing module top.

19.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALUControl'.
Finding identical cells in module `\ForwardingUnit'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\alu'.
Finding identical cells in module `\branch_decision'.
Finding identical cells in module `\branch_predictor'.
Finding identical cells in module `\control'.
Finding identical cells in module `\cpu'.
Finding identical cells in module `\csr_file'.
Finding identical cells in module `\data_mem'.
Finding identical cells in module `\ex_mem'.
Finding identical cells in module `\id_ex'.
Finding identical cells in module `\if_id'.
Finding identical cells in module `\imm_gen'.
Finding identical cells in module `\mem_wb'.
Finding identical cells in module `\mux2to1'.
Finding identical cells in module `\program_counter'.
Finding identical cells in module `\regfile'.
<suppressed ~9 debug messages>
Finding identical cells in module `\sign_mask_gen'.
Finding identical cells in module `\top'.
Removed a total of 3 cells.

19.24.3. Executing OPT_RMDFF pass (remove dff with constant values).

19.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALUControl..
Finding unused cells or wires in module \ForwardingUnit..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \branch_decision..
Finding unused cells or wires in module \branch_predictor..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \cpu..
Finding unused cells or wires in module \csr_file..
Finding unused cells or wires in module \data_mem..
Finding unused cells or wires in module \ex_mem..
Finding unused cells or wires in module \id_ex..
Finding unused cells or wires in module \if_id..
Finding unused cells or wires in module \imm_gen..
Finding unused cells or wires in module \mem_wb..
Finding unused cells or wires in module \mux2to1..
Finding unused cells or wires in module \program_counter..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \sign_mask_gen..
Finding unused cells or wires in module \top..
Removed 1 unused cells and 298 unused wires.
<suppressed ~6 debug messages>

19.24.5. Finished fast OPT passes.

19.25. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).
Mapping memory cell \csr_file in module \csr_file:
  created 256 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 255 $mux cells.
  write interface: 0 write mux blocks.

19.26. Executing OPT pass (performing simple optimizations).

19.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALUControl.
Optimizing module ForwardingUnit.
Optimizing module adder.
Optimizing module alu.
Optimizing module branch_decision.
Optimizing module branch_predictor.
Optimizing module control.
Optimizing module cpu.
Optimizing module csr_file.
Optimizing module data_mem.
Optimizing module ex_mem.
Optimizing module id_ex.
Optimizing module if_id.
Optimizing module imm_gen.
Optimizing module mem_wb.
Optimizing module mux2to1.
Optimizing module program_counter.
Optimizing module regfile.
Optimizing module sign_mask_gen.
Optimizing module top.

19.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALUControl'.
Finding identical cells in module `\ForwardingUnit'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\alu'.
Finding identical cells in module `\branch_decision'.
Finding identical cells in module `\branch_predictor'.
Finding identical cells in module `\control'.
Finding identical cells in module `\cpu'.
Finding identical cells in module `\csr_file'.
Finding identical cells in module `\data_mem'.
Finding identical cells in module `\ex_mem'.
Finding identical cells in module `\id_ex'.
Finding identical cells in module `\if_id'.
Finding identical cells in module `\imm_gen'.
Finding identical cells in module `\mem_wb'.
Finding identical cells in module `\mux2to1'.
Finding identical cells in module `\program_counter'.
Finding identical cells in module `\regfile'.
Finding identical cells in module `\sign_mask_gen'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

19.26.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALUControl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ForwardingUnit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \adder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \branch_decision..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \branch_predictor..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \control..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \csr_file..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \data_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ex_mem..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \id_ex..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \if_id..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \imm_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mem_wb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mux2to1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \program_counter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \regfile..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sign_mask_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

19.26.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALUControl.
    Consolidated identical input bits for $mux cell $procmux$753:
      Old ports: A=3'010, B=3'110, Y=$8\ALUCtl[6:0] [2:0]
      New ports: A=1'0, B=1'1, Y=$8\ALUCtl[6:0] [2]
      New connections: $8\ALUCtl[6:0] [1:0] = 2'10
    Consolidated identical input bits for $pmux cell $procmux$762:
      Old ports: A={ 4'0000 $8\ALUCtl[6:0] [2:0] }, B={ 25'0000101000011100010000000 $6\ALUCtl[6:0] [2:0] 14'00000010000000 }, Y=$7\ALUCtl[6:0]
      New ports: A={ 1'0 $8\ALUCtl[6:0] [2:0] }, B={ 13'0101011110000 $6\ALUCtl[6:0] [2:0] 8'00010000 }, Y=$7\ALUCtl[6:0] [3:0]
      New connections: $7\ALUCtl[6:0] [6:4] = 3'000
    Consolidated identical input bits for $mux cell $procmux$776:
      Old ports: A=3'011, B=3'100, Y=$6\ALUCtl[6:0] [2:0]
      New ports: A=2'01, B=2'10, Y={ $6\ALUCtl[6:0] [2] $6\ALUCtl[6:0] [0] }
      New connections: $6\ALUCtl[6:0] [1] = $6\ALUCtl[6:0] [0]
    Consolidated identical input bits for $mux cell $procmux$802:
      Old ports: A=4'1111, B=4'0010, Y=$4\ALUCtl[6:0]
      New ports: A=1'1, B=1'0, Y=$4\ALUCtl[6:0] [0]
      New connections: $4\ALUCtl[6:0] [3:1] = { $4\ALUCtl[6:0] [0] $4\ALUCtl[6:0] [0] 1'1 }
    Consolidated identical input bits for $mux cell $procmux$814:
      Old ports: A=4'1111, B=4'0010, Y=$3\ALUCtl[6:0]
      New ports: A=1'1, B=1'0, Y=$3\ALUCtl[6:0] [0]
      New connections: $3\ALUCtl[6:0] [3:1] = { $3\ALUCtl[6:0] [0] $3\ALUCtl[6:0] [0] 1'1 }
    Consolidated identical input bits for $pmux cell $procmux$829:
      Old ports: A=7'0001111, B=42'001011001001100110110100011010101101100110, Y=$2\ALUCtl[6:0]
      New ports: A=4'0001, B=24'001001000110100010101100, Y={ $2\ALUCtl[6:0] [6:4] $2\ALUCtl[6:0] [0] }
      New connections: $2\ALUCtl[6:0] [3:1] = { $2\ALUCtl[6:0] [0] 2'11 }
  Optimizing cells in module \ALUControl.
  Optimizing cells in module \ForwardingUnit.
  Optimizing cells in module \adder.
  Optimizing cells in module \alu.
  Optimizing cells in module \branch_decision.
  Optimizing cells in module \branch_predictor.
  Optimizing cells in module \control.
  Optimizing cells in module \cpu.
  Optimizing cells in module \csr_file.
  Optimizing cells in module \data_mem.
    Consolidated identical input bits for $mux cell $ternary$sail-core/verilog/data_mem.v:204$207:
      Old ports: A={ 24'000000000000000000000000 \word_buf [15:8] }, B={ \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15:8] }, Y=$ternary$sail-core/verilog/data_mem.v:204$207_Y
      New ports: A=1'0, B=\word_buf [15], Y=$ternary$sail-core/verilog/data_mem.v:204$207_Y [8]
      New connections: { $ternary$sail-core/verilog/data_mem.v:204$207_Y [31:9] $ternary$sail-core/verilog/data_mem.v:204$207_Y [7:0] } = { $ternary$sail-core/verilog/data_mem.v:204$207_Y [8] $ternary$sail-core/verilog/data_mem.v:204$207_Y [8] $ternary$sail-core/verilog/data_mem.v:204$207_Y [8] $ternary$sail-core/verilog/data_mem.v:204$207_Y [8] $ternary$sail-core/verilog/data_mem.v:204$207_Y [8] $ternary$sail-core/verilog/data_mem.v:204$207_Y [8] $ternary$sail-core/verilog/data_mem.v:204$207_Y [8] $ternary$sail-core/verilog/data_mem.v:204$207_Y [8] $ternary$sail-core/verilog/data_mem.v:204$207_Y [8] $ternary$sail-core/verilog/data_mem.v:204$207_Y [8] $ternary$sail-core/verilog/data_mem.v:204$207_Y [8] $ternary$sail-core/verilog/data_mem.v:204$207_Y [8] $ternary$sail-core/verilog/data_mem.v:204$207_Y [8] $ternary$sail-core/verilog/data_mem.v:204$207_Y [8] $ternary$sail-core/verilog/data_mem.v:204$207_Y [8] $ternary$sail-core/verilog/data_mem.v:204$207_Y [8] $ternary$sail-core/verilog/data_mem.v:204$207_Y [8] $ternary$sail-core/verilog/data_mem.v:204$207_Y [8] $ternary$sail-core/verilog/data_mem.v:204$207_Y [8] $ternary$sail-core/verilog/data_mem.v:204$207_Y [8] $ternary$sail-core/verilog/data_mem.v:204$207_Y [8] $ternary$sail-core/verilog/data_mem.v:204$207_Y [8] $ternary$sail-core/verilog/data_mem.v:204$207_Y [8] \word_buf [15:8] }
    Consolidated identical input bits for $mux cell $ternary$sail-core/verilog/data_mem.v:204$209:
      Old ports: A={ 24'000000000000000000000000 \word_buf [7:0] }, B={ \word_buf [7] \word_buf [7] \word_buf [7] \word_buf [7] \word_buf [7] \word_buf [7] \word_buf [7] \word_buf [7] \word_buf [7] \word_buf [7] \word_buf [7] \word_buf [7] \word_buf [7] \word_buf [7] \word_buf [7] \word_buf [7] \word_buf [7] \word_buf [7] \word_buf [7] \word_buf [7] \word_buf [7] \word_buf [7] \word_buf [7] \word_buf [7] \word_buf [7:0] }, Y=$ternary$sail-core/verilog/data_mem.v:204$209_Y
      New ports: A=1'0, B=\word_buf [7], Y=$ternary$sail-core/verilog/data_mem.v:204$209_Y [8]
      New connections: { $ternary$sail-core/verilog/data_mem.v:204$209_Y [31:9] $ternary$sail-core/verilog/data_mem.v:204$209_Y [7:0] } = { $ternary$sail-core/verilog/data_mem.v:204$209_Y [8] $ternary$sail-core/verilog/data_mem.v:204$209_Y [8] $ternary$sail-core/verilog/data_mem.v:204$209_Y [8] $ternary$sail-core/verilog/data_mem.v:204$209_Y [8] $ternary$sail-core/verilog/data_mem.v:204$209_Y [8] $ternary$sail-core/verilog/data_mem.v:204$209_Y [8] $ternary$sail-core/verilog/data_mem.v:204$209_Y [8] $ternary$sail-core/verilog/data_mem.v:204$209_Y [8] $ternary$sail-core/verilog/data_mem.v:204$209_Y [8] $ternary$sail-core/verilog/data_mem.v:204$209_Y [8] $ternary$sail-core/verilog/data_mem.v:204$209_Y [8] $ternary$sail-core/verilog/data_mem.v:204$209_Y [8] $ternary$sail-core/verilog/data_mem.v:204$209_Y [8] $ternary$sail-core/verilog/data_mem.v:204$209_Y [8] $ternary$sail-core/verilog/data_mem.v:204$209_Y [8] $ternary$sail-core/verilog/data_mem.v:204$209_Y [8] $ternary$sail-core/verilog/data_mem.v:204$209_Y [8] $ternary$sail-core/verilog/data_mem.v:204$209_Y [8] $ternary$sail-core/verilog/data_mem.v:204$209_Y [8] $ternary$sail-core/verilog/data_mem.v:204$209_Y [8] $ternary$sail-core/verilog/data_mem.v:204$209_Y [8] $ternary$sail-core/verilog/data_mem.v:204$209_Y [8] $ternary$sail-core/verilog/data_mem.v:204$209_Y [8] \word_buf [7:0] }
    Consolidated identical input bits for $mux cell $ternary$sail-core/verilog/data_mem.v:205$212:
      Old ports: A={ 24'000000000000000000000000 \word_buf [31:24] }, B={ \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31:24] }, Y=$ternary$sail-core/verilog/data_mem.v:205$212_Y
      New ports: A=1'0, B=\word_buf [31], Y=$ternary$sail-core/verilog/data_mem.v:205$212_Y [8]
      New connections: { $ternary$sail-core/verilog/data_mem.v:205$212_Y [31:9] $ternary$sail-core/verilog/data_mem.v:205$212_Y [7:0] } = { $ternary$sail-core/verilog/data_mem.v:205$212_Y [8] $ternary$sail-core/verilog/data_mem.v:205$212_Y [8] $ternary$sail-core/verilog/data_mem.v:205$212_Y [8] $ternary$sail-core/verilog/data_mem.v:205$212_Y [8] $ternary$sail-core/verilog/data_mem.v:205$212_Y [8] $ternary$sail-core/verilog/data_mem.v:205$212_Y [8] $ternary$sail-core/verilog/data_mem.v:205$212_Y [8] $ternary$sail-core/verilog/data_mem.v:205$212_Y [8] $ternary$sail-core/verilog/data_mem.v:205$212_Y [8] $ternary$sail-core/verilog/data_mem.v:205$212_Y [8] $ternary$sail-core/verilog/data_mem.v:205$212_Y [8] $ternary$sail-core/verilog/data_mem.v:205$212_Y [8] $ternary$sail-core/verilog/data_mem.v:205$212_Y [8] $ternary$sail-core/verilog/data_mem.v:205$212_Y [8] $ternary$sail-core/verilog/data_mem.v:205$212_Y [8] $ternary$sail-core/verilog/data_mem.v:205$212_Y [8] $ternary$sail-core/verilog/data_mem.v:205$212_Y [8] $ternary$sail-core/verilog/data_mem.v:205$212_Y [8] $ternary$sail-core/verilog/data_mem.v:205$212_Y [8] $ternary$sail-core/verilog/data_mem.v:205$212_Y [8] $ternary$sail-core/verilog/data_mem.v:205$212_Y [8] $ternary$sail-core/verilog/data_mem.v:205$212_Y [8] $ternary$sail-core/verilog/data_mem.v:205$212_Y [8] \word_buf [31:24] }
    Consolidated identical input bits for $mux cell $ternary$sail-core/verilog/data_mem.v:205$214:
      Old ports: A={ 24'000000000000000000000000 \word_buf [23:16] }, B={ \word_buf [23] \word_buf [23] \word_buf [23] \word_buf [23] \word_buf [23] \word_buf [23] \word_buf [23] \word_buf [23] \word_buf [23] \word_buf [23] \word_buf [23] \word_buf [23] \word_buf [23] \word_buf [23] \word_buf [23] \word_buf [23] \word_buf [23] \word_buf [23] \word_buf [23] \word_buf [23] \word_buf [23] \word_buf [23] \word_buf [23] \word_buf [23] \word_buf [23:16] }, Y=$ternary$sail-core/verilog/data_mem.v:205$214_Y
      New ports: A=1'0, B=\word_buf [23], Y=$ternary$sail-core/verilog/data_mem.v:205$214_Y [8]
      New connections: { $ternary$sail-core/verilog/data_mem.v:205$214_Y [31:9] $ternary$sail-core/verilog/data_mem.v:205$214_Y [7:0] } = { $ternary$sail-core/verilog/data_mem.v:205$214_Y [8] $ternary$sail-core/verilog/data_mem.v:205$214_Y [8] $ternary$sail-core/verilog/data_mem.v:205$214_Y [8] $ternary$sail-core/verilog/data_mem.v:205$214_Y [8] $ternary$sail-core/verilog/data_mem.v:205$214_Y [8] $ternary$sail-core/verilog/data_mem.v:205$214_Y [8] $ternary$sail-core/verilog/data_mem.v:205$214_Y [8] $ternary$sail-core/verilog/data_mem.v:205$214_Y [8] $ternary$sail-core/verilog/data_mem.v:205$214_Y [8] $ternary$sail-core/verilog/data_mem.v:205$214_Y [8] $ternary$sail-core/verilog/data_mem.v:205$214_Y [8] $ternary$sail-core/verilog/data_mem.v:205$214_Y [8] $ternary$sail-core/verilog/data_mem.v:205$214_Y [8] $ternary$sail-core/verilog/data_mem.v:205$214_Y [8] $ternary$sail-core/verilog/data_mem.v:205$214_Y [8] $ternary$sail-core/verilog/data_mem.v:205$214_Y [8] $ternary$sail-core/verilog/data_mem.v:205$214_Y [8] $ternary$sail-core/verilog/data_mem.v:205$214_Y [8] $ternary$sail-core/verilog/data_mem.v:205$214_Y [8] $ternary$sail-core/verilog/data_mem.v:205$214_Y [8] $ternary$sail-core/verilog/data_mem.v:205$214_Y [8] $ternary$sail-core/verilog/data_mem.v:205$214_Y [8] $ternary$sail-core/verilog/data_mem.v:205$214_Y [8] \word_buf [23:16] }
    Consolidated identical input bits for $mux cell $ternary$sail-core/verilog/data_mem.v:206$217:
      Old ports: A={ 16'0000000000000000 \word_buf [31:16] }, B={ \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31] \word_buf [31:16] }, Y=$ternary$sail-core/verilog/data_mem.v:206$217_Y
      New ports: A=1'0, B=\word_buf [31], Y=$ternary$sail-core/verilog/data_mem.v:206$217_Y [16]
      New connections: { $ternary$sail-core/verilog/data_mem.v:206$217_Y [31:17] $ternary$sail-core/verilog/data_mem.v:206$217_Y [15:0] } = { $ternary$sail-core/verilog/data_mem.v:206$217_Y [16] $ternary$sail-core/verilog/data_mem.v:206$217_Y [16] $ternary$sail-core/verilog/data_mem.v:206$217_Y [16] $ternary$sail-core/verilog/data_mem.v:206$217_Y [16] $ternary$sail-core/verilog/data_mem.v:206$217_Y [16] $ternary$sail-core/verilog/data_mem.v:206$217_Y [16] $ternary$sail-core/verilog/data_mem.v:206$217_Y [16] $ternary$sail-core/verilog/data_mem.v:206$217_Y [16] $ternary$sail-core/verilog/data_mem.v:206$217_Y [16] $ternary$sail-core/verilog/data_mem.v:206$217_Y [16] $ternary$sail-core/verilog/data_mem.v:206$217_Y [16] $ternary$sail-core/verilog/data_mem.v:206$217_Y [16] $ternary$sail-core/verilog/data_mem.v:206$217_Y [16] $ternary$sail-core/verilog/data_mem.v:206$217_Y [16] $ternary$sail-core/verilog/data_mem.v:206$217_Y [16] \word_buf [31:16] }
    Consolidated identical input bits for $mux cell $ternary$sail-core/verilog/data_mem.v:206$219:
      Old ports: A={ 16'0000000000000000 \word_buf [15:0] }, B={ \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15] \word_buf [15:0] }, Y=$ternary$sail-core/verilog/data_mem.v:206$219_Y
      New ports: A=1'0, B=\word_buf [15], Y=$ternary$sail-core/verilog/data_mem.v:206$219_Y [16]
      New connections: { $ternary$sail-core/verilog/data_mem.v:206$219_Y [31:17] $ternary$sail-core/verilog/data_mem.v:206$219_Y [15:0] } = { $ternary$sail-core/verilog/data_mem.v:206$219_Y [16] $ternary$sail-core/verilog/data_mem.v:206$219_Y [16] $ternary$sail-core/verilog/data_mem.v:206$219_Y [16] $ternary$sail-core/verilog/data_mem.v:206$219_Y [16] $ternary$sail-core/verilog/data_mem.v:206$219_Y [16] $ternary$sail-core/verilog/data_mem.v:206$219_Y [16] $ternary$sail-core/verilog/data_mem.v:206$219_Y [16] $ternary$sail-core/verilog/data_mem.v:206$219_Y [16] $ternary$sail-core/verilog/data_mem.v:206$219_Y [16] $ternary$sail-core/verilog/data_mem.v:206$219_Y [16] $ternary$sail-core/verilog/data_mem.v:206$219_Y [16] $ternary$sail-core/verilog/data_mem.v:206$219_Y [16] $ternary$sail-core/verilog/data_mem.v:206$219_Y [16] $ternary$sail-core/verilog/data_mem.v:206$219_Y [16] $ternary$sail-core/verilog/data_mem.v:206$219_Y [16] \word_buf [15:0] }
  Optimizing cells in module \data_mem.
    Consolidated identical input bits for $mux cell $ternary$sail-core/verilog/data_mem.v:204$210:
      Old ports: A=$ternary$sail-core/verilog/data_mem.v:204$209_Y, B=$ternary$sail-core/verilog/data_mem.v:204$207_Y, Y=\out1
      New ports: A={ $ternary$sail-core/verilog/data_mem.v:204$209_Y [8] \word_buf [7:0] }, B={ $ternary$sail-core/verilog/data_mem.v:204$207_Y [8] \word_buf [15:8] }, Y=\out1 [8:0]
      New connections: \out1 [31:9] = { \out1 [8] \out1 [8] \out1 [8] \out1 [8] \out1 [8] \out1 [8] \out1 [8] \out1 [8] \out1 [8] \out1 [8] \out1 [8] \out1 [8] \out1 [8] \out1 [8] \out1 [8] \out1 [8] \out1 [8] \out1 [8] \out1 [8] \out1 [8] \out1 [8] \out1 [8] \out1 [8] }
    Consolidated identical input bits for $mux cell $ternary$sail-core/verilog/data_mem.v:205$215:
      Old ports: A=$ternary$sail-core/verilog/data_mem.v:205$214_Y, B=$ternary$sail-core/verilog/data_mem.v:205$212_Y, Y=\out2
      New ports: A={ $ternary$sail-core/verilog/data_mem.v:205$214_Y [8] \word_buf [23:16] }, B={ $ternary$sail-core/verilog/data_mem.v:205$212_Y [8] \word_buf [31:24] }, Y=\out2 [8:0]
      New connections: \out2 [31:9] = { \out2 [8] \out2 [8] \out2 [8] \out2 [8] \out2 [8] \out2 [8] \out2 [8] \out2 [8] \out2 [8] \out2 [8] \out2 [8] \out2 [8] \out2 [8] \out2 [8] \out2 [8] \out2 [8] \out2 [8] \out2 [8] \out2 [8] \out2 [8] \out2 [8] \out2 [8] \out2 [8] }
    Consolidated identical input bits for $mux cell $ternary$sail-core/verilog/data_mem.v:206$220:
      Old ports: A=$ternary$sail-core/verilog/data_mem.v:206$219_Y, B=$ternary$sail-core/verilog/data_mem.v:206$217_Y, Y=\out3
      New ports: A={ $ternary$sail-core/verilog/data_mem.v:206$219_Y [16] \word_buf [15:0] }, B={ $ternary$sail-core/verilog/data_mem.v:206$217_Y [16] \word_buf [31:16] }, Y=\out3 [16:0]
      New connections: \out3 [31:17] = { \out3 [16] \out3 [16] \out3 [16] \out3 [16] \out3 [16] \out3 [16] \out3 [16] \out3 [16] \out3 [16] \out3 [16] \out3 [16] \out3 [16] \out3 [16] \out3 [16] \out3 [16] }
  Optimizing cells in module \data_mem.
    Consolidated identical input bits for $mux cell $ternary$sail-core/verilog/data_mem.v:209$222:
      Old ports: A=\out1, B=\out2, Y=\out5
      New ports: A=\out1 [8:0], B=\out2 [8:0], Y=\out5 [8:0]
      New connections: \out5 [31:9] = { \out5 [8] \out5 [8] \out5 [8] \out5 [8] \out5 [8] \out5 [8] \out5 [8] \out5 [8] \out5 [8] \out5 [8] \out5 [8] \out5 [8] \out5 [8] \out5 [8] \out5 [8] \out5 [8] \out5 [8] \out5 [8] \out5 [8] \out5 [8] \out5 [8] \out5 [8] \out5 [8] }
  Optimizing cells in module \data_mem.
  Optimizing cells in module \ex_mem.
  Optimizing cells in module \id_ex.
  Optimizing cells in module \if_id.
  Optimizing cells in module \imm_gen.
  Optimizing cells in module \mem_wb.
  Optimizing cells in module \mux2to1.
  Optimizing cells in module \program_counter.
  Optimizing cells in module \regfile.
  Optimizing cells in module \sign_mask_gen.
  Optimizing cells in module \top.
Performed a total of 16 changes.

19.26.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALUControl'.
Finding identical cells in module `\ForwardingUnit'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\alu'.
Finding identical cells in module `\branch_decision'.
Finding identical cells in module `\branch_predictor'.
Finding identical cells in module `\control'.
Finding identical cells in module `\cpu'.
Finding identical cells in module `\csr_file'.
Finding identical cells in module `\data_mem'.
<suppressed ~6 debug messages>
Finding identical cells in module `\ex_mem'.
Finding identical cells in module `\id_ex'.
Finding identical cells in module `\if_id'.
Finding identical cells in module `\imm_gen'.
Finding identical cells in module `\mem_wb'.
Finding identical cells in module `\mux2to1'.
Finding identical cells in module `\program_counter'.
Finding identical cells in module `\regfile'.
Finding identical cells in module `\sign_mask_gen'.
Finding identical cells in module `\top'.
Removed a total of 2 cells.

19.26.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $memory\csr_file[255]$1517 ($dff) from module csr_file.
Removing $memory\csr_file[254]$1515 ($dff) from module csr_file.
Removing $memory\csr_file[253]$1513 ($dff) from module csr_file.
Removing $memory\csr_file[252]$1511 ($dff) from module csr_file.
Removing $memory\csr_file[251]$1509 ($dff) from module csr_file.
Removing $memory\csr_file[250]$1507 ($dff) from module csr_file.
Removing $memory\csr_file[249]$1505 ($dff) from module csr_file.
Removing $memory\csr_file[248]$1503 ($dff) from module csr_file.
Removing $memory\csr_file[247]$1501 ($dff) from module csr_file.
Removing $memory\csr_file[246]$1499 ($dff) from module csr_file.
Removing $memory\csr_file[245]$1497 ($dff) from module csr_file.
Removing $memory\csr_file[244]$1495 ($dff) from module csr_file.
Removing $memory\csr_file[243]$1493 ($dff) from module csr_file.
Removing $memory\csr_file[242]$1491 ($dff) from module csr_file.
Removing $memory\csr_file[241]$1489 ($dff) from module csr_file.
Removing $memory\csr_file[240]$1487 ($dff) from module csr_file.
Removing $memory\csr_file[239]$1485 ($dff) from module csr_file.
Removing $memory\csr_file[238]$1483 ($dff) from module csr_file.
Removing $memory\csr_file[237]$1481 ($dff) from module csr_file.
Removing $memory\csr_file[236]$1479 ($dff) from module csr_file.
Removing $memory\csr_file[235]$1477 ($dff) from module csr_file.
Removing $memory\csr_file[234]$1475 ($dff) from module csr_file.
Removing $memory\csr_file[233]$1473 ($dff) from module csr_file.
Removing $memory\csr_file[232]$1471 ($dff) from module csr_file.
Removing $memory\csr_file[231]$1469 ($dff) from module csr_file.
Removing $memory\csr_file[230]$1467 ($dff) from module csr_file.
Removing $memory\csr_file[229]$1465 ($dff) from module csr_file.
Removing $memory\csr_file[228]$1463 ($dff) from module csr_file.
Removing $memory\csr_file[227]$1461 ($dff) from module csr_file.
Removing $memory\csr_file[226]$1459 ($dff) from module csr_file.
Removing $memory\csr_file[225]$1457 ($dff) from module csr_file.
Removing $memory\csr_file[224]$1455 ($dff) from module csr_file.
Removing $memory\csr_file[223]$1453 ($dff) from module csr_file.
Removing $memory\csr_file[222]$1451 ($dff) from module csr_file.
Removing $memory\csr_file[221]$1449 ($dff) from module csr_file.
Removing $memory\csr_file[220]$1447 ($dff) from module csr_file.
Removing $memory\csr_file[219]$1445 ($dff) from module csr_file.
Removing $memory\csr_file[218]$1443 ($dff) from module csr_file.
Removing $memory\csr_file[217]$1441 ($dff) from module csr_file.
Removing $memory\csr_file[216]$1439 ($dff) from module csr_file.
Removing $memory\csr_file[215]$1437 ($dff) from module csr_file.
Removing $memory\csr_file[214]$1435 ($dff) from module csr_file.
Removing $memory\csr_file[213]$1433 ($dff) from module csr_file.
Removing $memory\csr_file[212]$1431 ($dff) from module csr_file.
Removing $memory\csr_file[211]$1429 ($dff) from module csr_file.
Removing $memory\csr_file[210]$1427 ($dff) from module csr_file.
Removing $memory\csr_file[209]$1425 ($dff) from module csr_file.
Removing $memory\csr_file[208]$1423 ($dff) from module csr_file.
Removing $memory\csr_file[207]$1421 ($dff) from module csr_file.
Removing $memory\csr_file[206]$1419 ($dff) from module csr_file.
Removing $memory\csr_file[205]$1417 ($dff) from module csr_file.
Removing $memory\csr_file[204]$1415 ($dff) from module csr_file.
Removing $memory\csr_file[203]$1413 ($dff) from module csr_file.
Removing $memory\csr_file[202]$1411 ($dff) from module csr_file.
Removing $memory\csr_file[201]$1409 ($dff) from module csr_file.
Removing $memory\csr_file[200]$1407 ($dff) from module csr_file.
Removing $memory\csr_file[199]$1405 ($dff) from module csr_file.
Removing $memory\csr_file[198]$1403 ($dff) from module csr_file.
Removing $memory\csr_file[197]$1401 ($dff) from module csr_file.
Removing $memory\csr_file[196]$1399 ($dff) from module csr_file.
Removing $memory\csr_file[195]$1397 ($dff) from module csr_file.
Removing $memory\csr_file[194]$1395 ($dff) from module csr_file.
Removing $memory\csr_file[193]$1393 ($dff) from module csr_file.
Removing $memory\csr_file[192]$1391 ($dff) from module csr_file.
Removing $memory\csr_file[191]$1389 ($dff) from module csr_file.
Removing $memory\csr_file[190]$1387 ($dff) from module csr_file.
Removing $memory\csr_file[189]$1385 ($dff) from module csr_file.
Removing $memory\csr_file[188]$1383 ($dff) from module csr_file.
Removing $memory\csr_file[187]$1381 ($dff) from module csr_file.
Removing $memory\csr_file[186]$1379 ($dff) from module csr_file.
Removing $memory\csr_file[185]$1377 ($dff) from module csr_file.
Removing $memory\csr_file[184]$1375 ($dff) from module csr_file.
Removing $memory\csr_file[183]$1373 ($dff) from module csr_file.
Removing $memory\csr_file[182]$1371 ($dff) from module csr_file.
Removing $memory\csr_file[181]$1369 ($dff) from module csr_file.
Removing $memory\csr_file[180]$1367 ($dff) from module csr_file.
Removing $memory\csr_file[179]$1365 ($dff) from module csr_file.
Removing $memory\csr_file[178]$1363 ($dff) from module csr_file.
Removing $memory\csr_file[177]$1361 ($dff) from module csr_file.
Removing $memory\csr_file[176]$1359 ($dff) from module csr_file.
Removing $memory\csr_file[175]$1357 ($dff) from module csr_file.
Removing $memory\csr_file[174]$1355 ($dff) from module csr_file.
Removing $memory\csr_file[173]$1353 ($dff) from module csr_file.
Removing $memory\csr_file[172]$1351 ($dff) from module csr_file.
Removing $memory\csr_file[171]$1349 ($dff) from module csr_file.
Removing $memory\csr_file[170]$1347 ($dff) from module csr_file.
Removing $memory\csr_file[169]$1345 ($dff) from module csr_file.
Removing $memory\csr_file[168]$1343 ($dff) from module csr_file.
Removing $memory\csr_file[167]$1341 ($dff) from module csr_file.
Removing $memory\csr_file[166]$1339 ($dff) from module csr_file.
Removing $memory\csr_file[165]$1337 ($dff) from module csr_file.
Removing $memory\csr_file[164]$1335 ($dff) from module csr_file.
Removing $memory\csr_file[163]$1333 ($dff) from module csr_file.
Removing $memory\csr_file[162]$1331 ($dff) from module csr_file.
Removing $memory\csr_file[161]$1329 ($dff) from module csr_file.
Removing $memory\csr_file[160]$1327 ($dff) from module csr_file.
Removing $memory\csr_file[159]$1325 ($dff) from module csr_file.
Removing $memory\csr_file[158]$1323 ($dff) from module csr_file.
Removing $memory\csr_file[157]$1321 ($dff) from module csr_file.
Removing $memory\csr_file[156]$1319 ($dff) from module csr_file.
Removing $memory\csr_file[155]$1317 ($dff) from module csr_file.
Removing $memory\csr_file[154]$1315 ($dff) from module csr_file.
Removing $memory\csr_file[153]$1313 ($dff) from module csr_file.
Removing $memory\csr_file[152]$1311 ($dff) from module csr_file.
Removing $memory\csr_file[151]$1309 ($dff) from module csr_file.
Removing $memory\csr_file[150]$1307 ($dff) from module csr_file.
Removing $memory\csr_file[149]$1305 ($dff) from module csr_file.
Removing $memory\csr_file[148]$1303 ($dff) from module csr_file.
Removing $memory\csr_file[147]$1301 ($dff) from module csr_file.
Removing $memory\csr_file[146]$1299 ($dff) from module csr_file.
Removing $memory\csr_file[145]$1297 ($dff) from module csr_file.
Removing $memory\csr_file[144]$1295 ($dff) from module csr_file.
Removing $memory\csr_file[143]$1293 ($dff) from module csr_file.
Removing $memory\csr_file[142]$1291 ($dff) from module csr_file.
Removing $memory\csr_file[141]$1289 ($dff) from module csr_file.
Removing $memory\csr_file[140]$1287 ($dff) from module csr_file.
Removing $memory\csr_file[139]$1285 ($dff) from module csr_file.
Removing $memory\csr_file[138]$1283 ($dff) from module csr_file.
Removing $memory\csr_file[137]$1281 ($dff) from module csr_file.
Removing $memory\csr_file[136]$1279 ($dff) from module csr_file.
Removing $memory\csr_file[135]$1277 ($dff) from module csr_file.
Removing $memory\csr_file[134]$1275 ($dff) from module csr_file.
Removing $memory\csr_file[133]$1273 ($dff) from module csr_file.
Removing $memory\csr_file[132]$1271 ($dff) from module csr_file.
Removing $memory\csr_file[131]$1269 ($dff) from module csr_file.
Removing $memory\csr_file[130]$1267 ($dff) from module csr_file.
Removing $memory\csr_file[129]$1265 ($dff) from module csr_file.
Removing $memory\csr_file[128]$1263 ($dff) from module csr_file.
Removing $memory\csr_file[127]$1261 ($dff) from module csr_file.
Removing $memory\csr_file[126]$1259 ($dff) from module csr_file.
Removing $memory\csr_file[125]$1257 ($dff) from module csr_file.
Removing $memory\csr_file[124]$1255 ($dff) from module csr_file.
Removing $memory\csr_file[123]$1253 ($dff) from module csr_file.
Removing $memory\csr_file[122]$1251 ($dff) from module csr_file.
Removing $memory\csr_file[121]$1249 ($dff) from module csr_file.
Removing $memory\csr_file[120]$1247 ($dff) from module csr_file.
Removing $memory\csr_file[119]$1245 ($dff) from module csr_file.
Removing $memory\csr_file[118]$1243 ($dff) from module csr_file.
Removing $memory\csr_file[117]$1241 ($dff) from module csr_file.
Removing $memory\csr_file[116]$1239 ($dff) from module csr_file.
Removing $memory\csr_file[115]$1237 ($dff) from module csr_file.
Removing $memory\csr_file[114]$1235 ($dff) from module csr_file.
Removing $memory\csr_file[113]$1233 ($dff) from module csr_file.
Removing $memory\csr_file[112]$1231 ($dff) from module csr_file.
Removing $memory\csr_file[111]$1229 ($dff) from module csr_file.
Removing $memory\csr_file[110]$1227 ($dff) from module csr_file.
Removing $memory\csr_file[109]$1225 ($dff) from module csr_file.
Removing $memory\csr_file[108]$1223 ($dff) from module csr_file.
Removing $memory\csr_file[107]$1221 ($dff) from module csr_file.
Removing $memory\csr_file[106]$1219 ($dff) from module csr_file.
Removing $memory\csr_file[105]$1217 ($dff) from module csr_file.
Removing $memory\csr_file[104]$1215 ($dff) from module csr_file.
Removing $memory\csr_file[103]$1213 ($dff) from module csr_file.
Removing $memory\csr_file[102]$1211 ($dff) from module csr_file.
Removing $memory\csr_file[101]$1209 ($dff) from module csr_file.
Removing $memory\csr_file[100]$1207 ($dff) from module csr_file.
Removing $memory\csr_file[99]$1205 ($dff) from module csr_file.
Removing $memory\csr_file[98]$1203 ($dff) from module csr_file.
Removing $memory\csr_file[97]$1201 ($dff) from module csr_file.
Removing $memory\csr_file[96]$1199 ($dff) from module csr_file.
Removing $memory\csr_file[95]$1197 ($dff) from module csr_file.
Removing $memory\csr_file[94]$1195 ($dff) from module csr_file.
Removing $memory\csr_file[93]$1193 ($dff) from module csr_file.
Removing $memory\csr_file[92]$1191 ($dff) from module csr_file.
Removing $memory\csr_file[91]$1189 ($dff) from module csr_file.
Removing $memory\csr_file[90]$1187 ($dff) from module csr_file.
Removing $memory\csr_file[89]$1185 ($dff) from module csr_file.
Removing $memory\csr_file[88]$1183 ($dff) from module csr_file.
Removing $memory\csr_file[87]$1181 ($dff) from module csr_file.
Removing $memory\csr_file[86]$1179 ($dff) from module csr_file.
Removing $memory\csr_file[85]$1177 ($dff) from module csr_file.
Removing $memory\csr_file[84]$1175 ($dff) from module csr_file.
Removing $memory\csr_file[83]$1173 ($dff) from module csr_file.
Removing $memory\csr_file[82]$1171 ($dff) from module csr_file.
Removing $memory\csr_file[81]$1169 ($dff) from module csr_file.
Removing $memory\csr_file[80]$1167 ($dff) from module csr_file.
Removing $memory\csr_file[79]$1165 ($dff) from module csr_file.
Removing $memory\csr_file[78]$1163 ($dff) from module csr_file.
Removing $memory\csr_file[77]$1161 ($dff) from module csr_file.
Removing $memory\csr_file[76]$1159 ($dff) from module csr_file.
Removing $memory\csr_file[75]$1157 ($dff) from module csr_file.
Removing $memory\csr_file[74]$1155 ($dff) from module csr_file.
Removing $memory\csr_file[73]$1153 ($dff) from module csr_file.
Removing $memory\csr_file[72]$1151 ($dff) from module csr_file.
Removing $memory\csr_file[71]$1149 ($dff) from module csr_file.
Removing $memory\csr_file[70]$1147 ($dff) from module csr_file.
Removing $memory\csr_file[69]$1145 ($dff) from module csr_file.
Removing $memory\csr_file[68]$1143 ($dff) from module csr_file.
Removing $memory\csr_file[67]$1141 ($dff) from module csr_file.
Removing $memory\csr_file[66]$1139 ($dff) from module csr_file.
Removing $memory\csr_file[65]$1137 ($dff) from module csr_file.
Removing $memory\csr_file[64]$1135 ($dff) from module csr_file.
Removing $memory\csr_file[63]$1133 ($dff) from module csr_file.
Removing $memory\csr_file[62]$1131 ($dff) from module csr_file.
Removing $memory\csr_file[61]$1129 ($dff) from module csr_file.
Removing $memory\csr_file[60]$1127 ($dff) from module csr_file.
Removing $memory\csr_file[59]$1125 ($dff) from module csr_file.
Removing $memory\csr_file[58]$1123 ($dff) from module csr_file.
Removing $memory\csr_file[57]$1121 ($dff) from module csr_file.
Removing $memory\csr_file[56]$1119 ($dff) from module csr_file.
Removing $memory\csr_file[55]$1117 ($dff) from module csr_file.
Removing $memory\csr_file[54]$1115 ($dff) from module csr_file.
Removing $memory\csr_file[53]$1113 ($dff) from module csr_file.
Removing $memory\csr_file[52]$1111 ($dff) from module csr_file.
Removing $memory\csr_file[51]$1109 ($dff) from module csr_file.
Removing $memory\csr_file[50]$1107 ($dff) from module csr_file.
Removing $memory\csr_file[49]$1105 ($dff) from module csr_file.
Removing $memory\csr_file[48]$1103 ($dff) from module csr_file.
Removing $memory\csr_file[47]$1101 ($dff) from module csr_file.
Removing $memory\csr_file[46]$1099 ($dff) from module csr_file.
Removing $memory\csr_file[45]$1097 ($dff) from module csr_file.
Removing $memory\csr_file[44]$1095 ($dff) from module csr_file.
Removing $memory\csr_file[43]$1093 ($dff) from module csr_file.
Removing $memory\csr_file[42]$1091 ($dff) from module csr_file.
Removing $memory\csr_file[41]$1089 ($dff) from module csr_file.
Removing $memory\csr_file[40]$1087 ($dff) from module csr_file.
Removing $memory\csr_file[39]$1085 ($dff) from module csr_file.
Removing $memory\csr_file[38]$1083 ($dff) from module csr_file.
Removing $memory\csr_file[37]$1081 ($dff) from module csr_file.
Removing $memory\csr_file[36]$1079 ($dff) from module csr_file.
Removing $memory\csr_file[35]$1077 ($dff) from module csr_file.
Removing $memory\csr_file[34]$1075 ($dff) from module csr_file.
Removing $memory\csr_file[33]$1073 ($dff) from module csr_file.
Removing $memory\csr_file[32]$1071 ($dff) from module csr_file.
Removing $memory\csr_file[31]$1069 ($dff) from module csr_file.
Removing $memory\csr_file[30]$1067 ($dff) from module csr_file.
Removing $memory\csr_file[29]$1065 ($dff) from module csr_file.
Removing $memory\csr_file[28]$1063 ($dff) from module csr_file.
Removing $memory\csr_file[27]$1061 ($dff) from module csr_file.
Removing $memory\csr_file[26]$1059 ($dff) from module csr_file.
Removing $memory\csr_file[25]$1057 ($dff) from module csr_file.
Removing $memory\csr_file[24]$1055 ($dff) from module csr_file.
Removing $memory\csr_file[23]$1053 ($dff) from module csr_file.
Removing $memory\csr_file[22]$1051 ($dff) from module csr_file.
Removing $memory\csr_file[21]$1049 ($dff) from module csr_file.
Removing $memory\csr_file[20]$1047 ($dff) from module csr_file.
Removing $memory\csr_file[19]$1045 ($dff) from module csr_file.
Removing $memory\csr_file[18]$1043 ($dff) from module csr_file.
Removing $memory\csr_file[17]$1041 ($dff) from module csr_file.
Removing $memory\csr_file[16]$1039 ($dff) from module csr_file.
Removing $memory\csr_file[15]$1037 ($dff) from module csr_file.
Removing $memory\csr_file[14]$1035 ($dff) from module csr_file.
Removing $memory\csr_file[13]$1033 ($dff) from module csr_file.
Removing $memory\csr_file[12]$1031 ($dff) from module csr_file.
Removing $memory\csr_file[11]$1029 ($dff) from module csr_file.
Removing $memory\csr_file[10]$1027 ($dff) from module csr_file.
Removing $memory\csr_file[9]$1025 ($dff) from module csr_file.
Removing $memory\csr_file[8]$1023 ($dff) from module csr_file.
Removing $memory\csr_file[7]$1021 ($dff) from module csr_file.
Removing $memory\csr_file[6]$1019 ($dff) from module csr_file.
Removing $memory\csr_file[5]$1017 ($dff) from module csr_file.
Removing $memory\csr_file[4]$1015 ($dff) from module csr_file.
Removing $memory\csr_file[3]$1013 ($dff) from module csr_file.
Removing $memory\csr_file[2]$1011 ($dff) from module csr_file.
Removing $memory\csr_file[1]$1009 ($dff) from module csr_file.
Removing $memory\csr_file[0]$1007 ($dff) from module csr_file.
Replaced 256 DFF cells.

19.26.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALUControl..
Finding unused cells or wires in module \ForwardingUnit..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \branch_decision..
Finding unused cells or wires in module \branch_predictor..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \cpu..
Finding unused cells or wires in module \csr_file..
Finding unused cells or wires in module \data_mem..
Finding unused cells or wires in module \ex_mem..
Finding unused cells or wires in module \id_ex..
Finding unused cells or wires in module \if_id..
Finding unused cells or wires in module \imm_gen..
Finding unused cells or wires in module \mem_wb..
Finding unused cells or wires in module \mux2to1..
Finding unused cells or wires in module \program_counter..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \sign_mask_gen..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 514 unused wires.
<suppressed ~2 debug messages>

19.26.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALUControl.
Optimizing module ForwardingUnit.
Optimizing module adder.
Optimizing module alu.
Optimizing module branch_decision.
Optimizing module branch_predictor.
Optimizing module control.
Optimizing module cpu.
Optimizing module csr_file.
<suppressed ~74 debug messages>
Optimizing module data_mem.
Optimizing module ex_mem.
Optimizing module id_ex.
Optimizing module if_id.
Optimizing module imm_gen.
Optimizing module mem_wb.
Optimizing module mux2to1.
Optimizing module program_counter.
Optimizing module regfile.
Optimizing module sign_mask_gen.
Optimizing module top.

19.26.9. Rerunning OPT passes. (Maybe there is more to do..)

19.26.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALUControl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ForwardingUnit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \adder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \branch_decision..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \branch_predictor..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \control..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \csr_file..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \data_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ex_mem..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \id_ex..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \if_id..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \imm_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mem_wb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mux2to1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \program_counter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \regfile..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sign_mask_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~27 debug messages>

19.26.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALUControl.
  Optimizing cells in module \ForwardingUnit.
  Optimizing cells in module \adder.
  Optimizing cells in module \alu.
  Optimizing cells in module \branch_decision.
  Optimizing cells in module \branch_predictor.
  Optimizing cells in module \control.
  Optimizing cells in module \cpu.
  Optimizing cells in module \csr_file.
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][0]$1900:
      Old ports: A=19, B=4407, Y=$memory\csr_file$rdmux[0][6][0]$a$1709
      New ports: A=1'0, B=1'1, Y=$memory\csr_file$rdmux[0][6][0]$a$1709 [2]
      New connections: { $memory\csr_file$rdmux[0][6][0]$a$1709 [31:3] $memory\csr_file$rdmux[0][6][0]$a$1709 [1:0] } = { 19'0000000000000000000 $memory\csr_file$rdmux[0][6][0]$a$1709 [2] 3'000 $memory\csr_file$rdmux[0][6][0]$a$1709 [2] 2'00 $memory\csr_file$rdmux[0][6][0]$a$1709 [2] 4'1011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][10]$1930:
      Old ports: A=32'11111110010001000010011110000011, B=32'11111111111101111000011110010011, Y=$memory\csr_file$rdmux[0][6][5]$a$1724
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][5]$a$1724 [13] $memory\csr_file$rdmux[0][6][5]$a$1724 [4] }
      New connections: { $memory\csr_file$rdmux[0][6][5]$a$1724 [31:14] $memory\csr_file$rdmux[0][6][5]$a$1724 [12:5] $memory\csr_file$rdmux[0][6][5]$a$1724 [3:0] } = { 7'1111111 $memory\csr_file$rdmux[0][6][5]$a$1724 [4] $memory\csr_file$rdmux[0][6][5]$a$1724 [4] 1'1 $memory\csr_file$rdmux[0][6][5]$a$1724 [4] $memory\csr_file$rdmux[0][6][5]$a$1724 [4] 2'01 $memory\csr_file$rdmux[0][6][5]$a$1724 [4] $memory\csr_file$rdmux[0][6][5]$a$1724 [4] $memory\csr_file$rdmux[0][6][5]$a$1724 [4] 13'0001111000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][11]$1933:
      Old ports: A=32'11111110111101000010010000100011, B=32'11111110000001000010011110000011, Y=$memory\csr_file$rdmux[0][6][5]$b$1725
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][5]$b$1725 [7] $memory\csr_file$rdmux[0][6][5]$b$1725 [5] }
      New connections: { $memory\csr_file$rdmux[0][6][5]$b$1725 [31:8] $memory\csr_file$rdmux[0][6][5]$b$1725 [6] $memory\csr_file$rdmux[0][6][5]$b$1725 [4:0] } = { 8'11111110 $memory\csr_file$rdmux[0][6][5]$b$1725 [5] $memory\csr_file$rdmux[0][6][5]$b$1725 [5] $memory\csr_file$rdmux[0][6][5]$b$1725 [5] $memory\csr_file$rdmux[0][6][5]$b$1725 [5] 10'0100001001 $memory\csr_file$rdmux[0][6][5]$b$1725 [7] $memory\csr_file$rdmux[0][6][5]$b$1725 [7] 6'000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][12]$1936:
      Old ports: A=267388691, B=15179811, Y=$memory\csr_file$rdmux[0][6][6]$a$1727
      New ports: A=2'01, B=2'10, Y=$memory\csr_file$rdmux[0][6][6]$a$1727 [5:4]
      New connections: { $memory\csr_file$rdmux[0][6][6]$a$1727 [31:6] $memory\csr_file$rdmux[0][6][6]$a$1727 [3:0] } = { 4'0000 $memory\csr_file$rdmux[0][6][6]$a$1727 [4] $memory\csr_file$rdmux[0][6][6]$a$1727 [4] $memory\csr_file$rdmux[0][6][6]$a$1727 [4] $memory\csr_file$rdmux[0][6][6]$a$1727 [4] 3'111 $memory\csr_file$rdmux[0][6][6]$a$1727 [4] 1'0 $memory\csr_file$rdmux[0][6][6]$a$1727 [5] $memory\csr_file$rdmux[0][6][6]$a$1727 [5] $memory\csr_file$rdmux[0][6][6]$a$1727 [5] $memory\csr_file$rdmux[0][6][6]$a$1727 [5] 1'0 $memory\csr_file$rdmux[0][6][6]$a$1727 [5] 2'00 $memory\csr_file$rdmux[0][6][6]$a$1727 [4] $memory\csr_file$rdmux[0][6][6]$a$1727 [4] $memory\csr_file$rdmux[0][6][6]$a$1727 [4] 6'000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][13]$1939:
      Old ports: A=306184303, B=32'11111110000001000010011110000011, Y=$memory\csr_file$rdmux[0][6][6]$b$1728
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][6]$b$1728 [7] $memory\csr_file$rdmux[0][6][6]$b$1728 [2] }
      New connections: { $memory\csr_file$rdmux[0][6][6]$b$1728 [31:8] $memory\csr_file$rdmux[0][6][6]$b$1728 [6:3] $memory\csr_file$rdmux[0][6][6]$b$1728 [1:0] } = { $memory\csr_file$rdmux[0][6][6]$b$1728 [7] $memory\csr_file$rdmux[0][6][6]$b$1728 [7] $memory\csr_file$rdmux[0][6][6]$b$1728 [7] 1'1 $memory\csr_file$rdmux[0][6][6]$b$1728 [7] $memory\csr_file$rdmux[0][6][6]$b$1728 [7] 3'100 $memory\csr_file$rdmux[0][6][6]$b$1728 [2] 3'000 $memory\csr_file$rdmux[0][6][6]$b$1728 [7] 4'0000 $memory\csr_file$rdmux[0][6][6]$b$1728 [7] 2'00 $memory\csr_file$rdmux[0][6][6]$b$1728 [7] $memory\csr_file$rdmux[0][6][6]$b$1728 [7] $memory\csr_file$rdmux[0][6][6]$b$1728 [7] $memory\csr_file$rdmux[0][6][6]$b$1728 [2] $memory\csr_file$rdmux[0][6][6]$b$1728 [2] 1'0 $memory\csr_file$rdmux[0][6][6]$b$1728 [2] 2'11 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][14]$1942:
      Old ports: A=501635, B=32'11111111111101111100011100010011, Y=$memory\csr_file$rdmux[0][6][7]$a$1730
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][7]$a$1730 [7] $memory\csr_file$rdmux[0][6][7]$a$1730 [4] }
      New connections: { $memory\csr_file$rdmux[0][6][7]$a$1730 [31:8] $memory\csr_file$rdmux[0][6][7]$a$1730 [6:5] $memory\csr_file$rdmux[0][6][7]$a$1730 [3:0] } = { $memory\csr_file$rdmux[0][6][7]$a$1730 [4] $memory\csr_file$rdmux[0][6][7]$a$1730 [4] $memory\csr_file$rdmux[0][6][7]$a$1730 [4] $memory\csr_file$rdmux[0][6][7]$a$1730 [4] $memory\csr_file$rdmux[0][6][7]$a$1730 [4] $memory\csr_file$rdmux[0][6][7]$a$1730 [4] $memory\csr_file$rdmux[0][6][7]$a$1730 [4] $memory\csr_file$rdmux[0][6][7]$a$1730 [4] $memory\csr_file$rdmux[0][6][7]$a$1730 [4] $memory\csr_file$rdmux[0][6][7]$a$1730 [4] $memory\csr_file$rdmux[0][6][7]$a$1730 [4] $memory\csr_file$rdmux[0][6][7]$a$1730 [4] 5'01111 $memory\csr_file$rdmux[0][6][7]$a$1730 [4] $memory\csr_file$rdmux[0][6][7]$a$1730 [7] 11'00111000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][15]$1945:
      Old ports: A=32'11111110000001000010011110000011, B=15179811, Y=$memory\csr_file$rdmux[0][6][7]$b$1731
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][7]$b$1731 [7] $memory\csr_file$rdmux[0][6][7]$b$1731 [5] }
      New connections: { $memory\csr_file$rdmux[0][6][7]$b$1731 [31:8] $memory\csr_file$rdmux[0][6][7]$b$1731 [6] $memory\csr_file$rdmux[0][6][7]$b$1731 [4:0] } = { $memory\csr_file$rdmux[0][6][7]$b$1731 [7] $memory\csr_file$rdmux[0][6][7]$b$1731 [7] $memory\csr_file$rdmux[0][6][7]$b$1731 [7] $memory\csr_file$rdmux[0][6][7]$b$1731 [7] $memory\csr_file$rdmux[0][6][7]$b$1731 [7] $memory\csr_file$rdmux[0][6][7]$b$1731 [7] $memory\csr_file$rdmux[0][6][7]$b$1731 [7] 1'0 $memory\csr_file$rdmux[0][6][7]$b$1731 [5] $memory\csr_file$rdmux[0][6][7]$b$1731 [5] $memory\csr_file$rdmux[0][6][7]$b$1731 [5] 3'001 $memory\csr_file$rdmux[0][6][7]$b$1731 [5] $memory\csr_file$rdmux[0][6][7]$b$1731 [5] $memory\csr_file$rdmux[0][6][7]$b$1731 [5] 4'0100 $memory\csr_file$rdmux[0][6][7]$b$1731 [7] $memory\csr_file$rdmux[0][6][7]$b$1731 [7] $memory\csr_file$rdmux[0][6][7]$b$1731 [7] 6'000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][16]$1948:
      Old ports: A=32'11111110000001000010011000100011, B=251658351, Y=$memory\csr_file$rdmux[0][6][8]$a$1733
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][8]$a$1733 [9] $memory\csr_file$rdmux[0][6][8]$a$1733 [2] }
      New connections: { $memory\csr_file$rdmux[0][6][8]$a$1733 [31:10] $memory\csr_file$rdmux[0][6][8]$a$1733 [8:3] $memory\csr_file$rdmux[0][6][8]$a$1733 [1:0] } = { $memory\csr_file$rdmux[0][6][8]$a$1733 [9] $memory\csr_file$rdmux[0][6][8]$a$1733 [9] $memory\csr_file$rdmux[0][6][8]$a$1733 [9] $memory\csr_file$rdmux[0][6][8]$a$1733 [9] 3'111 $memory\csr_file$rdmux[0][6][8]$a$1733 [2] 5'00000 $memory\csr_file$rdmux[0][6][8]$a$1733 [9] 4'0000 $memory\csr_file$rdmux[0][6][8]$a$1733 [9] 2'00 $memory\csr_file$rdmux[0][6][8]$a$1733 [9] 2'00 $memory\csr_file$rdmux[0][6][8]$a$1733 [2] 2'10 $memory\csr_file$rdmux[0][6][8]$a$1733 [2] 2'11 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][17]$1951:
      Old ports: A=32'11111110110001000010011110000011, B=32'11111111000001000000011100010011, Y=$memory\csr_file$rdmux[0][6][8]$b$1734
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][8]$b$1734 [7] $memory\csr_file$rdmux[0][6][8]$b$1734 [4] }
      New connections: { $memory\csr_file$rdmux[0][6][8]$b$1734 [31:8] $memory\csr_file$rdmux[0][6][8]$b$1734 [6:5] $memory\csr_file$rdmux[0][6][8]$b$1734 [3:0] } = { 7'1111111 $memory\csr_file$rdmux[0][6][8]$b$1734 [4] $memory\csr_file$rdmux[0][6][8]$b$1734 [7] $memory\csr_file$rdmux[0][6][8]$b$1734 [7] 8'00010000 $memory\csr_file$rdmux[0][6][8]$b$1734 [7] 11'00111000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][18]$1954:
      Old ports: A=16189363, B=32'10111100100001111100011100000011, Y=$memory\csr_file$rdmux[0][6][9]$a$1736
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][9]$a$1736 [14] $memory\csr_file$rdmux[0][6][9]$a$1736 [4] }
      New connections: { $memory\csr_file$rdmux[0][6][9]$a$1736 [31:15] $memory\csr_file$rdmux[0][6][9]$a$1736 [13:5] $memory\csr_file$rdmux[0][6][9]$a$1736 [3:0] } = { $memory\csr_file$rdmux[0][6][9]$a$1736 [14] 1'0 $memory\csr_file$rdmux[0][6][9]$a$1736 [14] $memory\csr_file$rdmux[0][6][9]$a$1736 [14] $memory\csr_file$rdmux[0][6][9]$a$1736 [14] $memory\csr_file$rdmux[0][6][9]$a$1736 [14] 3'001 $memory\csr_file$rdmux[0][6][9]$a$1736 [4] $memory\csr_file$rdmux[0][6][9]$a$1736 [4] $memory\csr_file$rdmux[0][6][9]$a$1736 [4] 4'0111 $memory\csr_file$rdmux[0][6][9]$a$1736 [14] 6'000111 $memory\csr_file$rdmux[0][6][9]$a$1736 [4] 1'0 $memory\csr_file$rdmux[0][6][9]$a$1736 [4] 4'0011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][19]$1957:
      Old ports: A=32'11111110110001000010011110000011, B=1542035, Y=$memory\csr_file$rdmux[0][6][9]$b$1737
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][9]$b$1737 [13] $memory\csr_file$rdmux[0][6][9]$b$1737 [4] }
      New connections: { $memory\csr_file$rdmux[0][6][9]$b$1737 [31:14] $memory\csr_file$rdmux[0][6][9]$b$1737 [12:5] $memory\csr_file$rdmux[0][6][9]$b$1737 [3:0] } = { $memory\csr_file$rdmux[0][6][9]$b$1737 [13] $memory\csr_file$rdmux[0][6][9]$b$1737 [13] $memory\csr_file$rdmux[0][6][9]$b$1737 [13] $memory\csr_file$rdmux[0][6][9]$b$1737 [13] $memory\csr_file$rdmux[0][6][9]$b$1737 [13] $memory\csr_file$rdmux[0][6][9]$b$1737 [13] $memory\csr_file$rdmux[0][6][9]$b$1737 [13] 1'0 $memory\csr_file$rdmux[0][6][9]$b$1737 [13] $memory\csr_file$rdmux[0][6][9]$b$1737 [13] 1'0 $memory\csr_file$rdmux[0][6][9]$b$1737 [4] 2'01 $memory\csr_file$rdmux[0][6][9]$b$1737 [4] $memory\csr_file$rdmux[0][6][9]$b$1737 [4] $memory\csr_file$rdmux[0][6][9]$b$1737 [4] 13'0001111000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][1]$1903:
      Old ports: A=1073807635, B=4194415, Y=$memory\csr_file$rdmux[0][6][0]$b$1710
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][0]$b$1710 [4] $memory\csr_file$rdmux[0][6][0]$b$1710 [2] }
      New connections: { $memory\csr_file$rdmux[0][6][0]$b$1710 [31:5] $memory\csr_file$rdmux[0][6][0]$b$1710 [3] $memory\csr_file$rdmux[0][6][0]$b$1710 [1:0] } = { 1'0 $memory\csr_file$rdmux[0][6][0]$b$1710 [4] 7'0000000 $memory\csr_file$rdmux[0][6][0]$b$1710 [2] 5'00000 $memory\csr_file$rdmux[0][6][0]$b$1710 [4] 7'0000000 $memory\csr_file$rdmux[0][6][0]$b$1710 [4] 1'0 $memory\csr_file$rdmux[0][6][0]$b$1710 [2] $memory\csr_file$rdmux[0][6][0]$b$1710 [2] $memory\csr_file$rdmux[0][6][0]$b$1710 [2] 2'11 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][20]$1960:
      Old ports: A=32'11111111000001000000011010010011, B=16156595, Y=$memory\csr_file$rdmux[0][6][10]$a$1739
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][10]$a$1739 [24] $memory\csr_file$rdmux[0][6][10]$a$1739 [5] }
      New connections: { $memory\csr_file$rdmux[0][6][10]$a$1739 [31:25] $memory\csr_file$rdmux[0][6][10]$a$1739 [23:6] $memory\csr_file$rdmux[0][6][10]$a$1739 [4:0] } = { $memory\csr_file$rdmux[0][6][10]$a$1739 [24] $memory\csr_file$rdmux[0][6][10]$a$1739 [24] $memory\csr_file$rdmux[0][6][10]$a$1739 [24] $memory\csr_file$rdmux[0][6][10]$a$1739 [24] $memory\csr_file$rdmux[0][6][10]$a$1739 [24] $memory\csr_file$rdmux[0][6][10]$a$1739 [24] $memory\csr_file$rdmux[0][6][10]$a$1739 [24] $memory\csr_file$rdmux[0][6][10]$a$1739 [5] $memory\csr_file$rdmux[0][6][10]$a$1739 [5] $memory\csr_file$rdmux[0][6][10]$a$1739 [5] $memory\csr_file$rdmux[0][6][10]$a$1739 [5] 2'01 $memory\csr_file$rdmux[0][6][10]$a$1739 [5] 1'0 $memory\csr_file$rdmux[0][6][10]$a$1739 [5] 6'000011 $memory\csr_file$rdmux[0][6][10]$a$1739 [5] 7'1010011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][21]$1963:
      Old ports: A=32'10111100100001111100011110000011, B=182976099, Y=$memory\csr_file$rdmux[0][6][10]$b$1740
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][10]$b$1740 [7] $memory\csr_file$rdmux[0][6][10]$b$1740 [5] }
      New connections: { $memory\csr_file$rdmux[0][6][10]$b$1740 [31:8] $memory\csr_file$rdmux[0][6][10]$b$1740 [6] $memory\csr_file$rdmux[0][6][10]$b$1740 [4:0] } = { $memory\csr_file$rdmux[0][6][10]$b$1740 [7] 1'0 $memory\csr_file$rdmux[0][6][10]$b$1740 [7] $memory\csr_file$rdmux[0][6][10]$b$1740 [7] 1'1 $memory\csr_file$rdmux[0][6][10]$b$1740 [7] $memory\csr_file$rdmux[0][6][10]$b$1740 [5] 2'01 $memory\csr_file$rdmux[0][6][10]$b$1740 [5] $memory\csr_file$rdmux[0][6][10]$b$1740 [5] 7'0011111 $memory\csr_file$rdmux[0][6][10]$b$1740 [5] $memory\csr_file$rdmux[0][6][10]$b$1740 [5] $memory\csr_file$rdmux[0][6][10]$b$1740 [5] 2'11 $memory\csr_file$rdmux[0][6][10]$b$1740 [7] $memory\csr_file$rdmux[0][6][10]$b$1740 [5] 5'00011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][22]$1966:
      Old ports: A=32'11111110110001000010011110000011, B=32'11111111000001000000011100010011, Y=$memory\csr_file$rdmux[0][6][11]$a$1742
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][11]$a$1742 [7] $memory\csr_file$rdmux[0][6][11]$a$1742 [4] }
      New connections: { $memory\csr_file$rdmux[0][6][11]$a$1742 [31:8] $memory\csr_file$rdmux[0][6][11]$a$1742 [6:5] $memory\csr_file$rdmux[0][6][11]$a$1742 [3:0] } = { 7'1111111 $memory\csr_file$rdmux[0][6][11]$a$1742 [4] $memory\csr_file$rdmux[0][6][11]$a$1742 [7] $memory\csr_file$rdmux[0][6][11]$a$1742 [7] 8'00010000 $memory\csr_file$rdmux[0][6][11]$a$1742 [7] 11'00111000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][23]$1969:
      Old ports: A=16189363, B=32'10111100100001111100011100000011, Y=$memory\csr_file$rdmux[0][6][11]$b$1743
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][11]$b$1743 [14] $memory\csr_file$rdmux[0][6][11]$b$1743 [4] }
      New connections: { $memory\csr_file$rdmux[0][6][11]$b$1743 [31:15] $memory\csr_file$rdmux[0][6][11]$b$1743 [13:5] $memory\csr_file$rdmux[0][6][11]$b$1743 [3:0] } = { $memory\csr_file$rdmux[0][6][11]$b$1743 [14] 1'0 $memory\csr_file$rdmux[0][6][11]$b$1743 [14] $memory\csr_file$rdmux[0][6][11]$b$1743 [14] $memory\csr_file$rdmux[0][6][11]$b$1743 [14] $memory\csr_file$rdmux[0][6][11]$b$1743 [14] 3'001 $memory\csr_file$rdmux[0][6][11]$b$1743 [4] $memory\csr_file$rdmux[0][6][11]$b$1743 [4] $memory\csr_file$rdmux[0][6][11]$b$1743 [4] 4'0111 $memory\csr_file$rdmux[0][6][11]$b$1743 [14] 6'000111 $memory\csr_file$rdmux[0][6][11]$b$1743 [4] 1'0 $memory\csr_file$rdmux[0][6][11]$b$1743 [4] 4'0011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][24]$1972:
      Old ports: A=32'11111110110001000010011110000011, B=1542035, Y=$memory\csr_file$rdmux[0][6][12]$a$1745
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][12]$a$1745 [13] $memory\csr_file$rdmux[0][6][12]$a$1745 [4] }
      New connections: { $memory\csr_file$rdmux[0][6][12]$a$1745 [31:14] $memory\csr_file$rdmux[0][6][12]$a$1745 [12:5] $memory\csr_file$rdmux[0][6][12]$a$1745 [3:0] } = { $memory\csr_file$rdmux[0][6][12]$a$1745 [13] $memory\csr_file$rdmux[0][6][12]$a$1745 [13] $memory\csr_file$rdmux[0][6][12]$a$1745 [13] $memory\csr_file$rdmux[0][6][12]$a$1745 [13] $memory\csr_file$rdmux[0][6][12]$a$1745 [13] $memory\csr_file$rdmux[0][6][12]$a$1745 [13] $memory\csr_file$rdmux[0][6][12]$a$1745 [13] 1'0 $memory\csr_file$rdmux[0][6][12]$a$1745 [13] $memory\csr_file$rdmux[0][6][12]$a$1745 [13] 1'0 $memory\csr_file$rdmux[0][6][12]$a$1745 [4] 2'01 $memory\csr_file$rdmux[0][6][12]$a$1745 [4] $memory\csr_file$rdmux[0][6][12]$a$1745 [4] $memory\csr_file$rdmux[0][6][12]$a$1745 [4] 13'0001111000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][25]$1975:
      Old ports: A=32'11111111000001000000011010010011, B=16156595, Y=$memory\csr_file$rdmux[0][6][12]$b$1746
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][12]$b$1746 [24] $memory\csr_file$rdmux[0][6][12]$b$1746 [5] }
      New connections: { $memory\csr_file$rdmux[0][6][12]$b$1746 [31:25] $memory\csr_file$rdmux[0][6][12]$b$1746 [23:6] $memory\csr_file$rdmux[0][6][12]$b$1746 [4:0] } = { $memory\csr_file$rdmux[0][6][12]$b$1746 [24] $memory\csr_file$rdmux[0][6][12]$b$1746 [24] $memory\csr_file$rdmux[0][6][12]$b$1746 [24] $memory\csr_file$rdmux[0][6][12]$b$1746 [24] $memory\csr_file$rdmux[0][6][12]$b$1746 [24] $memory\csr_file$rdmux[0][6][12]$b$1746 [24] $memory\csr_file$rdmux[0][6][12]$b$1746 [24] $memory\csr_file$rdmux[0][6][12]$b$1746 [5] $memory\csr_file$rdmux[0][6][12]$b$1746 [5] $memory\csr_file$rdmux[0][6][12]$b$1746 [5] $memory\csr_file$rdmux[0][6][12]$b$1746 [5] 2'01 $memory\csr_file$rdmux[0][6][12]$b$1746 [5] 1'0 $memory\csr_file$rdmux[0][6][12]$b$1746 [5] 6'000011 $memory\csr_file$rdmux[0][6][12]$b$1746 [5] 7'1010011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][26]$1978:
      Old ports: A=32'10111100100001111100011110000011, B=16205747, Y=$memory\csr_file$rdmux[0][6][13]$a$1748
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][13]$a$1748 [15] $memory\csr_file$rdmux[0][6][13]$a$1748 [4] }
      New connections: { $memory\csr_file$rdmux[0][6][13]$a$1748 [31:16] $memory\csr_file$rdmux[0][6][13]$a$1748 [14:5] $memory\csr_file$rdmux[0][6][13]$a$1748 [3:0] } = { $memory\csr_file$rdmux[0][6][13]$a$1748 [15] 1'0 $memory\csr_file$rdmux[0][6][13]$a$1748 [15] $memory\csr_file$rdmux[0][6][13]$a$1748 [15] $memory\csr_file$rdmux[0][6][13]$a$1748 [15] $memory\csr_file$rdmux[0][6][13]$a$1748 [15] 3'001 $memory\csr_file$rdmux[0][6][13]$a$1748 [4] $memory\csr_file$rdmux[0][6][13]$a$1748 [4] $memory\csr_file$rdmux[0][6][13]$a$1748 [4] 13'0111100011110 $memory\csr_file$rdmux[0][6][13]$a$1748 [4] 4'0011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][27]$1981:
      Old ports: A=267908883, B=32'11111110110001000010011110000011, Y=$memory\csr_file$rdmux[0][6][13]$b$1749
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][13]$b$1749 [7] $memory\csr_file$rdmux[0][6][13]$b$1749 [4] }
      New connections: { $memory\csr_file$rdmux[0][6][13]$b$1749 [31:8] $memory\csr_file$rdmux[0][6][13]$b$1749 [6:5] $memory\csr_file$rdmux[0][6][13]$b$1749 [3:0] } = { $memory\csr_file$rdmux[0][6][13]$b$1749 [7] $memory\csr_file$rdmux[0][6][13]$b$1749 [7] $memory\csr_file$rdmux[0][6][13]$b$1749 [7] $memory\csr_file$rdmux[0][6][13]$b$1749 [7] 3'111 $memory\csr_file$rdmux[0][6][13]$b$1749 [4] 2'11 $memory\csr_file$rdmux[0][6][13]$b$1749 [4] $memory\csr_file$rdmux[0][6][13]$b$1749 [4] 2'01 $memory\csr_file$rdmux[0][6][13]$b$1749 [4] $memory\csr_file$rdmux[0][6][13]$b$1749 [4] $memory\csr_file$rdmux[0][6][13]$b$1749 [4] $memory\csr_file$rdmux[0][6][13]$b$1749 [4] 1'1 $memory\csr_file$rdmux[0][6][13]$b$1749 [4] 10'0111000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][28]$1984:
      Old ports: A=32'11111111000001000000011010010011, B=16156595, Y=$memory\csr_file$rdmux[0][6][14]$a$1751
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][14]$a$1751 [24] $memory\csr_file$rdmux[0][6][14]$a$1751 [5] }
      New connections: { $memory\csr_file$rdmux[0][6][14]$a$1751 [31:25] $memory\csr_file$rdmux[0][6][14]$a$1751 [23:6] $memory\csr_file$rdmux[0][6][14]$a$1751 [4:0] } = { $memory\csr_file$rdmux[0][6][14]$a$1751 [24] $memory\csr_file$rdmux[0][6][14]$a$1751 [24] $memory\csr_file$rdmux[0][6][14]$a$1751 [24] $memory\csr_file$rdmux[0][6][14]$a$1751 [24] $memory\csr_file$rdmux[0][6][14]$a$1751 [24] $memory\csr_file$rdmux[0][6][14]$a$1751 [24] $memory\csr_file$rdmux[0][6][14]$a$1751 [24] $memory\csr_file$rdmux[0][6][14]$a$1751 [5] $memory\csr_file$rdmux[0][6][14]$a$1751 [5] $memory\csr_file$rdmux[0][6][14]$a$1751 [5] $memory\csr_file$rdmux[0][6][14]$a$1751 [5] 2'01 $memory\csr_file$rdmux[0][6][14]$a$1751 [5] 1'0 $memory\csr_file$rdmux[0][6][14]$a$1751 [5] 6'000011 $memory\csr_file$rdmux[0][6][14]$a$1751 [5] 7'1010011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][29]$1987:
      Old ports: A=32'10111100111001111000010000100011, B=32'11111110110001000010011110000011, Y=$memory\csr_file$rdmux[0][6][14]$b$1752
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][14]$b$1752 [7] $memory\csr_file$rdmux[0][6][14]$b$1752 [5] }
      New connections: { $memory\csr_file$rdmux[0][6][14]$b$1752 [31:8] $memory\csr_file$rdmux[0][6][14]$b$1752 [6] $memory\csr_file$rdmux[0][6][14]$b$1752 [4:0] } = { 1'1 $memory\csr_file$rdmux[0][6][14]$b$1752 [7] 4'1111 $memory\csr_file$rdmux[0][6][14]$b$1752 [7] 3'011 $memory\csr_file$rdmux[0][6][14]$b$1752 [5] 3'001 $memory\csr_file$rdmux[0][6][14]$b$1752 [5] $memory\csr_file$rdmux[0][6][14]$b$1752 [5] $memory\csr_file$rdmux[0][6][14]$b$1752 [5] 1'0 $memory\csr_file$rdmux[0][6][14]$b$1752 [7] 3'001 $memory\csr_file$rdmux[0][6][14]$b$1752 [7] $memory\csr_file$rdmux[0][6][14]$b$1752 [7] 6'000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][2]$1906:
      Old ports: A=32'10111011000000010000000100010011, B=1141974563, Y=$memory\csr_file$rdmux[0][6][1]$a$1712
      New ports: A=2'01, B=2'10, Y=$memory\csr_file$rdmux[0][6][1]$a$1712 [5:4]
      New connections: { $memory\csr_file$rdmux[0][6][1]$a$1712 [31:6] $memory\csr_file$rdmux[0][6][1]$a$1712 [3:0] } = { $memory\csr_file$rdmux[0][6][1]$a$1712 [4] $memory\csr_file$rdmux[0][6][1]$a$1712 [5:4] $memory\csr_file$rdmux[0][6][1]$a$1712 [4] $memory\csr_file$rdmux[0][6][1]$a$1712 [4] $memory\csr_file$rdmux[0][6][1]$a$1712 [5:4] $memory\csr_file$rdmux[0][6][1]$a$1712 [4] 3'000 $memory\csr_file$rdmux[0][6][1]$a$1712 [5] 6'000100 $memory\csr_file$rdmux[0][6][1]$a$1712 [5] 2'00 $memory\csr_file$rdmux[0][6][1]$a$1712 [5] $memory\csr_file$rdmux[0][6][1]$a$1712 [5:4] 6'000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][30]$1990:
      Old ports: A=1542035, B=32'11111111000001000000011100010011, Y=$memory\csr_file$rdmux[0][6][15]$a$1754
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][15]$a$1754 [24] $memory\csr_file$rdmux[0][6][15]$a$1754 [7] }
      New connections: { $memory\csr_file$rdmux[0][6][15]$a$1754 [31:25] $memory\csr_file$rdmux[0][6][15]$a$1754 [23:8] $memory\csr_file$rdmux[0][6][15]$a$1754 [6:0] } = { $memory\csr_file$rdmux[0][6][15]$a$1754 [24] $memory\csr_file$rdmux[0][6][15]$a$1754 [24] $memory\csr_file$rdmux[0][6][15]$a$1754 [24] $memory\csr_file$rdmux[0][6][15]$a$1754 [24] $memory\csr_file$rdmux[0][6][15]$a$1754 [24] $memory\csr_file$rdmux[0][6][15]$a$1754 [24] $memory\csr_file$rdmux[0][6][15]$a$1754 [24] 3'000 $memory\csr_file$rdmux[0][6][15]$a$1754 [7] 2'01 $memory\csr_file$rdmux[0][6][15]$a$1754 [7] $memory\csr_file$rdmux[0][6][15]$a$1754 [7] $memory\csr_file$rdmux[0][6][15]$a$1754 [7] 14'00001110010011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][31]$1993:
      Old ports: A=16189363, B=32'10111100100001111100011010000011, Y=$memory\csr_file$rdmux[0][6][15]$b$1755
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][15]$b$1755 [14] $memory\csr_file$rdmux[0][6][15]$b$1755 [4] }
      New connections: { $memory\csr_file$rdmux[0][6][15]$b$1755 [31:15] $memory\csr_file$rdmux[0][6][15]$b$1755 [13:5] $memory\csr_file$rdmux[0][6][15]$b$1755 [3:0] } = { $memory\csr_file$rdmux[0][6][15]$b$1755 [14] 1'0 $memory\csr_file$rdmux[0][6][15]$b$1755 [14] $memory\csr_file$rdmux[0][6][15]$b$1755 [14] $memory\csr_file$rdmux[0][6][15]$b$1755 [14] $memory\csr_file$rdmux[0][6][15]$b$1755 [14] 3'001 $memory\csr_file$rdmux[0][6][15]$b$1755 [4] $memory\csr_file$rdmux[0][6][15]$b$1755 [4] $memory\csr_file$rdmux[0][6][15]$b$1755 [4] 4'0111 $memory\csr_file$rdmux[0][6][15]$b$1755 [14] 5'00011 $memory\csr_file$rdmux[0][6][15]$b$1755 [4] 2'10 $memory\csr_file$rdmux[0][6][15]$b$1755 [4] 4'0011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][32]$1996:
      Old ports: A=32'11111110110001000010011110000011, B=32'11111111000001000000011100010011, Y=$memory\csr_file$rdmux[0][6][16]$a$1757
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][16]$a$1757 [7] $memory\csr_file$rdmux[0][6][16]$a$1757 [4] }
      New connections: { $memory\csr_file$rdmux[0][6][16]$a$1757 [31:8] $memory\csr_file$rdmux[0][6][16]$a$1757 [6:5] $memory\csr_file$rdmux[0][6][16]$a$1757 [3:0] } = { 7'1111111 $memory\csr_file$rdmux[0][6][16]$a$1757 [4] $memory\csr_file$rdmux[0][6][16]$a$1757 [7] $memory\csr_file$rdmux[0][6][16]$a$1757 [7] 8'00010000 $memory\csr_file$rdmux[0][6][16]$a$1757 [7] 11'00111000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][33]$1999:
      Old ports: A=16189363, B=32'10111100100001111100011100000011, Y=$memory\csr_file$rdmux[0][6][16]$b$1758
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][16]$b$1758 [14] $memory\csr_file$rdmux[0][6][16]$b$1758 [4] }
      New connections: { $memory\csr_file$rdmux[0][6][16]$b$1758 [31:15] $memory\csr_file$rdmux[0][6][16]$b$1758 [13:5] $memory\csr_file$rdmux[0][6][16]$b$1758 [3:0] } = { $memory\csr_file$rdmux[0][6][16]$b$1758 [14] 1'0 $memory\csr_file$rdmux[0][6][16]$b$1758 [14] $memory\csr_file$rdmux[0][6][16]$b$1758 [14] $memory\csr_file$rdmux[0][6][16]$b$1758 [14] $memory\csr_file$rdmux[0][6][16]$b$1758 [14] 3'001 $memory\csr_file$rdmux[0][6][16]$b$1758 [4] $memory\csr_file$rdmux[0][6][16]$b$1758 [4] $memory\csr_file$rdmux[0][6][16]$b$1758 [4] 4'0111 $memory\csr_file$rdmux[0][6][16]$b$1758 [14] 6'000111 $memory\csr_file$rdmux[0][6][16]$b$1758 [4] 1'0 $memory\csr_file$rdmux[0][6][16]$b$1758 [4] 4'0011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][34]$2002:
      Old ports: A=32'11111110110001000010011110000011, B=1542035, Y=$memory\csr_file$rdmux[0][6][17]$a$1760
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][17]$a$1760 [13] $memory\csr_file$rdmux[0][6][17]$a$1760 [4] }
      New connections: { $memory\csr_file$rdmux[0][6][17]$a$1760 [31:14] $memory\csr_file$rdmux[0][6][17]$a$1760 [12:5] $memory\csr_file$rdmux[0][6][17]$a$1760 [3:0] } = { $memory\csr_file$rdmux[0][6][17]$a$1760 [13] $memory\csr_file$rdmux[0][6][17]$a$1760 [13] $memory\csr_file$rdmux[0][6][17]$a$1760 [13] $memory\csr_file$rdmux[0][6][17]$a$1760 [13] $memory\csr_file$rdmux[0][6][17]$a$1760 [13] $memory\csr_file$rdmux[0][6][17]$a$1760 [13] $memory\csr_file$rdmux[0][6][17]$a$1760 [13] 1'0 $memory\csr_file$rdmux[0][6][17]$a$1760 [13] $memory\csr_file$rdmux[0][6][17]$a$1760 [13] 1'0 $memory\csr_file$rdmux[0][6][17]$a$1760 [4] 2'01 $memory\csr_file$rdmux[0][6][17]$a$1760 [4] $memory\csr_file$rdmux[0][6][17]$a$1760 [4] $memory\csr_file$rdmux[0][6][17]$a$1760 [4] 13'0001111000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][35]$2005:
      Old ports: A=15124275, B=267876115, Y=$memory\csr_file$rdmux[0][6][17]$b$1761
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][17]$b$1761 [12] $memory\csr_file$rdmux[0][6][17]$b$1761 [5] }
      New connections: { $memory\csr_file$rdmux[0][6][17]$b$1761 [31:13] $memory\csr_file$rdmux[0][6][17]$b$1761 [11:6] $memory\csr_file$rdmux[0][6][17]$b$1761 [4:0] } = { 4'0000 $memory\csr_file$rdmux[0][6][17]$b$1761 [12] $memory\csr_file$rdmux[0][6][17]$b$1761 [12] $memory\csr_file$rdmux[0][6][17]$b$1761 [12] $memory\csr_file$rdmux[0][6][17]$b$1761 [12] 3'111 $memory\csr_file$rdmux[0][6][17]$b$1761 [12] 3'011 $memory\csr_file$rdmux[0][6][17]$b$1761 [12] $memory\csr_file$rdmux[0][6][17]$b$1761 [5] 1'1 $memory\csr_file$rdmux[0][6][17]$b$1761 [12] 11'01110010011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][36]$2008:
      Old ports: A=32'11111111000001000000011010010011, B=16156595, Y=$memory\csr_file$rdmux[0][6][18]$a$1763
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][18]$a$1763 [24] $memory\csr_file$rdmux[0][6][18]$a$1763 [5] }
      New connections: { $memory\csr_file$rdmux[0][6][18]$a$1763 [31:25] $memory\csr_file$rdmux[0][6][18]$a$1763 [23:6] $memory\csr_file$rdmux[0][6][18]$a$1763 [4:0] } = { $memory\csr_file$rdmux[0][6][18]$a$1763 [24] $memory\csr_file$rdmux[0][6][18]$a$1763 [24] $memory\csr_file$rdmux[0][6][18]$a$1763 [24] $memory\csr_file$rdmux[0][6][18]$a$1763 [24] $memory\csr_file$rdmux[0][6][18]$a$1763 [24] $memory\csr_file$rdmux[0][6][18]$a$1763 [24] $memory\csr_file$rdmux[0][6][18]$a$1763 [24] $memory\csr_file$rdmux[0][6][18]$a$1763 [5] $memory\csr_file$rdmux[0][6][18]$a$1763 [5] $memory\csr_file$rdmux[0][6][18]$a$1763 [5] $memory\csr_file$rdmux[0][6][18]$a$1763 [5] 2'01 $memory\csr_file$rdmux[0][6][18]$a$1763 [5] 1'0 $memory\csr_file$rdmux[0][6][18]$a$1763 [5] 6'000011 $memory\csr_file$rdmux[0][6][18]$a$1763 [5] 7'1010011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][37]$2011:
      Old ports: A=32'10111100111001111000010000100011, B=32'11111110110001000010011110000011, Y=$memory\csr_file$rdmux[0][6][18]$b$1764
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][18]$b$1764 [7] $memory\csr_file$rdmux[0][6][18]$b$1764 [5] }
      New connections: { $memory\csr_file$rdmux[0][6][18]$b$1764 [31:8] $memory\csr_file$rdmux[0][6][18]$b$1764 [6] $memory\csr_file$rdmux[0][6][18]$b$1764 [4:0] } = { 1'1 $memory\csr_file$rdmux[0][6][18]$b$1764 [7] 4'1111 $memory\csr_file$rdmux[0][6][18]$b$1764 [7] 3'011 $memory\csr_file$rdmux[0][6][18]$b$1764 [5] 3'001 $memory\csr_file$rdmux[0][6][18]$b$1764 [5] $memory\csr_file$rdmux[0][6][18]$b$1764 [5] $memory\csr_file$rdmux[0][6][18]$b$1764 [5] 1'0 $memory\csr_file$rdmux[0][6][18]$b$1764 [7] 3'001 $memory\csr_file$rdmux[0][6][18]$b$1764 [7] $memory\csr_file$rdmux[0][6][18]$b$1764 [7] 6'000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][38]$2014:
      Old ports: A=32'11111111000001000000011100010011, B=16189363, Y=$memory\csr_file$rdmux[0][6][19]$a$1766
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][19]$a$1766 [24] $memory\csr_file$rdmux[0][6][19]$a$1766 [5] }
      New connections: { $memory\csr_file$rdmux[0][6][19]$a$1766 [31:25] $memory\csr_file$rdmux[0][6][19]$a$1766 [23:6] $memory\csr_file$rdmux[0][6][19]$a$1766 [4:0] } = { $memory\csr_file$rdmux[0][6][19]$a$1766 [24] $memory\csr_file$rdmux[0][6][19]$a$1766 [24] $memory\csr_file$rdmux[0][6][19]$a$1766 [24] $memory\csr_file$rdmux[0][6][19]$a$1766 [24] $memory\csr_file$rdmux[0][6][19]$a$1766 [24] $memory\csr_file$rdmux[0][6][19]$a$1766 [24] $memory\csr_file$rdmux[0][6][19]$a$1766 [24] $memory\csr_file$rdmux[0][6][19]$a$1766 [5] $memory\csr_file$rdmux[0][6][19]$a$1766 [5] $memory\csr_file$rdmux[0][6][19]$a$1766 [5] $memory\csr_file$rdmux[0][6][19]$a$1766 [5] 2'01 $memory\csr_file$rdmux[0][6][19]$a$1766 [5] $memory\csr_file$rdmux[0][6][19]$a$1766 [5] 8'00000111 $memory\csr_file$rdmux[0][6][19]$a$1766 [5] 6'010011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][39]$2017:
      Old ports: A=32'10111100100001111100011100000011, B=32'11111110110001000010011110000011, Y=$memory\csr_file$rdmux[0][6][19]$b$1767
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][19]$b$1767 [14] $memory\csr_file$rdmux[0][6][19]$b$1767 [7] }
      New connections: { $memory\csr_file$rdmux[0][6][19]$b$1767 [31:15] $memory\csr_file$rdmux[0][6][19]$b$1767 [13:8] $memory\csr_file$rdmux[0][6][19]$b$1767 [6:0] } = { 1'1 $memory\csr_file$rdmux[0][6][19]$b$1767 [7] 4'1111 $memory\csr_file$rdmux[0][6][19]$b$1767 [7] 2'01 $memory\csr_file$rdmux[0][6][19]$b$1767 [7] 4'0001 $memory\csr_file$rdmux[0][6][19]$b$1767 [14] $memory\csr_file$rdmux[0][6][19]$b$1767 [14] $memory\csr_file$rdmux[0][6][19]$b$1767 [14] $memory\csr_file$rdmux[0][6][19]$b$1767 [7] 12'001110000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][3]$1909:
      Old ports: A=1149314083, B=1157694483, Y=$memory\csr_file$rdmux[0][6][1]$b$1713
      New ports: A=2'10, B=2'01, Y=$memory\csr_file$rdmux[0][6][1]$b$1713 [5:4]
      New connections: { $memory\csr_file$rdmux[0][6][1]$b$1713 [31:6] $memory\csr_file$rdmux[0][6][1]$b$1713 [3:0] } = { 7'0100010 $memory\csr_file$rdmux[0][6][1]$b$1713 [4] $memory\csr_file$rdmux[0][6][1]$b$1713 [5] 9'000000100 $memory\csr_file$rdmux[0][6][1]$b$1713 [5] 11'00100000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][40]$2020:
      Old ports: A=1542035, B=32'11111111000001000000011010010011, Y=$memory\csr_file$rdmux[0][6][20]$a$1769
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][20]$a$1769 [24] $memory\csr_file$rdmux[0][6][20]$a$1769 [8] }
      New connections: { $memory\csr_file$rdmux[0][6][20]$a$1769 [31:25] $memory\csr_file$rdmux[0][6][20]$a$1769 [23:9] $memory\csr_file$rdmux[0][6][20]$a$1769 [7:0] } = { $memory\csr_file$rdmux[0][6][20]$a$1769 [24] $memory\csr_file$rdmux[0][6][20]$a$1769 [24] $memory\csr_file$rdmux[0][6][20]$a$1769 [24] $memory\csr_file$rdmux[0][6][20]$a$1769 [24] $memory\csr_file$rdmux[0][6][20]$a$1769 [24] $memory\csr_file$rdmux[0][6][20]$a$1769 [24] $memory\csr_file$rdmux[0][6][20]$a$1769 [24] 3'000 $memory\csr_file$rdmux[0][6][20]$a$1769 [8] 2'01 $memory\csr_file$rdmux[0][6][20]$a$1769 [8] $memory\csr_file$rdmux[0][6][20]$a$1769 [8] $memory\csr_file$rdmux[0][6][20]$a$1769 [8] 14'00001110010011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][41]$2023:
      Old ports: A=16156595, B=32'10111100100001111100011110000011, Y=$memory\csr_file$rdmux[0][6][20]$b$1770
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][20]$b$1770 [14] $memory\csr_file$rdmux[0][6][20]$b$1770 [4] }
      New connections: { $memory\csr_file$rdmux[0][6][20]$b$1770 [31:15] $memory\csr_file$rdmux[0][6][20]$b$1770 [13:5] $memory\csr_file$rdmux[0][6][20]$b$1770 [3:0] } = { $memory\csr_file$rdmux[0][6][20]$b$1770 [14] 1'0 $memory\csr_file$rdmux[0][6][20]$b$1770 [14] $memory\csr_file$rdmux[0][6][20]$b$1770 [14] $memory\csr_file$rdmux[0][6][20]$b$1770 [14] $memory\csr_file$rdmux[0][6][20]$b$1770 [14] 3'001 $memory\csr_file$rdmux[0][6][20]$b$1770 [4] $memory\csr_file$rdmux[0][6][20]$b$1770 [4] $memory\csr_file$rdmux[0][6][20]$b$1770 [4] 3'011 $memory\csr_file$rdmux[0][6][20]$b$1770 [14] 9'100011110 $memory\csr_file$rdmux[0][6][20]$b$1770 [4] 4'0011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][42]$2026:
      Old ports: A=16205747, B=267908883, Y=$memory\csr_file$rdmux[0][6][21]$a$1772
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][21]$a$1772 [12] $memory\csr_file$rdmux[0][6][21]$a$1772 [5] }
      New connections: { $memory\csr_file$rdmux[0][6][21]$a$1772 [31:13] $memory\csr_file$rdmux[0][6][21]$a$1772 [11:6] $memory\csr_file$rdmux[0][6][21]$a$1772 [4:0] } = { 4'0000 $memory\csr_file$rdmux[0][6][21]$a$1772 [12] $memory\csr_file$rdmux[0][6][21]$a$1772 [12] $memory\csr_file$rdmux[0][6][21]$a$1772 [12] $memory\csr_file$rdmux[0][6][21]$a$1772 [12] 8'11110111 $memory\csr_file$rdmux[0][6][21]$a$1772 [12] 1'1 $memory\csr_file$rdmux[0][6][21]$a$1772 [12] 4'0111 $memory\csr_file$rdmux[0][6][21]$a$1772 [5] 6'010011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][43]$2029:
      Old ports: A=32'11111110110001000010011110000011, B=32'11111111000001000000011010010011, Y=$memory\csr_file$rdmux[0][6][21]$b$1773
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][21]$b$1773 [8] $memory\csr_file$rdmux[0][6][21]$b$1773 [4] }
      New connections: { $memory\csr_file$rdmux[0][6][21]$b$1773 [31:9] $memory\csr_file$rdmux[0][6][21]$b$1773 [7:5] $memory\csr_file$rdmux[0][6][21]$b$1773 [3:0] } = { 7'1111111 $memory\csr_file$rdmux[0][6][21]$b$1773 [4] $memory\csr_file$rdmux[0][6][21]$b$1773 [8] $memory\csr_file$rdmux[0][6][21]$b$1773 [8] 8'00010000 $memory\csr_file$rdmux[0][6][21]$b$1773 [8] 11'00111000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][44]$2032:
      Old ports: A=16156595, B=32'10111100111001111000010000100011, Y=$memory\csr_file$rdmux[0][6][22]$a$1775
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][22]$a$1775 [16] $memory\csr_file$rdmux[0][6][22]$a$1775 [4] }
      New connections: { $memory\csr_file$rdmux[0][6][22]$a$1775 [31:17] $memory\csr_file$rdmux[0][6][22]$a$1775 [15:5] $memory\csr_file$rdmux[0][6][22]$a$1775 [3:0] } = { $memory\csr_file$rdmux[0][6][22]$a$1775 [16] 1'0 $memory\csr_file$rdmux[0][6][22]$a$1775 [16] $memory\csr_file$rdmux[0][6][22]$a$1775 [16] $memory\csr_file$rdmux[0][6][22]$a$1775 [16] $memory\csr_file$rdmux[0][6][22]$a$1775 [16] 5'00111 $memory\csr_file$rdmux[0][6][22]$a$1775 [4] 9'011100001 $memory\csr_file$rdmux[0][6][22]$a$1775 [4] $memory\csr_file$rdmux[0][6][22]$a$1775 [4] $memory\csr_file$rdmux[0][6][22]$a$1775 [4] 6'010011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][45]$2035:
      Old ports: A=32'11111110110001000010011110000011, B=1542035, Y=$memory\csr_file$rdmux[0][6][22]$b$1776
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][22]$b$1776 [13] $memory\csr_file$rdmux[0][6][22]$b$1776 [4] }
      New connections: { $memory\csr_file$rdmux[0][6][22]$b$1776 [31:14] $memory\csr_file$rdmux[0][6][22]$b$1776 [12:5] $memory\csr_file$rdmux[0][6][22]$b$1776 [3:0] } = { $memory\csr_file$rdmux[0][6][22]$b$1776 [13] $memory\csr_file$rdmux[0][6][22]$b$1776 [13] $memory\csr_file$rdmux[0][6][22]$b$1776 [13] $memory\csr_file$rdmux[0][6][22]$b$1776 [13] $memory\csr_file$rdmux[0][6][22]$b$1776 [13] $memory\csr_file$rdmux[0][6][22]$b$1776 [13] $memory\csr_file$rdmux[0][6][22]$b$1776 [13] 1'0 $memory\csr_file$rdmux[0][6][22]$b$1776 [13] $memory\csr_file$rdmux[0][6][22]$b$1776 [13] 1'0 $memory\csr_file$rdmux[0][6][22]$b$1776 [4] 2'01 $memory\csr_file$rdmux[0][6][22]$b$1776 [4] $memory\csr_file$rdmux[0][6][22]$b$1776 [4] $memory\csr_file$rdmux[0][6][22]$b$1776 [4] 13'0001111000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][46]$2038:
      Old ports: A=32'11111110111101000010011000100011, B=32'11111110110001000010011100000011, Y=$memory\csr_file$rdmux[0][6][23]$a$1778
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][23]$a$1778 [8] $memory\csr_file$rdmux[0][6][23]$a$1778 [5] }
      New connections: { $memory\csr_file$rdmux[0][6][23]$a$1778 [31:9] $memory\csr_file$rdmux[0][6][23]$a$1778 [7:6] $memory\csr_file$rdmux[0][6][23]$a$1778 [4:0] } = { 10'1111111011 $memory\csr_file$rdmux[0][6][23]$a$1778 [5] $memory\csr_file$rdmux[0][6][23]$a$1778 [5] 18'010000100110000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][47]$2041:
      Old ports: A=32'11111110100001000010011110000011, B=32'11110000111101110100011011100011, Y=$memory\csr_file$rdmux[0][6][23]$b$1779
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][23]$b$1779 [8] $memory\csr_file$rdmux[0][6][23]$b$1779 [5] }
      New connections: { $memory\csr_file$rdmux[0][6][23]$b$1779 [31:9] $memory\csr_file$rdmux[0][6][23]$b$1779 [7:6] $memory\csr_file$rdmux[0][6][23]$b$1779 [4:0] } = { 4'1111 $memory\csr_file$rdmux[0][6][23]$b$1779 [8] $memory\csr_file$rdmux[0][6][23]$b$1779 [8] $memory\csr_file$rdmux[0][6][23]$b$1779 [8] 2'01 $memory\csr_file$rdmux[0][6][23]$b$1779 [5] $memory\csr_file$rdmux[0][6][23]$b$1779 [5] $memory\csr_file$rdmux[0][6][23]$b$1779 [5] 2'01 $memory\csr_file$rdmux[0][6][23]$b$1779 [5] $memory\csr_file$rdmux[0][6][23]$b$1779 [5] 1'0 $memory\csr_file$rdmux[0][6][23]$b$1779 [5] $memory\csr_file$rdmux[0][6][23]$b$1779 [8] 5'00111 $memory\csr_file$rdmux[0][6][23]$b$1779 [5] 5'00011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][48]$2044:
      Old ports: A=32'11111110100001000010011110000011, B=32'11111111111101111000011110010011, Y=$memory\csr_file$rdmux[0][6][24]$a$1781
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][24]$a$1781 [13] $memory\csr_file$rdmux[0][6][24]$a$1781 [4] }
      New connections: { $memory\csr_file$rdmux[0][6][24]$a$1781 [31:14] $memory\csr_file$rdmux[0][6][24]$a$1781 [12:5] $memory\csr_file$rdmux[0][6][24]$a$1781 [3:0] } = { 7'1111111 $memory\csr_file$rdmux[0][6][24]$a$1781 [4] 1'1 $memory\csr_file$rdmux[0][6][24]$a$1781 [4] $memory\csr_file$rdmux[0][6][24]$a$1781 [4] $memory\csr_file$rdmux[0][6][24]$a$1781 [4] 2'01 $memory\csr_file$rdmux[0][6][24]$a$1781 [4] $memory\csr_file$rdmux[0][6][24]$a$1781 [4] $memory\csr_file$rdmux[0][6][24]$a$1781 [4] 13'0001111000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][49]$2047:
      Old ports: A=32'11111110111101000010010000100011, B=32'11111110100001000010011110000011, Y=$memory\csr_file$rdmux[0][6][24]$b$1782
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][24]$b$1782 [7] $memory\csr_file$rdmux[0][6][24]$b$1782 [5] }
      New connections: { $memory\csr_file$rdmux[0][6][24]$b$1782 [31:8] $memory\csr_file$rdmux[0][6][24]$b$1782 [6] $memory\csr_file$rdmux[0][6][24]$b$1782 [4:0] } = { 9'111111101 $memory\csr_file$rdmux[0][6][24]$b$1782 [5] $memory\csr_file$rdmux[0][6][24]$b$1782 [5] $memory\csr_file$rdmux[0][6][24]$b$1782 [5] 10'0100001001 $memory\csr_file$rdmux[0][6][24]$b$1782 [7] $memory\csr_file$rdmux[0][6][24]$b$1782 [7] 6'000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][4]$1912:
      Old ports: A=6071, B=32'10111011100001000000011100010011, Y=$memory\csr_file$rdmux[0][6][2]$a$1715
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][2]$a$1715 [18] $memory\csr_file$rdmux[0][6][2]$a$1715 [2] }
      New connections: { $memory\csr_file$rdmux[0][6][2]$a$1715 [31:19] $memory\csr_file$rdmux[0][6][2]$a$1715 [17:3] $memory\csr_file$rdmux[0][6][2]$a$1715 [1:0] } = { $memory\csr_file$rdmux[0][6][2]$a$1715 [18] 1'0 $memory\csr_file$rdmux[0][6][2]$a$1715 [18] $memory\csr_file$rdmux[0][6][2]$a$1715 [18] $memory\csr_file$rdmux[0][6][2]$a$1715 [18] 1'0 $memory\csr_file$rdmux[0][6][2]$a$1715 [18] $memory\csr_file$rdmux[0][6][2]$a$1715 [18] $memory\csr_file$rdmux[0][6][2]$a$1715 [18] 9'000000000 $memory\csr_file$rdmux[0][6][2]$a$1715 [2] 4'0111 $memory\csr_file$rdmux[0][6][2]$a$1715 [2] 1'0 $memory\csr_file$rdmux[0][6][2]$a$1715 [2] 4'1011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][50]$2050:
      Old ports: A=32'11101100111100000100111011100011, B=1939, Y=$memory\csr_file$rdmux[0][6][25]$a$1784
      New ports: A=2'10, B=2'01, Y=$memory\csr_file$rdmux[0][6][25]$a$1784 [5:4]
      New connections: { $memory\csr_file$rdmux[0][6][25]$a$1784 [31:6] $memory\csr_file$rdmux[0][6][25]$a$1784 [3:0] } = { $memory\csr_file$rdmux[0][6][25]$a$1784 [5] $memory\csr_file$rdmux[0][6][25]$a$1784 [5] $memory\csr_file$rdmux[0][6][25]$a$1784 [5] 1'0 $memory\csr_file$rdmux[0][6][25]$a$1784 [5] $memory\csr_file$rdmux[0][6][25]$a$1784 [5] 2'00 $memory\csr_file$rdmux[0][6][25]$a$1784 [5] $memory\csr_file$rdmux[0][6][25]$a$1784 [5] $memory\csr_file$rdmux[0][6][25]$a$1784 [5] $memory\csr_file$rdmux[0][6][25]$a$1784 [5] 5'00000 $memory\csr_file$rdmux[0][6][25]$a$1784 [5] 2'00 $memory\csr_file$rdmux[0][6][25]$a$1784 [5] 2'11 $memory\csr_file$rdmux[0][6][25]$a$1784 [4] 1'1 $memory\csr_file$rdmux[0][6][25]$a$1784 [5] 4'0011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][51]$2053:
      Old ports: A=492819, B=1153507459, Y=$memory\csr_file$rdmux[0][6][25]$b$1785
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][25]$b$1785 [7] $memory\csr_file$rdmux[0][6][25]$b$1785 [4] }
      New connections: { $memory\csr_file$rdmux[0][6][25]$b$1785 [31:8] $memory\csr_file$rdmux[0][6][25]$b$1785 [6:5] $memory\csr_file$rdmux[0][6][25]$b$1785 [3:0] } = { 1'0 $memory\csr_file$rdmux[0][6][25]$b$1785 [7] 3'000 $memory\csr_file$rdmux[0][6][25]$b$1785 [7] 2'00 $memory\csr_file$rdmux[0][6][25]$b$1785 [7] $memory\csr_file$rdmux[0][6][25]$b$1785 [7] 3'000 $memory\csr_file$rdmux[0][6][25]$b$1785 [4] $memory\csr_file$rdmux[0][6][25]$b$1785 [4] 1'1 $memory\csr_file$rdmux[0][6][25]$b$1785 [4] 1'0 $memory\csr_file$rdmux[0][6][25]$b$1785 [7] 2'00 $memory\csr_file$rdmux[0][6][25]$b$1785 [4] 1'0 $memory\csr_file$rdmux[0][6][25]$b$1785 [4] 6'000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][52]$2056:
      Old ports: A=1149314051, B=1157693715, Y=$memory\csr_file$rdmux[0][6][26]$a$1787
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][26]$a$1787 [10] $memory\csr_file$rdmux[0][6][26]$a$1787 [4] }
      New connections: { $memory\csr_file$rdmux[0][6][26]$a$1787 [31:11] $memory\csr_file$rdmux[0][6][26]$a$1787 [9:5] $memory\csr_file$rdmux[0][6][26]$a$1787 [3:0] } = { 7'0100010 $memory\csr_file$rdmux[0][6][26]$a$1787 [4] $memory\csr_file$rdmux[0][6][26]$a$1787 [10] 9'000000100 $memory\csr_file$rdmux[0][6][26]$a$1787 [10] 3'000 $memory\csr_file$rdmux[0][6][26]$a$1787 [4] 7'0000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][53]$2059:
      Old ports: A=32871, B=10864563, Y=$memory\csr_file$rdmux[0][6][26]$b$1788
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][26]$b$1788 [4] $memory\csr_file$rdmux[0][6][26]$b$1788 [2] }
      New connections: { $memory\csr_file$rdmux[0][6][26]$b$1788 [31:5] $memory\csr_file$rdmux[0][6][26]$b$1788 [3] $memory\csr_file$rdmux[0][6][26]$b$1788 [1:0] } = { 8'00000000 $memory\csr_file$rdmux[0][6][26]$b$1788 [4] 1'0 $memory\csr_file$rdmux[0][6][26]$b$1788 [4] 2'00 $memory\csr_file$rdmux[0][6][26]$b$1788 [4] 1'0 $memory\csr_file$rdmux[0][6][26]$b$1788 [4] 1'1 $memory\csr_file$rdmux[0][6][26]$b$1788 [4] 3'000 $memory\csr_file$rdmux[0][6][26]$b$1788 [4] $memory\csr_file$rdmux[0][6][26]$b$1788 [4] $memory\csr_file$rdmux[0][6][26]$b$1788 [4] $memory\csr_file$rdmux[0][6][26]$b$1788 [4] $memory\csr_file$rdmux[0][6][26]$b$1788 [2] 4'1011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][54]$2062:
      Old ports: A=3667859, B=12912819, Y=$memory\csr_file$rdmux[0][6][27]$a$1790
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][27]$a$1790 [8] $memory\csr_file$rdmux[0][6][27]$a$1790 [5] }
      New connections: { $memory\csr_file$rdmux[0][6][27]$a$1790 [31:9] $memory\csr_file$rdmux[0][6][27]$a$1790 [7:6] $memory\csr_file$rdmux[0][6][27]$a$1790 [4:0] } = { 8'00000000 $memory\csr_file$rdmux[0][6][27]$a$1790 [5] $memory\csr_file$rdmux[0][6][27]$a$1790 [5] $memory\csr_file$rdmux[0][6][27]$a$1790 [8] $memory\csr_file$rdmux[0][6][27]$a$1790 [8] 2'01 $memory\csr_file$rdmux[0][6][27]$a$1790 [8] 1'1 $memory\csr_file$rdmux[0][6][27]$a$1790 [8] $memory\csr_file$rdmux[0][6][27]$a$1790 [8] $memory\csr_file$rdmux[0][6][27]$a$1790 [8] $memory\csr_file$rdmux[0][6][27]$a$1790 [8] $memory\csr_file$rdmux[0][6][27]$a$1790 [5] $memory\csr_file$rdmux[0][6][27]$a$1790 [8] $memory\csr_file$rdmux[0][6][27]$a$1790 [8] 7'1010011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][55]$2065:
      Old ports: A=101159523, B=3147667, Y=$memory\csr_file$rdmux[0][6][27]$b$1791
      New ports: A=2'10, B=2'01, Y=$memory\csr_file$rdmux[0][6][27]$b$1791 [5:4]
      New connections: { $memory\csr_file$rdmux[0][6][27]$b$1791 [31:6] $memory\csr_file$rdmux[0][6][27]$b$1791 [3:0] } = { 5'00000 $memory\csr_file$rdmux[0][6][27]$b$1791 [5] $memory\csr_file$rdmux[0][6][27]$b$1791 [5] 3'000 $memory\csr_file$rdmux[0][6][27]$b$1791 [4] $memory\csr_file$rdmux[0][6][27]$b$1791 [4] 1'0 $memory\csr_file$rdmux[0][6][27]$b$1791 [5] $memory\csr_file$rdmux[0][6][27]$b$1791 [5] $memory\csr_file$rdmux[0][6][27]$b$1791 [5] $memory\csr_file$rdmux[0][6][27]$b$1791 [5] 2'00 $memory\csr_file$rdmux[0][6][27]$b$1791 [5] 1'0 $memory\csr_file$rdmux[0][6][27]$b$1791 [4] 1'1 $memory\csr_file$rdmux[0][6][27]$b$1791 [4] $memory\csr_file$rdmux[0][6][27]$b$1791 [4] $memory\csr_file$rdmux[0][6][27]$b$1791 [5] 4'0011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][56]$2068:
      Old ports: A=80215651, B=3504019, Y=$memory\csr_file$rdmux[0][6][28]$a$1793
      New ports: A=2'10, B=2'01, Y=$memory\csr_file$rdmux[0][6][28]$a$1793 [5:4]
      New connections: { $memory\csr_file$rdmux[0][6][28]$a$1793 [31:6] $memory\csr_file$rdmux[0][6][28]$a$1793 [3:0] } = { 5'00000 $memory\csr_file$rdmux[0][6][28]$a$1793 [5] 2'00 $memory\csr_file$rdmux[0][6][28]$a$1793 [5] $memory\csr_file$rdmux[0][6][28]$a$1793 [5:4] $memory\csr_file$rdmux[0][6][28]$a$1793 [4] 2'01 $memory\csr_file$rdmux[0][6][28]$a$1793 [5] 1'1 $memory\csr_file$rdmux[0][6][28]$a$1793 [5] 3'111 $memory\csr_file$rdmux[0][6][28]$a$1793 [5] 2'11 $memory\csr_file$rdmux[0][6][28]$a$1793 [4] $memory\csr_file$rdmux[0][6][28]$a$1793 [4] $memory\csr_file$rdmux[0][6][28]$a$1793 [5] 4'0011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][57]$2071:
      Old ports: A=329491, B=101161059, Y=$memory\csr_file$rdmux[0][6][28]$b$1794
      New ports: A=2'01, B=2'10, Y=$memory\csr_file$rdmux[0][6][28]$b$1794 [5:4]
      New connections: { $memory\csr_file$rdmux[0][6][28]$b$1794 [31:6] $memory\csr_file$rdmux[0][6][28]$b$1794 [3:0] } = { 5'00000 $memory\csr_file$rdmux[0][6][28]$b$1794 [5] $memory\csr_file$rdmux[0][6][28]$b$1794 [5] 7'0000001 $memory\csr_file$rdmux[0][6][28]$b$1794 [5] 1'1 $memory\csr_file$rdmux[0][6][28]$b$1794 [5] 2'00 $memory\csr_file$rdmux[0][6][28]$b$1794 [5] $memory\csr_file$rdmux[0][6][28]$b$1794 [5:4] $memory\csr_file$rdmux[0][6][28]$b$1794 [4] $memory\csr_file$rdmux[0][6][28]$b$1794 [4] 1'0 $memory\csr_file$rdmux[0][6][28]$b$1794 [5] 4'0011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][58]$2074:
      Old ports: A=32'11111111110010001111011000010011, B=32'11111110000001100000011110010011, Y=$memory\csr_file$rdmux[0][6][29]$a$1796
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][29]$a$1796 [12] $memory\csr_file$rdmux[0][6][29]$a$1796 [7] }
      New connections: { $memory\csr_file$rdmux[0][6][29]$a$1796 [31:13] $memory\csr_file$rdmux[0][6][29]$a$1796 [11:8] $memory\csr_file$rdmux[0][6][29]$a$1796 [6:0] } = { 7'1111111 $memory\csr_file$rdmux[0][6][29]$a$1796 [12] $memory\csr_file$rdmux[0][6][29]$a$1796 [12] $memory\csr_file$rdmux[0][6][29]$a$1796 [12] 2'00 $memory\csr_file$rdmux[0][6][29]$a$1796 [12] $memory\csr_file$rdmux[0][6][29]$a$1796 [7] $memory\csr_file$rdmux[0][6][29]$a$1796 [7] 1'0 $memory\csr_file$rdmux[0][6][29]$a$1796 [12] $memory\csr_file$rdmux[0][6][29]$a$1796 [12] $memory\csr_file$rdmux[0][6][29]$a$1796 [12] 3'011 $memory\csr_file$rdmux[0][6][29]$a$1796 [7] 7'0010011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][59]$2077:
      Old ports: A=150432867, B=46627939, Y=$memory\csr_file$rdmux[0][6][29]$b$1797
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][29]$b$1797 [20] $memory\csr_file$rdmux[0][6][29]$b$1797 [12] }
      New connections: { $memory\csr_file$rdmux[0][6][29]$b$1797 [31:21] $memory\csr_file$rdmux[0][6][29]$b$1797 [19:13] $memory\csr_file$rdmux[0][6][29]$b$1797 [11:0] } = { 4'0000 $memory\csr_file$rdmux[0][6][29]$b$1797 [20] 1'0 $memory\csr_file$rdmux[0][6][29]$b$1797 [12] 3'011 $memory\csr_file$rdmux[0][6][29]$b$1797 [20] 19'0111011110001100011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][5]$1915:
      Old ports: A=493459, B=1113589395, Y=$memory\csr_file$rdmux[0][6][2]$b$1716
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][2]$b$1716 [21] $memory\csr_file$rdmux[0][6][2]$b$1716 [8] }
      New connections: { $memory\csr_file$rdmux[0][6][2]$b$1716 [31:22] $memory\csr_file$rdmux[0][6][2]$b$1716 [20:9] $memory\csr_file$rdmux[0][6][2]$b$1716 [7:0] } = { 1'0 $memory\csr_file$rdmux[0][6][2]$b$1716 [21] 4'0000 $memory\csr_file$rdmux[0][6][2]$b$1716 [21] 2'00 $memory\csr_file$rdmux[0][6][2]$b$1716 [21] 2'00 $memory\csr_file$rdmux[0][6][2]$b$1716 [8] $memory\csr_file$rdmux[0][6][2]$b$1716 [8] $memory\csr_file$rdmux[0][6][2]$b$1716 [8] $memory\csr_file$rdmux[0][6][2]$b$1716 [8] 14'00001110010011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][60]$2080:
      Old ports: A=362131, B=460691, Y=$memory\csr_file$rdmux[0][6][30]$a$1799
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][30]$a$1799 [15] $memory\csr_file$rdmux[0][6][30]$a$1799 [8] }
      New connections: { $memory\csr_file$rdmux[0][6][30]$a$1799 [31:16] $memory\csr_file$rdmux[0][6][30]$a$1799 [14:9] $memory\csr_file$rdmux[0][6][30]$a$1799 [7:0] } = { 14'00000000000001 $memory\csr_file$rdmux[0][6][30]$a$1799 [8] 15'100001110010011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][61]$2083:
      Old ports: A=436227, B=4687763, Y=$memory\csr_file$rdmux[0][6][30]$b$1800
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][30]$b$1800 [11] $memory\csr_file$rdmux[0][6][30]$b$1800 [4] }
      New connections: { $memory\csr_file$rdmux[0][6][30]$b$1800 [31:12] $memory\csr_file$rdmux[0][6][30]$b$1800 [10:5] $memory\csr_file$rdmux[0][6][30]$b$1800 [3:0] } = { 9'000000000 $memory\csr_file$rdmux[0][6][30]$b$1800 [4] 5'00011 $memory\csr_file$rdmux[0][6][30]$b$1800 [4] 2'10 $memory\csr_file$rdmux[0][6][30]$b$1800 [11] 1'0 $memory\csr_file$rdmux[0][6][30]$b$1800 [4] $memory\csr_file$rdmux[0][6][30]$b$1800 [4] $memory\csr_file$rdmux[0][6][30]$b$1800 [4] $memory\csr_file$rdmux[0][6][30]$b$1800 [4] 6'000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][62]$2086:
      Old ports: A=4621971, B=32'11111111000001111010111000100011, Y=$memory\csr_file$rdmux[0][6][31]$a$1802
      New ports: A=2'01, B=2'10, Y=$memory\csr_file$rdmux[0][6][31]$a$1802 [5:4]
      New connections: { $memory\csr_file$rdmux[0][6][31]$a$1802 [31:6] $memory\csr_file$rdmux[0][6][31]$a$1802 [3:0] } = { $memory\csr_file$rdmux[0][6][31]$a$1802 [5] $memory\csr_file$rdmux[0][6][31]$a$1802 [5] $memory\csr_file$rdmux[0][6][31]$a$1802 [5] $memory\csr_file$rdmux[0][6][31]$a$1802 [5] $memory\csr_file$rdmux[0][6][31]$a$1802 [5] $memory\csr_file$rdmux[0][6][31]$a$1802 [5] $memory\csr_file$rdmux[0][6][31]$a$1802 [5] $memory\csr_file$rdmux[0][6][31]$a$1802 [5] 1'0 $memory\csr_file$rdmux[0][6][31]$a$1802 [4] 5'00011 $memory\csr_file$rdmux[0][6][31]$a$1802 [5] 2'10 $memory\csr_file$rdmux[0][6][31]$a$1802 [5] 1'0 $memory\csr_file$rdmux[0][6][31]$a$1802 [5] 3'110 $memory\csr_file$rdmux[0][6][31]$a$1802 [4] 5'00011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][63]$2089:
      Old ports: A=32'11111110110001111110100011100011, B=32'11111111111101100000011110010011, Y=$memory\csr_file$rdmux[0][6][31]$b$1803
      New ports: A=2'10, B=2'01, Y=$memory\csr_file$rdmux[0][6][31]$b$1803 [5:4]
      New connections: { $memory\csr_file$rdmux[0][6][31]$b$1803 [31:6] $memory\csr_file$rdmux[0][6][31]$b$1803 [3:0] } = { 7'1111111 $memory\csr_file$rdmux[0][6][31]$b$1803 [4] 2'11 $memory\csr_file$rdmux[0][6][31]$b$1803 [4] $memory\csr_file$rdmux[0][6][31]$b$1803 [4] 3'011 $memory\csr_file$rdmux[0][6][31]$b$1803 [5] $memory\csr_file$rdmux[0][6][31]$b$1803 [5] $memory\csr_file$rdmux[0][6][31]$b$1803 [5] $memory\csr_file$rdmux[0][6][31]$b$1803 [5] 1'0 $memory\csr_file$rdmux[0][6][31]$b$1803 [5:4] $memory\csr_file$rdmux[0][6][31]$b$1803 [4] $memory\csr_file$rdmux[0][6][31]$b$1803 [4] 1'1 $memory\csr_file$rdmux[0][6][31]$b$1803 [5] 4'0011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][64]$2092:
      Old ports: A=1088915379, B=32'11111111110001111111011110010011, Y=$memory\csr_file$rdmux[0][6][32]$a$1805
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][32]$a$1805 [12] $memory\csr_file$rdmux[0][6][32]$a$1805 [5] }
      New connections: { $memory\csr_file$rdmux[0][6][32]$a$1805 [31:13] $memory\csr_file$rdmux[0][6][32]$a$1805 [11:6] $memory\csr_file$rdmux[0][6][32]$a$1805 [4:0] } = { $memory\csr_file$rdmux[0][6][32]$a$1805 [12] 1'1 $memory\csr_file$rdmux[0][6][32]$a$1805 [12] $memory\csr_file$rdmux[0][6][32]$a$1805 [12] $memory\csr_file$rdmux[0][6][32]$a$1805 [12] $memory\csr_file$rdmux[0][6][32]$a$1805 [12] $memory\csr_file$rdmux[0][6][32]$a$1805 [12] $memory\csr_file$rdmux[0][6][32]$a$1805 [12] 2'11 $memory\csr_file$rdmux[0][6][32]$a$1805 [5] 6'001111 $memory\csr_file$rdmux[0][6][32]$a$1805 [12] $memory\csr_file$rdmux[0][6][32]$a$1805 [12] 11'01111010011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][65]$2095:
      Old ports: A=4687763, B=16189235, Y=$memory\csr_file$rdmux[0][6][32]$b$1806
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][32]$b$1806 [7] $memory\csr_file$rdmux[0][6][32]$b$1806 [5] }
      New connections: { $memory\csr_file$rdmux[0][6][32]$b$1806 [31:8] $memory\csr_file$rdmux[0][6][32]$b$1806 [6] $memory\csr_file$rdmux[0][6][32]$b$1806 [4:0] } = { 8'00000000 $memory\csr_file$rdmux[0][6][32]$b$1806 [5] 1'1 $memory\csr_file$rdmux[0][6][32]$b$1806 [5] $memory\csr_file$rdmux[0][6][32]$b$1806 [5] 4'0111 $memory\csr_file$rdmux[0][6][32]$b$1806 [7] 13'0000111010011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][66]$2098:
      Old ports: A=16090547, B=18311267, Y=$memory\csr_file$rdmux[0][6][33]$a$1808
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][33]$a$1808 [6] $memory\csr_file$rdmux[0][6][33]$a$1808 [4] }
      New connections: { $memory\csr_file$rdmux[0][6][33]$a$1808 [31:7] $memory\csr_file$rdmux[0][6][33]$a$1808 [5] $memory\csr_file$rdmux[0][6][33]$a$1808 [3:0] } = { 7'0000000 $memory\csr_file$rdmux[0][6][33]$a$1808 [6] $memory\csr_file$rdmux[0][6][33]$a$1808 [4] $memory\csr_file$rdmux[0][6][33]$a$1808 [4] $memory\csr_file$rdmux[0][6][33]$a$1808 [4] 3'101 $memory\csr_file$rdmux[0][6][33]$a$1808 [6] 1'1 $memory\csr_file$rdmux[0][6][33]$a$1808 [4] $memory\csr_file$rdmux[0][6][33]$a$1808 [6] $memory\csr_file$rdmux[0][6][33]$a$1808 [6] 1'0 $memory\csr_file$rdmux[0][6][33]$a$1808 [6] $memory\csr_file$rdmux[0][6][33]$a$1808 [4] 1'0 $memory\csr_file$rdmux[0][6][33]$a$1808 [4] $memory\csr_file$rdmux[0][6][33]$a$1808 [4] 5'10011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][67]$2101:
      Old ports: A=32871, B=329491, Y=$memory\csr_file$rdmux[0][6][33]$b$1809
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][33]$b$1809 [4] $memory\csr_file$rdmux[0][6][33]$b$1809 [2] }
      New connections: { $memory\csr_file$rdmux[0][6][33]$b$1809 [31:5] $memory\csr_file$rdmux[0][6][33]$b$1809 [3] $memory\csr_file$rdmux[0][6][33]$b$1809 [1:0] } = { 13'0000000000000 $memory\csr_file$rdmux[0][6][33]$b$1809 [4] 1'0 $memory\csr_file$rdmux[0][6][33]$b$1809 [4] $memory\csr_file$rdmux[0][6][33]$b$1809 [2] 4'0000 $memory\csr_file$rdmux[0][6][33]$b$1809 [4] $memory\csr_file$rdmux[0][6][33]$b$1809 [4] $memory\csr_file$rdmux[0][6][33]$b$1809 [4] 1'0 $memory\csr_file$rdmux[0][6][33]$b$1809 [2] $memory\csr_file$rdmux[0][6][33]$b$1809 [2] 3'011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][68]$2104:
      Old ports: A=32'11111111000101010111110011100011, B=378755, Y=$memory\csr_file$rdmux[0][6][34]$a$1811
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][34]$a$1811 [8] $memory\csr_file$rdmux[0][6][34]$a$1811 [5] }
      New connections: { $memory\csr_file$rdmux[0][6][34]$a$1811 [31:9] $memory\csr_file$rdmux[0][6][34]$a$1811 [7:6] $memory\csr_file$rdmux[0][6][34]$a$1811 [4:0] } = { $memory\csr_file$rdmux[0][6][34]$a$1811 [5] $memory\csr_file$rdmux[0][6][34]$a$1811 [5] $memory\csr_file$rdmux[0][6][34]$a$1811 [5] $memory\csr_file$rdmux[0][6][34]$a$1811 [5] $memory\csr_file$rdmux[0][6][34]$a$1811 [5] $memory\csr_file$rdmux[0][6][34]$a$1811 [5] $memory\csr_file$rdmux[0][6][34]$a$1811 [5] $memory\csr_file$rdmux[0][6][34]$a$1811 [5] 3'000 $memory\csr_file$rdmux[0][6][34]$a$1811 [5] 4'0101 $memory\csr_file$rdmux[0][6][34]$a$1811 [8] 1'1 $memory\csr_file$rdmux[0][6][34]$a$1811 [5] $memory\csr_file$rdmux[0][6][34]$a$1811 [5] $memory\csr_file$rdmux[0][6][34]$a$1811 [5] 1'1 $memory\csr_file$rdmux[0][6][34]$a$1811 [8] 1'1 $memory\csr_file$rdmux[0][6][34]$a$1811 [5] 5'00011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][69]$2107:
      Old ports: A=1509139, B=1410451, Y=$memory\csr_file$rdmux[0][6][34]$b$1812
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][34]$b$1812 [9] $memory\csr_file$rdmux[0][6][34]$b$1812 [7] }
      New connections: { $memory\csr_file$rdmux[0][6][34]$b$1812 [31:10] $memory\csr_file$rdmux[0][6][34]$b$1812 [8] $memory\csr_file$rdmux[0][6][34]$b$1812 [6:0] } = { 14'00000000000101 $memory\csr_file$rdmux[0][6][34]$b$1812 [9] 1'1 $memory\csr_file$rdmux[0][6][34]$b$1812 [7] 13'0000110010011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][6]$1918:
      Old ports: A=427539, B=492947, Y=$memory\csr_file$rdmux[0][6][3]$a$1718
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][3]$a$1718 [9] $memory\csr_file$rdmux[0][6][3]$a$1718 [7] }
      New connections: { $memory\csr_file$rdmux[0][6][3]$a$1718 [31:10] $memory\csr_file$rdmux[0][6][3]$a$1718 [8] $memory\csr_file$rdmux[0][6][3]$a$1718 [6:0] } = { 15'000000000000011 $memory\csr_file$rdmux[0][6][3]$a$1718 [7] 6'100001 $memory\csr_file$rdmux[0][6][3]$a$1718 [7] 7'0010011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][70]$2110:
      Old ports: A=32'11111110111101110000111110100011, B=32'11111111000101110110100011100011, Y=$memory\csr_file$rdmux[0][6][35]$a$1814
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][35]$a$1814 [8] $memory\csr_file$rdmux[0][6][35]$a$1814 [6] }
      New connections: { $memory\csr_file$rdmux[0][6][35]$a$1814 [31:9] $memory\csr_file$rdmux[0][6][35]$a$1814 [7] $memory\csr_file$rdmux[0][6][35]$a$1814 [5:0] } = { 7'1111111 $memory\csr_file$rdmux[0][6][35]$a$1814 [6] $memory\csr_file$rdmux[0][6][35]$a$1814 [8] $memory\csr_file$rdmux[0][6][35]$a$1814 [8] $memory\csr_file$rdmux[0][6][35]$a$1814 [8] 6'101110 $memory\csr_file$rdmux[0][6][35]$a$1814 [6] $memory\csr_file$rdmux[0][6][35]$a$1814 [6] 2'01 $memory\csr_file$rdmux[0][6][35]$a$1814 [8] $memory\csr_file$rdmux[0][6][35]$a$1814 [8] 7'1100011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][71]$2113:
      Old ports: A=32871, B=378499, Y=$memory\csr_file$rdmux[0][6][35]$b$1815
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][35]$b$1815 [7] $memory\csr_file$rdmux[0][6][35]$b$1815 [2] }
      New connections: { $memory\csr_file$rdmux[0][6][35]$b$1815 [31:8] $memory\csr_file$rdmux[0][6][35]$b$1815 [6:3] $memory\csr_file$rdmux[0][6][35]$b$1815 [1:0] } = { 13'0000000000000 $memory\csr_file$rdmux[0][6][35]$b$1815 [7] 1'0 $memory\csr_file$rdmux[0][6][35]$b$1815 [7] 1'1 $memory\csr_file$rdmux[0][6][35]$b$1815 [7] 3'000 $memory\csr_file$rdmux[0][6][35]$b$1815 [7] $memory\csr_file$rdmux[0][6][35]$b$1815 [7] 1'0 $memory\csr_file$rdmux[0][6][35]$b$1815 [2] $memory\csr_file$rdmux[0][6][35]$b$1815 [2] 4'0011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][72]$2116:
      Old ports: A=1509139, B=3635091, Y=$memory\csr_file$rdmux[0][6][36]$a$1817
      New ports: A=1'0, B=1'1, Y=$memory\csr_file$rdmux[0][6][36]$a$1817 [7]
      New connections: { $memory\csr_file$rdmux[0][6][36]$a$1817 [31:8] $memory\csr_file$rdmux[0][6][36]$a$1817 [6:0] } = { 10'0000000000 $memory\csr_file$rdmux[0][6][36]$a$1817 [7] 6'101110 $memory\csr_file$rdmux[0][6][36]$a$1817 [7] $memory\csr_file$rdmux[0][6][36]$a$1817 [7] $memory\csr_file$rdmux[0][6][36]$a$1817 [7] 11'01110010011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][73]$2119:
      Old ports: A=32'11111110110101110000111110100011, B=1410451, Y=$memory\csr_file$rdmux[0][6][36]$b$1818
      New ports: A=2'10, B=2'01, Y=$memory\csr_file$rdmux[0][6][36]$b$1818 [5:4]
      New connections: { $memory\csr_file$rdmux[0][6][36]$b$1818 [31:6] $memory\csr_file$rdmux[0][6][36]$b$1818 [3:0] } = { $memory\csr_file$rdmux[0][6][36]$b$1818 [5] $memory\csr_file$rdmux[0][6][36]$b$1818 [5] $memory\csr_file$rdmux[0][6][36]$b$1818 [5] $memory\csr_file$rdmux[0][6][36]$b$1818 [5] $memory\csr_file$rdmux[0][6][36]$b$1818 [5] $memory\csr_file$rdmux[0][6][36]$b$1818 [5] $memory\csr_file$rdmux[0][6][36]$b$1818 [5] 1'0 $memory\csr_file$rdmux[0][6][36]$b$1818 [5] $memory\csr_file$rdmux[0][6][36]$b$1818 [5] 4'0101 $memory\csr_file$rdmux[0][6][36]$b$1818 [5] 1'1 $memory\csr_file$rdmux[0][6][36]$b$1818 [4] 3'000 $memory\csr_file$rdmux[0][6][36]$b$1818 [5] 1'1 $memory\csr_file$rdmux[0][6][36]$b$1818 [5] 7'1100011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][74]$2122:
      Old ports: A=32'11111000000001111000000011100011, B=378499, Y=$memory\csr_file$rdmux[0][6][37]$a$1820
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][37]$a$1820 [9] $memory\csr_file$rdmux[0][6][37]$a$1820 [5] }
      New connections: { $memory\csr_file$rdmux[0][6][37]$a$1820 [31:10] $memory\csr_file$rdmux[0][6][37]$a$1820 [8:6] $memory\csr_file$rdmux[0][6][37]$a$1820 [4:0] } = { $memory\csr_file$rdmux[0][6][37]$a$1820 [5] $memory\csr_file$rdmux[0][6][37]$a$1820 [5] $memory\csr_file$rdmux[0][6][37]$a$1820 [5] $memory\csr_file$rdmux[0][6][37]$a$1820 [5] $memory\csr_file$rdmux[0][6][37]$a$1820 [5] 9'000000001 $memory\csr_file$rdmux[0][6][37]$a$1820 [5] 2'11 $memory\csr_file$rdmux[0][6][37]$a$1820 [9] 3'000 $memory\csr_file$rdmux[0][6][37]$a$1820 [9] 2'01 $memory\csr_file$rdmux[0][6][37]$a$1820 [5] 5'00011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][75]$2125:
      Old ports: A=1509139, B=3635091, Y=$memory\csr_file$rdmux[0][6][37]$b$1821
      New ports: A=1'0, B=1'1, Y=$memory\csr_file$rdmux[0][6][37]$b$1821 [7]
      New connections: { $memory\csr_file$rdmux[0][6][37]$b$1821 [31:8] $memory\csr_file$rdmux[0][6][37]$b$1821 [6:0] } = { 10'0000000000 $memory\csr_file$rdmux[0][6][37]$b$1821 [7] 6'101110 $memory\csr_file$rdmux[0][6][37]$b$1821 [7] $memory\csr_file$rdmux[0][6][37]$b$1821 [7] $memory\csr_file$rdmux[0][6][37]$b$1821 [7] 11'01110010011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][76]$2128:
      Old ports: A=32'11111110110101110000111110100011, B=1410451, Y=$memory\csr_file$rdmux[0][6][38]$a$1823
      New ports: A=2'10, B=2'01, Y=$memory\csr_file$rdmux[0][6][38]$a$1823 [5:4]
      New connections: { $memory\csr_file$rdmux[0][6][38]$a$1823 [31:6] $memory\csr_file$rdmux[0][6][38]$a$1823 [3:0] } = { $memory\csr_file$rdmux[0][6][38]$a$1823 [5] $memory\csr_file$rdmux[0][6][38]$a$1823 [5] $memory\csr_file$rdmux[0][6][38]$a$1823 [5] $memory\csr_file$rdmux[0][6][38]$a$1823 [5] $memory\csr_file$rdmux[0][6][38]$a$1823 [5] $memory\csr_file$rdmux[0][6][38]$a$1823 [5] $memory\csr_file$rdmux[0][6][38]$a$1823 [5] 1'0 $memory\csr_file$rdmux[0][6][38]$a$1823 [5] $memory\csr_file$rdmux[0][6][38]$a$1823 [5] 4'0101 $memory\csr_file$rdmux[0][6][38]$a$1823 [5] 1'1 $memory\csr_file$rdmux[0][6][38]$a$1823 [4] 3'000 $memory\csr_file$rdmux[0][6][38]$a$1823 [5] 1'1 $memory\csr_file$rdmux[0][6][38]$a$1823 [5] 7'1100011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][77]$2131:
      Old ports: A=32'11111100000001111001101011100011, B=32'11110110010111111111000001101111, Y=$memory\csr_file$rdmux[0][6][38]$b$1824
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][38]$b$1824 [7] $memory\csr_file$rdmux[0][6][38]$b$1824 [2] }
      New connections: { $memory\csr_file$rdmux[0][6][38]$b$1824 [31:8] $memory\csr_file$rdmux[0][6][38]$b$1824 [6:3] $memory\csr_file$rdmux[0][6][38]$b$1824 [1:0] } = { 4'1111 $memory\csr_file$rdmux[0][6][38]$b$1824 [7] 1'1 $memory\csr_file$rdmux[0][6][38]$b$1824 [2] 2'00 $memory\csr_file$rdmux[0][6][38]$b$1824 [2] 1'0 $memory\csr_file$rdmux[0][6][38]$b$1824 [2] $memory\csr_file$rdmux[0][6][38]$b$1824 [2] 4'1111 $memory\csr_file$rdmux[0][6][38]$b$1824 [2] $memory\csr_file$rdmux[0][6][38]$b$1824 [2] 1'1 $memory\csr_file$rdmux[0][6][38]$b$1824 [7] 1'0 $memory\csr_file$rdmux[0][6][38]$b$1824 [7] 4'0110 $memory\csr_file$rdmux[0][6][38]$b$1824 [2] 2'11 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][78]$2134:
      Old ports: A=370307, B=4563587, Y=$memory\csr_file$rdmux[0][6][39]$a$1826
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][39]$a$1826 [22] $memory\csr_file$rdmux[0][6][39]$a$1826 [10] }
      New connections: { $memory\csr_file$rdmux[0][6][39]$a$1826 [31:23] $memory\csr_file$rdmux[0][6][39]$a$1826 [21:11] $memory\csr_file$rdmux[0][6][39]$a$1826 [9:0] } = 30'000000000000101101001010000011
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][79]$2137:
      Old ports: A=8761219, B=12955395, Y=$memory\csr_file$rdmux[0][6][39]$b$1827
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][39]$b$1827 [22] $memory\csr_file$rdmux[0][6][39]$b$1827 [7] }
      New connections: { $memory\csr_file$rdmux[0][6][39]$b$1827 [31:23] $memory\csr_file$rdmux[0][6][39]$b$1827 [21:8] $memory\csr_file$rdmux[0][6][39]$b$1827 [6:0] } = 30'000000001000101101011110000011
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][7]$1921:
      Old ports: A=460051, B=385876207, Y=$memory\csr_file$rdmux[0][6][3]$b$1719
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][3]$b$1719 [4] $memory\csr_file$rdmux[0][6][3]$b$1719 [2] }
      New connections: { $memory\csr_file$rdmux[0][6][3]$b$1719 [31:5] $memory\csr_file$rdmux[0][6][3]$b$1719 [3] $memory\csr_file$rdmux[0][6][3]$b$1719 [1:0] } = { 3'000 $memory\csr_file$rdmux[0][6][3]$b$1719 [2] 1'0 $memory\csr_file$rdmux[0][6][3]$b$1719 [2] $memory\csr_file$rdmux[0][6][3]$b$1719 [2] $memory\csr_file$rdmux[0][6][3]$b$1719 [2] 5'00000 $memory\csr_file$rdmux[0][6][3]$b$1719 [4] $memory\csr_file$rdmux[0][6][3]$b$1719 [4] $memory\csr_file$rdmux[0][6][3]$b$1719 [4] 5'00000 $memory\csr_file$rdmux[0][6][3]$b$1719 [4] 1'0 $memory\csr_file$rdmux[0][6][3]$b$1719 [4] $memory\csr_file$rdmux[0][6][3]$b$1719 [2] $memory\csr_file$rdmux[0][6][3]$b$1719 [2] $memory\csr_file$rdmux[0][6][3]$b$1719 [2] $memory\csr_file$rdmux[0][6][3]$b$1719 [2] 2'11 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][80]$2140:
      Old ports: A=17149571, B=21343747, Y=$memory\csr_file$rdmux[0][6][40]$a$1829
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][40]$a$1829 [22] $memory\csr_file$rdmux[0][6][40]$a$1829 [7] }
      New connections: { $memory\csr_file$rdmux[0][6][40]$a$1829 [31:23] $memory\csr_file$rdmux[0][6][40]$a$1829 [21:8] $memory\csr_file$rdmux[0][6][40]$a$1829 [6:0] } = 30'000000010000101101011100000011
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][81]$2143:
      Old ports: A=25535235, B=29730819, Y=$memory\csr_file$rdmux[0][6][40]$b$1830
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][40]$b$1830 [11] $memory\csr_file$rdmux[0][6][40]$b$1830 [8] }
      New connections: { $memory\csr_file$rdmux[0][6][40]$b$1830 [31:12] $memory\csr_file$rdmux[0][6][40]$b$1830 [10:9] $memory\csr_file$rdmux[0][6][40]$b$1830 [7:0] } = { 9'000000011 $memory\csr_file$rdmux[0][6][40]$b$1830 [11] 11'00010110100 $memory\csr_file$rdmux[0][6][40]$b$1830 [8] 8'00000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][82]$2146:
      Old ports: A=38110611, B=14098467, Y=$memory\csr_file$rdmux[0][6][41]$a$1832
      New ports: A=2'01, B=2'10, Y=$memory\csr_file$rdmux[0][6][41]$a$1832 [5:4]
      New connections: { $memory\csr_file$rdmux[0][6][41]$a$1832 [31:6] $memory\csr_file$rdmux[0][6][41]$a$1832 [3:0] } = { 6'000000 $memory\csr_file$rdmux[0][6][41]$a$1832 [4] 1'0 $memory\csr_file$rdmux[0][6][41]$a$1832 [5] 2'10 $memory\csr_file$rdmux[0][6][41]$a$1832 [5] 2'01 $memory\csr_file$rdmux[0][6][41]$a$1832 [5] 1'1 $memory\csr_file$rdmux[0][6][41]$a$1832 [4] 1'0 $memory\csr_file$rdmux[0][6][41]$a$1832 [5] 2'00 $memory\csr_file$rdmux[0][6][41]$a$1832 [4] 1'0 $memory\csr_file$rdmux[0][6][41]$a$1832 [4] $memory\csr_file$rdmux[0][6][41]$a$1832 [4] 5'00011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][83]$2149:
      Old ports: A=32'11111111110001011010011010000011, B=5710371, Y=$memory\csr_file$rdmux[0][6][41]$b$1833
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][41]$b$1833 [7] $memory\csr_file$rdmux[0][6][41]$b$1833 [5] }
      New connections: { $memory\csr_file$rdmux[0][6][41]$b$1833 [31:8] $memory\csr_file$rdmux[0][6][41]$b$1833 [6] $memory\csr_file$rdmux[0][6][41]$b$1833 [4:0] } = { $memory\csr_file$rdmux[0][6][41]$b$1833 [7] $memory\csr_file$rdmux[0][6][41]$b$1833 [7] $memory\csr_file$rdmux[0][6][41]$b$1833 [7] $memory\csr_file$rdmux[0][6][41]$b$1833 [7] $memory\csr_file$rdmux[0][6][41]$b$1833 [7] $memory\csr_file$rdmux[0][6][41]$b$1833 [7] $memory\csr_file$rdmux[0][6][41]$b$1833 [7] $memory\csr_file$rdmux[0][6][41]$b$1833 [7] $memory\csr_file$rdmux[0][6][41]$b$1833 [7] 2'10 $memory\csr_file$rdmux[0][6][41]$b$1833 [5] 2'01 $memory\csr_file$rdmux[0][6][41]$b$1833 [5] 1'1 $memory\csr_file$rdmux[0][6][41]$b$1833 [7] 4'0100 $memory\csr_file$rdmux[0][6][41]$b$1833 [7] 8'10000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][84]$2152:
      Old ports: A=32973859, B=31925795, Y=$memory\csr_file$rdmux[0][6][42]$a$1835
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][42]$a$1835 [20] $memory\csr_file$rdmux[0][6][42]$a$1835 [9] }
      New connections: { $memory\csr_file$rdmux[0][6][42]$a$1835 [31:21] $memory\csr_file$rdmux[0][6][42]$a$1835 [19:10] $memory\csr_file$rdmux[0][6][42]$a$1835 [8:0] } = 30'000000011110111001001000100011
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][85]$2155:
      Old ports: A=30877731, B=29829667, Y=$memory\csr_file$rdmux[0][6][42]$b$1836
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][42]$b$1836 [20] $memory\csr_file$rdmux[0][6][42]$b$1836 [9] }
      New connections: { $memory\csr_file$rdmux[0][6][42]$b$1836 [31:21] $memory\csr_file$rdmux[0][6][42]$b$1836 [19:10] $memory\csr_file$rdmux[0][6][42]$b$1836 [8:0] } = 30'000000011100111001010000100011
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][86]$2158:
      Old ports: A=6761507, B=17247779, Y=$memory\csr_file$rdmux[0][6][43]$a$1838
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][43]$a$1838 [21] $memory\csr_file$rdmux[0][6][43]$a$1838 [9] }
      New connections: { $memory\csr_file$rdmux[0][6][43]$a$1838 [31:22] $memory\csr_file$rdmux[0][6][43]$a$1838 [20:10] $memory\csr_file$rdmux[0][6][43]$a$1838 [8:0] } = { 7'0000000 $memory\csr_file$rdmux[0][6][43]$a$1838 [9] 1'0 $memory\csr_file$rdmux[0][6][43]$a$1838 [21] 20'00111001011000100011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][87]$2161:
      Old ports: A=38209299, B=32'11111110110101110010111000100011, Y=$memory\csr_file$rdmux[0][6][43]$b$1839
      New ports: A=2'01, B=2'10, Y=$memory\csr_file$rdmux[0][6][43]$b$1839 [5:4]
      New connections: { $memory\csr_file$rdmux[0][6][43]$b$1839 [31:6] $memory\csr_file$rdmux[0][6][43]$b$1839 [3:0] } = { $memory\csr_file$rdmux[0][6][43]$b$1839 [5] $memory\csr_file$rdmux[0][6][43]$b$1839 [5] $memory\csr_file$rdmux[0][6][43]$b$1839 [5] $memory\csr_file$rdmux[0][6][43]$b$1839 [5] $memory\csr_file$rdmux[0][6][43]$b$1839 [5] $memory\csr_file$rdmux[0][6][43]$b$1839 [5] 2'10 $memory\csr_file$rdmux[0][6][43]$b$1839 [5] 2'10 $memory\csr_file$rdmux[0][6][43]$b$1839 [5] 6'011100 $memory\csr_file$rdmux[0][6][43]$b$1839 [5] 1'0 $memory\csr_file$rdmux[0][6][43]$b$1839 [5] 2'11 $memory\csr_file$rdmux[0][6][43]$b$1839 [4] 6'000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][88]$2164:
      Old ports: A=32'11111010111101110110100011100011, B=32'11110001100111111111000001101111, Y=$memory\csr_file$rdmux[0][6][44]$a$1841
      New ports: A=2'10, B=2'01, Y={ $memory\csr_file$rdmux[0][6][44]$a$1841 [7] $memory\csr_file$rdmux[0][6][44]$a$1841 [2] }
      New connections: { $memory\csr_file$rdmux[0][6][44]$a$1841 [31:8] $memory\csr_file$rdmux[0][6][44]$a$1841 [6:3] $memory\csr_file$rdmux[0][6][44]$a$1841 [1:0] } = { 4'1111 $memory\csr_file$rdmux[0][6][44]$a$1841 [7] 1'0 $memory\csr_file$rdmux[0][6][44]$a$1841 [7] $memory\csr_file$rdmux[0][6][44]$a$1841 [2] 1'1 $memory\csr_file$rdmux[0][6][44]$a$1841 [7] $memory\csr_file$rdmux[0][6][44]$a$1841 [7] 1'1 $memory\csr_file$rdmux[0][6][44]$a$1841 [2] 3'111 $memory\csr_file$rdmux[0][6][44]$a$1841 [2] 2'11 $memory\csr_file$rdmux[0][6][44]$a$1841 [2] $memory\csr_file$rdmux[0][6][44]$a$1841 [7] 6'000110 $memory\csr_file$rdmux[0][6][44]$a$1841 [2] 2'11 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][8]$1924:
      Old ports: A=1113589651, B=32'11111110111101000010001000100011, Y=$memory\csr_file$rdmux[0][6][4]$a$1721
      New ports: A=2'01, B=2'10, Y=$memory\csr_file$rdmux[0][6][4]$a$1721 [5:4]
      New connections: { $memory\csr_file$rdmux[0][6][4]$a$1721 [31:6] $memory\csr_file$rdmux[0][6][4]$a$1721 [3:0] } = { $memory\csr_file$rdmux[0][6][4]$a$1721 [5] 1'1 $memory\csr_file$rdmux[0][6][4]$a$1721 [5] $memory\csr_file$rdmux[0][6][4]$a$1721 [5] $memory\csr_file$rdmux[0][6][4]$a$1721 [5] $memory\csr_file$rdmux[0][6][4]$a$1721 [5] 2'10 $memory\csr_file$rdmux[0][6][4]$a$1721 [5] 2'11 $memory\csr_file$rdmux[0][6][4]$a$1721 [5] 1'0 $memory\csr_file$rdmux[0][6][4]$a$1721 [5] 4'0000 $memory\csr_file$rdmux[0][6][4]$a$1721 [5] 2'00 $memory\csr_file$rdmux[0][6][4]$a$1721 [4] 1'1 $memory\csr_file$rdmux[0][6][4]$a$1721 [4] $memory\csr_file$rdmux[0][6][4]$a$1721 [4] 5'00011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][7][9]$1927:
      Old ports: A=10167, B=32'11111110111101000010000000100011, Y=$memory\csr_file$rdmux[0][6][4]$b$1722
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][6][4]$b$1722 [18] $memory\csr_file$rdmux[0][6][4]$b$1722 [2] }
      New connections: { $memory\csr_file$rdmux[0][6][4]$b$1722 [31:19] $memory\csr_file$rdmux[0][6][4]$b$1722 [17:3] $memory\csr_file$rdmux[0][6][4]$b$1722 [1:0] } = { $memory\csr_file$rdmux[0][6][4]$b$1722 [18] $memory\csr_file$rdmux[0][6][4]$b$1722 [18] $memory\csr_file$rdmux[0][6][4]$b$1722 [18] $memory\csr_file$rdmux[0][6][4]$b$1722 [18] $memory\csr_file$rdmux[0][6][4]$b$1722 [18] $memory\csr_file$rdmux[0][6][4]$b$1722 [18] $memory\csr_file$rdmux[0][6][4]$b$1722 [18] 1'0 $memory\csr_file$rdmux[0][6][4]$b$1722 [18] $memory\csr_file$rdmux[0][6][4]$b$1722 [18] $memory\csr_file$rdmux[0][6][4]$b$1722 [18] $memory\csr_file$rdmux[0][6][4]$b$1722 [18] 8'00000100 $memory\csr_file$rdmux[0][6][4]$b$1722 [2] $memory\csr_file$rdmux[0][6][4]$b$1722 [2] $memory\csr_file$rdmux[0][6][4]$b$1722 [2] $memory\csr_file$rdmux[0][6][4]$b$1722 [2] 2'01 $memory\csr_file$rdmux[0][6][4]$b$1722 [2] 3'011 }
  Optimizing cells in module \csr_file.
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][1]$1711:
      Old ports: A=$memory\csr_file$rdmux[0][6][1]$a$1712, B=$memory\csr_file$rdmux[0][6][1]$b$1713, Y=$memory\csr_file$rdmux[0][5][0]$b$1614
      New ports: A={ 1'0 $memory\csr_file$rdmux[0][6][1]$a$1712 [5] $memory\csr_file$rdmux[0][6][1]$a$1712 [5:4] $memory\csr_file$rdmux[0][6][1]$a$1712 [5:4] }, B={ $memory\csr_file$rdmux[0][6][1]$b$1713 [5] 3'100 $memory\csr_file$rdmux[0][6][1]$b$1713 [5:4] }, Y={ $memory\csr_file$rdmux[0][5][0]$b$1614 [23] $memory\csr_file$rdmux[0][5][0]$b$1614 [10:8] $memory\csr_file$rdmux[0][5][0]$b$1614 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][5][0]$b$1614 [31:24] $memory\csr_file$rdmux[0][5][0]$b$1614 [22:11] $memory\csr_file$rdmux[0][5][0]$b$1614 [7:6] $memory\csr_file$rdmux[0][5][0]$b$1614 [3:0] } = { $memory\csr_file$rdmux[0][5][0]$b$1614 [8] $memory\csr_file$rdmux[0][5][0]$b$1614 [10] $memory\csr_file$rdmux[0][5][0]$b$1614 [8] $memory\csr_file$rdmux[0][5][0]$b$1614 [8] $memory\csr_file$rdmux[0][5][0]$b$1614 [8] $memory\csr_file$rdmux[0][5][0]$b$1614 [10] $memory\csr_file$rdmux[0][5][0]$b$1614 [8] $memory\csr_file$rdmux[0][5][0]$b$1614 [4] 2'00 $memory\csr_file$rdmux[0][5][0]$b$1614 [9] 6'000100 $memory\csr_file$rdmux[0][5][0]$b$1614 [5] 8'00000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][20]$1768:
      Old ports: A=$memory\csr_file$rdmux[0][6][20]$a$1769, B=$memory\csr_file$rdmux[0][6][20]$b$1770, Y=$memory\csr_file$rdmux[0][5][10]$a$1643
      New ports: A={ $memory\csr_file$rdmux[0][6][20]$a$1769 [24] $memory\csr_file$rdmux[0][6][20]$a$1769 [24] 1'0 $memory\csr_file$rdmux[0][6][20]$a$1769 [8] $memory\csr_file$rdmux[0][6][20]$a$1769 [8] 1'0 $memory\csr_file$rdmux[0][6][20]$a$1769 [8] 2'01 }, B={ $memory\csr_file$rdmux[0][6][20]$b$1770 [14] 2'01 $memory\csr_file$rdmux[0][6][20]$b$1770 [4] $memory\csr_file$rdmux[0][6][20]$b$1770 [14] $memory\csr_file$rdmux[0][6][20]$b$1770 [14] 1'1 $memory\csr_file$rdmux[0][6][20]$b$1770 [4] $memory\csr_file$rdmux[0][6][20]$b$1770 [4] }, Y={ $memory\csr_file$rdmux[0][5][10]$a$1643 [26] $memory\csr_file$rdmux[0][5][10]$a$1643 [24:23] $memory\csr_file$rdmux[0][5][10]$a$1643 [20] $memory\csr_file$rdmux[0][5][10]$a$1643 [16] $memory\csr_file$rdmux[0][5][10]$a$1643 [14] $memory\csr_file$rdmux[0][5][10]$a$1643 [8] $memory\csr_file$rdmux[0][5][10]$a$1643 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][5][10]$a$1643 [31:27] $memory\csr_file$rdmux[0][5][10]$a$1643 [25] $memory\csr_file$rdmux[0][5][10]$a$1643 [22:21] $memory\csr_file$rdmux[0][5][10]$a$1643 [19:17] $memory\csr_file$rdmux[0][5][10]$a$1643 [15] $memory\csr_file$rdmux[0][5][10]$a$1643 [13:9] $memory\csr_file$rdmux[0][5][10]$a$1643 [7:6] $memory\csr_file$rdmux[0][5][10]$a$1643 [3:0] } = { $memory\csr_file$rdmux[0][5][10]$a$1643 [26] $memory\csr_file$rdmux[0][5][10]$a$1643 [24] $memory\csr_file$rdmux[0][5][10]$a$1643 [26] $memory\csr_file$rdmux[0][5][10]$a$1643 [26] $memory\csr_file$rdmux[0][5][10]$a$1643 [26] $memory\csr_file$rdmux[0][5][10]$a$1643 [24] $memory\csr_file$rdmux[0][5][10]$a$1643 [5] $memory\csr_file$rdmux[0][5][10]$a$1643 [5] 2'01 $memory\csr_file$rdmux[0][5][10]$a$1643 [8] $memory\csr_file$rdmux[0][5][10]$a$1643 [8] 11'00011100011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][21]$1771:
      Old ports: A=$memory\csr_file$rdmux[0][6][21]$a$1772, B=$memory\csr_file$rdmux[0][6][21]$b$1773, Y=$memory\csr_file$rdmux[0][5][10]$b$1644
      New ports: A={ 1'0 $memory\csr_file$rdmux[0][6][21]$a$1772 [12] $memory\csr_file$rdmux[0][6][21]$a$1772 [12] 1'1 $memory\csr_file$rdmux[0][6][21]$a$1772 [12] $memory\csr_file$rdmux[0][6][21]$a$1772 [12] 1'1 $memory\csr_file$rdmux[0][6][21]$a$1772 [5] $memory\csr_file$rdmux[0][6][21]$a$1772 [5] 1'1 }, B={ 2'11 $memory\csr_file$rdmux[0][6][21]$b$1773 [4] 1'0 $memory\csr_file$rdmux[0][6][21]$b$1773 [8] 1'0 $memory\csr_file$rdmux[0][6][21]$b$1773 [8] 2'10 $memory\csr_file$rdmux[0][6][21]$b$1773 [4] }, Y={ $memory\csr_file$rdmux[0][5][10]$b$1644 [28] $memory\csr_file$rdmux[0][5][10]$b$1644 [25:24] $memory\csr_file$rdmux[0][5][10]$b$1644 [14:12] $memory\csr_file$rdmux[0][5][10]$b$1644 [8:7] $memory\csr_file$rdmux[0][5][10]$b$1644 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][5][10]$b$1644 [31:29] $memory\csr_file$rdmux[0][5][10]$b$1644 [27:26] $memory\csr_file$rdmux[0][5][10]$b$1644 [23:15] $memory\csr_file$rdmux[0][5][10]$b$1644 [11:9] $memory\csr_file$rdmux[0][5][10]$b$1644 [6] $memory\csr_file$rdmux[0][5][10]$b$1644 [3:0] } = { $memory\csr_file$rdmux[0][5][10]$b$1644 [28] $memory\csr_file$rdmux[0][5][10]$b$1644 [28] $memory\csr_file$rdmux[0][5][10]$b$1644 [28] $memory\csr_file$rdmux[0][5][10]$b$1644 [25] $memory\csr_file$rdmux[0][5][10]$b$1644 [25] $memory\csr_file$rdmux[0][5][10]$b$1644 [8] $memory\csr_file$rdmux[0][5][10]$b$1644 [8] $memory\csr_file$rdmux[0][5][10]$b$1644 [14] $memory\csr_file$rdmux[0][5][10]$b$1644 [14] 2'01 $memory\csr_file$rdmux[0][5][10]$b$1644 [14] $memory\csr_file$rdmux[0][5][10]$b$1644 [14] $memory\csr_file$rdmux[0][5][10]$b$1644 [12] 8'01100011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][22]$1774:
      Old ports: A=$memory\csr_file$rdmux[0][6][22]$a$1775, B=$memory\csr_file$rdmux[0][6][22]$b$1776, Y=$memory\csr_file$rdmux[0][5][11]$a$1646
      New ports: A={ $memory\csr_file$rdmux[0][6][22]$a$1775 [16] 1'1 $memory\csr_file$rdmux[0][6][22]$a$1775 [16] 2'10 $memory\csr_file$rdmux[0][6][22]$a$1775 [4] 1'1 $memory\csr_file$rdmux[0][6][22]$a$1775 [4] }, B={ $memory\csr_file$rdmux[0][6][22]$b$1776 [13] $memory\csr_file$rdmux[0][6][22]$b$1776 [13] $memory\csr_file$rdmux[0][6][22]$b$1776 [4] $memory\csr_file$rdmux[0][6][22]$b$1776 [4] $memory\csr_file$rdmux[0][6][22]$b$1776 [13] 2'10 $memory\csr_file$rdmux[0][6][22]$b$1776 [4] }, Y={ $memory\csr_file$rdmux[0][5][11]$a$1646 [26] $memory\csr_file$rdmux[0][5][11]$a$1646 [22] $memory\csr_file$rdmux[0][5][11]$a$1646 [16:15] $memory\csr_file$rdmux[0][5][11]$a$1646 [13] $memory\csr_file$rdmux[0][5][11]$a$1646 [7] $memory\csr_file$rdmux[0][5][11]$a$1646 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][5][11]$a$1646 [31:27] $memory\csr_file$rdmux[0][5][11]$a$1646 [25:23] $memory\csr_file$rdmux[0][5][11]$a$1646 [21:17] $memory\csr_file$rdmux[0][5][11]$a$1646 [14] $memory\csr_file$rdmux[0][5][11]$a$1646 [12:8] $memory\csr_file$rdmux[0][5][11]$a$1646 [6] $memory\csr_file$rdmux[0][5][11]$a$1646 [3:0] } = { $memory\csr_file$rdmux[0][5][11]$a$1646 [26] $memory\csr_file$rdmux[0][5][11]$a$1646 [13] $memory\csr_file$rdmux[0][5][11]$a$1646 [26] $memory\csr_file$rdmux[0][5][11]$a$1646 [26] $memory\csr_file$rdmux[0][5][11]$a$1646 [26] $memory\csr_file$rdmux[0][5][11]$a$1646 [13] 1'0 $memory\csr_file$rdmux[0][5][11]$a$1646 [22] $memory\csr_file$rdmux[0][5][11]$a$1646 [5:4] 2'01 $memory\csr_file$rdmux[0][5][11]$a$1646 [15] 4'0001 $memory\csr_file$rdmux[0][5][11]$a$1646 [7] $memory\csr_file$rdmux[0][5][11]$a$1646 [7] 5'00011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][23]$1777:
      Old ports: A=$memory\csr_file$rdmux[0][6][23]$a$1778, B=$memory\csr_file$rdmux[0][6][23]$b$1779, Y=$memory\csr_file$rdmux[0][5][11]$b$1647
      New ports: A={ 2'11 $memory\csr_file$rdmux[0][6][23]$a$1778 [8] 2'00 $memory\csr_file$rdmux[0][6][23]$a$1778 [5] }, B={ $memory\csr_file$rdmux[0][6][23]$b$1779 [5] $memory\csr_file$rdmux[0][6][23]$b$1779 [8] $memory\csr_file$rdmux[0][6][23]$b$1779 [8] 1'1 $memory\csr_file$rdmux[0][6][23]$b$1779 [5] $memory\csr_file$rdmux[0][6][23]$b$1779 [5] }, Y={ $memory\csr_file$rdmux[0][5][11]$b$1647 [22] $memory\csr_file$rdmux[0][5][11]$b$1647 [13] $memory\csr_file$rdmux[0][5][11]$b$1647 [8:5] }
      New connections: { $memory\csr_file$rdmux[0][5][11]$b$1647 [31:23] $memory\csr_file$rdmux[0][5][11]$b$1647 [21:14] $memory\csr_file$rdmux[0][5][11]$b$1647 [12:9] $memory\csr_file$rdmux[0][5][11]$b$1647 [4:0] } = { 4'1111 $memory\csr_file$rdmux[0][5][11]$b$1647 [13] $memory\csr_file$rdmux[0][5][11]$b$1647 [13] $memory\csr_file$rdmux[0][5][11]$b$1647 [13] 2'01 $memory\csr_file$rdmux[0][5][11]$b$1647 [5] $memory\csr_file$rdmux[0][5][11]$b$1647 [5] 2'01 $memory\csr_file$rdmux[0][5][11]$b$1647 [6] $memory\csr_file$rdmux[0][5][11]$b$1647 [6] 1'0 $memory\csr_file$rdmux[0][5][11]$b$1647 [6] 9'001100011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][24]$1780:
      Old ports: A=$memory\csr_file$rdmux[0][6][24]$a$1781, B=$memory\csr_file$rdmux[0][6][24]$b$1782, Y=$memory\csr_file$rdmux[0][5][12]$a$1649
      New ports: A={ $memory\csr_file$rdmux[0][6][24]$a$1781 [4] $memory\csr_file$rdmux[0][6][24]$a$1781 [13] 2'10 $memory\csr_file$rdmux[0][6][24]$a$1781 [4] }, B={ $memory\csr_file$rdmux[0][6][24]$b$1782 [5] 1'1 $memory\csr_file$rdmux[0][6][24]$b$1782 [7] $memory\csr_file$rdmux[0][6][24]$b$1782 [5] 1'0 }, Y={ $memory\csr_file$rdmux[0][5][12]$a$1649 [20] $memory\csr_file$rdmux[0][5][12]$a$1649 [13] $memory\csr_file$rdmux[0][5][12]$a$1649 [7] $memory\csr_file$rdmux[0][5][12]$a$1649 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][5][12]$a$1649 [31:21] $memory\csr_file$rdmux[0][5][12]$a$1649 [19:14] $memory\csr_file$rdmux[0][5][12]$a$1649 [12:8] $memory\csr_file$rdmux[0][5][12]$a$1649 [6] $memory\csr_file$rdmux[0][5][12]$a$1649 [3:0] } = { 7'1111111 $memory\csr_file$rdmux[0][5][12]$a$1649 [4] 1'1 $memory\csr_file$rdmux[0][5][12]$a$1649 [20] $memory\csr_file$rdmux[0][5][12]$a$1649 [20] 2'01 $memory\csr_file$rdmux[0][5][12]$a$1649 [4] $memory\csr_file$rdmux[0][5][12]$a$1649 [4] $memory\csr_file$rdmux[0][5][12]$a$1649 [4] 4'0001 $memory\csr_file$rdmux[0][5][12]$a$1649 [7] $memory\csr_file$rdmux[0][5][12]$a$1649 [7] 5'00011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][25]$1783:
      Old ports: A=$memory\csr_file$rdmux[0][6][25]$a$1784, B=$memory\csr_file$rdmux[0][6][25]$b$1785, Y=$memory\csr_file$rdmux[0][5][12]$b$1650
      New ports: A={ $memory\csr_file$rdmux[0][6][25]$a$1784 [5] 6'000111 $memory\csr_file$rdmux[0][6][25]$a$1784 [5:4] }, B={ $memory\csr_file$rdmux[0][6][25]$b$1785 [7] 1'1 $memory\csr_file$rdmux[0][6][25]$b$1785 [4] $memory\csr_file$rdmux[0][6][25]$b$1785 [7] $memory\csr_file$rdmux[0][6][25]$b$1785 [4] 1'0 $memory\csr_file$rdmux[0][6][25]$b$1785 [7] 1'0 $memory\csr_file$rdmux[0][6][25]$b$1785 [4] }, Y={ $memory\csr_file$rdmux[0][5][12]$b$1650 [22] $memory\csr_file$rdmux[0][5][12]$b$1650 [16:15] $memory\csr_file$rdmux[0][5][12]$b$1650 [13] $memory\csr_file$rdmux[0][5][12]$b$1650 [10:9] $memory\csr_file$rdmux[0][5][12]$b$1650 [7] $memory\csr_file$rdmux[0][5][12]$b$1650 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][5][12]$b$1650 [31:23] $memory\csr_file$rdmux[0][5][12]$b$1650 [21:17] $memory\csr_file$rdmux[0][5][12]$b$1650 [14] $memory\csr_file$rdmux[0][5][12]$b$1650 [12:11] $memory\csr_file$rdmux[0][5][12]$b$1650 [8] $memory\csr_file$rdmux[0][5][12]$b$1650 [6] $memory\csr_file$rdmux[0][5][12]$b$1650 [3:0] } = { $memory\csr_file$rdmux[0][5][12]$b$1650 [5] $memory\csr_file$rdmux[0][5][12]$b$1650 [22] $memory\csr_file$rdmux[0][5][12]$b$1650 [5] 1'0 $memory\csr_file$rdmux[0][5][12]$b$1650 [5] $memory\csr_file$rdmux[0][5][12]$b$1650 [22] 2'00 $memory\csr_file$rdmux[0][5][12]$b$1650 [22] $memory\csr_file$rdmux[0][5][12]$b$1650 [5] $memory\csr_file$rdmux[0][5][12]$b$1650 [5] 1'0 $memory\csr_file$rdmux[0][5][12]$b$1650 [15] $memory\csr_file$rdmux[0][5][12]$b$1650 [15] $memory\csr_file$rdmux[0][5][12]$b$1650 [5] 1'0 $memory\csr_file$rdmux[0][5][12]$b$1650 [5:4] $memory\csr_file$rdmux[0][5][12]$b$1650 [5] 4'0011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][26]$1786:
      Old ports: A=$memory\csr_file$rdmux[0][6][26]$a$1787, B=$memory\csr_file$rdmux[0][6][26]$b$1788, Y=$memory\csr_file$rdmux[0][5][13]$a$1652
      New ports: A={ 1'1 $memory\csr_file$rdmux[0][6][26]$a$1787 [4] 1'1 $memory\csr_file$rdmux[0][6][26]$a$1787 [10] $memory\csr_file$rdmux[0][6][26]$a$1787 [10] 2'00 $memory\csr_file$rdmux[0][6][26]$a$1787 [4] 1'0 }, B={ 2'00 $memory\csr_file$rdmux[0][6][26]$b$1788 [4] 1'0 $memory\csr_file$rdmux[0][6][26]$b$1788 [4] $memory\csr_file$rdmux[0][6][26]$b$1788 [4] 1'1 $memory\csr_file$rdmux[0][6][26]$b$1788 [4] $memory\csr_file$rdmux[0][6][26]$b$1788 [2] }, Y={ $memory\csr_file$rdmux[0][5][13]$a$1652 [26] $memory\csr_file$rdmux[0][5][13]$a$1652 [24] $memory\csr_file$rdmux[0][5][13]$a$1652 [16] $memory\csr_file$rdmux[0][5][13]$a$1652 [13] $memory\csr_file$rdmux[0][5][13]$a$1652 [10] $memory\csr_file$rdmux[0][5][13]$a$1652 [7] $memory\csr_file$rdmux[0][5][13]$a$1652 [5:4] $memory\csr_file$rdmux[0][5][13]$a$1652 [2] }
      New connections: { $memory\csr_file$rdmux[0][5][13]$a$1652 [31:27] $memory\csr_file$rdmux[0][5][13]$a$1652 [25] $memory\csr_file$rdmux[0][5][13]$a$1652 [23:17] $memory\csr_file$rdmux[0][5][13]$a$1652 [15:14] $memory\csr_file$rdmux[0][5][13]$a$1652 [12:11] $memory\csr_file$rdmux[0][5][13]$a$1652 [9:8] $memory\csr_file$rdmux[0][5][13]$a$1652 [6] $memory\csr_file$rdmux[0][5][13]$a$1652 [3] $memory\csr_file$rdmux[0][5][13]$a$1652 [1:0] } = { 1'0 $memory\csr_file$rdmux[0][5][13]$a$1652 [26] 4'0000 $memory\csr_file$rdmux[0][5][13]$a$1652 [10] 1'0 $memory\csr_file$rdmux[0][5][13]$a$1652 [7] 2'00 $memory\csr_file$rdmux[0][5][13]$a$1652 [7] 1'0 $memory\csr_file$rdmux[0][5][13]$a$1652 [5] $memory\csr_file$rdmux[0][5][13]$a$1652 [7] 2'00 $memory\csr_file$rdmux[0][5][13]$a$1652 [7] $memory\csr_file$rdmux[0][5][13]$a$1652 [4] $memory\csr_file$rdmux[0][5][13]$a$1652 [2] 3'011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][27]$1789:
      Old ports: A=$memory\csr_file$rdmux[0][6][27]$a$1790, B=$memory\csr_file$rdmux[0][6][27]$b$1791, Y=$memory\csr_file$rdmux[0][5][13]$b$1653
      New ports: A={ 1'1 $memory\csr_file$rdmux[0][6][27]$a$1790 [8] $memory\csr_file$rdmux[0][6][27]$a$1790 [8] $memory\csr_file$rdmux[0][6][27]$a$1790 [5] $memory\csr_file$rdmux[0][6][27]$a$1790 [8] $memory\csr_file$rdmux[0][6][27]$a$1790 [8] 1'0 $memory\csr_file$rdmux[0][6][27]$a$1790 [5] 1'1 }, B={ $memory\csr_file$rdmux[0][6][27]$b$1791 [5] 1'0 $memory\csr_file$rdmux[0][6][27]$b$1791 [5] 2'01 $memory\csr_file$rdmux[0][6][27]$b$1791 [4] $memory\csr_file$rdmux[0][6][27]$b$1791 [5] $memory\csr_file$rdmux[0][6][27]$b$1791 [5:4] }, Y={ $memory\csr_file$rdmux[0][5][13]$b$1653 [16] $memory\csr_file$rdmux[0][5][13]$b$1653 [13:11] $memory\csr_file$rdmux[0][5][13]$b$1653 [9:8] $memory\csr_file$rdmux[0][5][13]$b$1653 [6:4] }
      New connections: { $memory\csr_file$rdmux[0][5][13]$b$1653 [31:17] $memory\csr_file$rdmux[0][5][13]$b$1653 [15:14] $memory\csr_file$rdmux[0][5][13]$b$1653 [10] $memory\csr_file$rdmux[0][5][13]$b$1653 [7] $memory\csr_file$rdmux[0][5][13]$b$1653 [3:0] } = { 5'00000 $memory\csr_file$rdmux[0][5][13]$b$1653 [6] $memory\csr_file$rdmux[0][5][13]$b$1653 [6] 1'0 $memory\csr_file$rdmux[0][5][13]$b$1653 [11] $memory\csr_file$rdmux[0][5][13]$b$1653 [11] $memory\csr_file$rdmux[0][5][13]$b$1653 [8] $memory\csr_file$rdmux[0][5][13]$b$1653 [8] 1'0 $memory\csr_file$rdmux[0][5][13]$b$1653 [16] $memory\csr_file$rdmux[0][5][13]$b$1653 [12] $memory\csr_file$rdmux[0][5][13]$b$1653 [12] $memory\csr_file$rdmux[0][5][13]$b$1653 [13] $memory\csr_file$rdmux[0][5][13]$b$1653 [8] $memory\csr_file$rdmux[0][5][13]$b$1653 [4] 4'0011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][28]$1792:
      Old ports: A=$memory\csr_file$rdmux[0][6][28]$a$1793, B=$memory\csr_file$rdmux[0][6][28]$b$1794, Y=$memory\csr_file$rdmux[0][5][14]$a$1655
      New ports: A={ 1'0 $memory\csr_file$rdmux[0][6][28]$a$1793 [5] 3'111 $memory\csr_file$rdmux[0][6][28]$a$1793 [4] $memory\csr_file$rdmux[0][6][28]$a$1793 [5:4] }, B={ $memory\csr_file$rdmux[0][6][28]$b$1794 [5] 2'00 $memory\csr_file$rdmux[0][6][28]$b$1794 [5:4] 1'0 $memory\csr_file$rdmux[0][6][28]$b$1794 [5:4] }, Y={ $memory\csr_file$rdmux[0][5][14]$a$1655 [25] $memory\csr_file$rdmux[0][5][14]$a$1655 [22] $memory\csr_file$rdmux[0][5][14]$a$1655 [13:12] $memory\csr_file$rdmux[0][5][14]$a$1655 [9] $memory\csr_file$rdmux[0][5][14]$a$1655 [7] $memory\csr_file$rdmux[0][5][14]$a$1655 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][5][14]$a$1655 [31:26] $memory\csr_file$rdmux[0][5][14]$a$1655 [24:23] $memory\csr_file$rdmux[0][5][14]$a$1655 [21:14] $memory\csr_file$rdmux[0][5][14]$a$1655 [11:10] $memory\csr_file$rdmux[0][5][14]$a$1655 [8] $memory\csr_file$rdmux[0][5][14]$a$1655 [6] $memory\csr_file$rdmux[0][5][14]$a$1655 [3:0] } = { 5'00000 $memory\csr_file$rdmux[0][5][14]$a$1655 [5] 1'0 $memory\csr_file$rdmux[0][5][14]$a$1655 [22] $memory\csr_file$rdmux[0][5][14]$a$1655 [7] $memory\csr_file$rdmux[0][5][14]$a$1655 [7] 2'01 $memory\csr_file$rdmux[0][5][14]$a$1655 [5] 1'1 $memory\csr_file$rdmux[0][5][14]$a$1655 [5] $memory\csr_file$rdmux[0][5][14]$a$1655 [13] $memory\csr_file$rdmux[0][5][14]$a$1655 [5] $memory\csr_file$rdmux[0][5][14]$a$1655 [9] $memory\csr_file$rdmux[0][5][14]$a$1655 [4] $memory\csr_file$rdmux[0][5][14]$a$1655 [5] 4'0011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][29]$1795:
      Old ports: A=$memory\csr_file$rdmux[0][6][29]$a$1796, B=$memory\csr_file$rdmux[0][6][29]$b$1797, Y=$memory\csr_file$rdmux[0][5][14]$b$1656
      New ports: A={ 3'110 $memory\csr_file$rdmux[0][6][29]$a$1796 [7] $memory\csr_file$rdmux[0][6][29]$a$1796 [12] $memory\csr_file$rdmux[0][6][29]$a$1796 [12] $memory\csr_file$rdmux[0][6][29]$a$1796 [12] $memory\csr_file$rdmux[0][6][29]$a$1796 [7] 2'01 }, B={ $memory\csr_file$rdmux[0][6][29]$b$1797 [20] $memory\csr_file$rdmux[0][6][29]$b$1797 [12] $memory\csr_file$rdmux[0][6][29]$b$1797 [20] 3'101 $memory\csr_file$rdmux[0][6][29]$b$1797 [12] 3'010 }, Y={ $memory\csr_file$rdmux[0][5][14]$b$1656 [27] $memory\csr_file$rdmux[0][5][14]$b$1656 [25] $memory\csr_file$rdmux[0][5][14]$b$1656 [20] $memory\csr_file$rdmux[0][5][14]$b$1656 [17] $memory\csr_file$rdmux[0][5][14]$b$1656 [15] $memory\csr_file$rdmux[0][5][14]$b$1656 [13:12] $memory\csr_file$rdmux[0][5][14]$b$1656 [7] $memory\csr_file$rdmux[0][5][14]$b$1656 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][5][14]$b$1656 [31:28] $memory\csr_file$rdmux[0][5][14]$b$1656 [26] $memory\csr_file$rdmux[0][5][14]$b$1656 [24:21] $memory\csr_file$rdmux[0][5][14]$b$1656 [19:18] $memory\csr_file$rdmux[0][5][14]$b$1656 [16] $memory\csr_file$rdmux[0][5][14]$b$1656 [14] $memory\csr_file$rdmux[0][5][14]$b$1656 [11:8] $memory\csr_file$rdmux[0][5][14]$b$1656 [6] $memory\csr_file$rdmux[0][5][14]$b$1656 [3:0] } = { $memory\csr_file$rdmux[0][5][14]$b$1656 [4] $memory\csr_file$rdmux[0][5][14]$b$1656 [4] $memory\csr_file$rdmux[0][5][14]$b$1656 [4] $memory\csr_file$rdmux[0][5][14]$b$1656 [4] $memory\csr_file$rdmux[0][5][14]$b$1656 [4] $memory\csr_file$rdmux[0][5][14]$b$1656 [15] $memory\csr_file$rdmux[0][5][14]$b$1656 [13] $memory\csr_file$rdmux[0][5][14]$b$1656 [13] $memory\csr_file$rdmux[0][5][14]$b$1656 [20] $memory\csr_file$rdmux[0][5][14]$b$1656 [15] $memory\csr_file$rdmux[0][5][14]$b$1656 [17] $memory\csr_file$rdmux[0][5][14]$b$1656 [5] $memory\csr_file$rdmux[0][5][14]$b$1656 [13] $memory\csr_file$rdmux[0][5][14]$b$1656 [5] 1'1 $memory\csr_file$rdmux[0][5][14]$b$1656 [4] $memory\csr_file$rdmux[0][5][14]$b$1656 [7] $memory\csr_file$rdmux[0][5][14]$b$1656 [5] 4'0011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][2]$1714:
      Old ports: A=$memory\csr_file$rdmux[0][6][2]$a$1715, B=$memory\csr_file$rdmux[0][6][2]$b$1716, Y=$memory\csr_file$rdmux[0][5][1]$a$1616
      New ports: A={ $memory\csr_file$rdmux[0][6][2]$a$1715 [18] $memory\csr_file$rdmux[0][6][2]$a$1715 [18] 1'0 $memory\csr_file$rdmux[0][6][2]$a$1715 [18] 2'01 $memory\csr_file$rdmux[0][6][2]$a$1715 [2] $memory\csr_file$rdmux[0][6][2]$a$1715 [2] }, B={ $memory\csr_file$rdmux[0][6][2]$b$1716 [21] 1'0 $memory\csr_file$rdmux[0][6][2]$b$1716 [21] $memory\csr_file$rdmux[0][6][2]$b$1716 [8] $memory\csr_file$rdmux[0][6][2]$b$1716 [8] $memory\csr_file$rdmux[0][6][2]$b$1716 [8] 2'10 }, Y={ $memory\csr_file$rdmux[0][5][1]$a$1616 [25] $memory\csr_file$rdmux[0][5][1]$a$1616 [23] $memory\csr_file$rdmux[0][5][1]$a$1616 [21] $memory\csr_file$rdmux[0][5][1]$a$1616 [18] $memory\csr_file$rdmux[0][5][1]$a$1616 [15] $memory\csr_file$rdmux[0][5][1]$a$1616 [8:7] $memory\csr_file$rdmux[0][5][1]$a$1616 [2] }
      New connections: { $memory\csr_file$rdmux[0][5][1]$a$1616 [31:26] $memory\csr_file$rdmux[0][5][1]$a$1616 [24] $memory\csr_file$rdmux[0][5][1]$a$1616 [22] $memory\csr_file$rdmux[0][5][1]$a$1616 [20:19] $memory\csr_file$rdmux[0][5][1]$a$1616 [17:16] $memory\csr_file$rdmux[0][5][1]$a$1616 [14:9] $memory\csr_file$rdmux[0][5][1]$a$1616 [6:3] $memory\csr_file$rdmux[0][5][1]$a$1616 [1:0] } = { $memory\csr_file$rdmux[0][5][1]$a$1616 [23] $memory\csr_file$rdmux[0][5][1]$a$1616 [21] $memory\csr_file$rdmux[0][5][1]$a$1616 [23] $memory\csr_file$rdmux[0][5][1]$a$1616 [23] $memory\csr_file$rdmux[0][5][1]$a$1616 [23] 1'0 $memory\csr_file$rdmux[0][5][1]$a$1616 [23] $memory\csr_file$rdmux[0][5][1]$a$1616 [21] 2'00 $memory\csr_file$rdmux[0][5][1]$a$1616 [15] $memory\csr_file$rdmux[0][5][1]$a$1616 [15] 2'00 $memory\csr_file$rdmux[0][5][1]$a$1616 [2] 4'0110 $memory\csr_file$rdmux[0][5][1]$a$1616 [2] 4'1011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][30]$1798:
      Old ports: A=$memory\csr_file$rdmux[0][6][30]$a$1799, B=$memory\csr_file$rdmux[0][6][30]$b$1800, Y=$memory\csr_file$rdmux[0][5][15]$a$1658
      New ports: A={ 1'0 $memory\csr_file$rdmux[0][6][30]$a$1799 [8] $memory\csr_file$rdmux[0][6][30]$a$1799 [15] 1'0 $memory\csr_file$rdmux[0][6][30]$a$1799 [8] 1'1 }, B={ $memory\csr_file$rdmux[0][6][30]$b$1800 [4] 2'11 $memory\csr_file$rdmux[0][6][30]$b$1800 [11] $memory\csr_file$rdmux[0][6][30]$b$1800 [4] $memory\csr_file$rdmux[0][6][30]$b$1800 [4] }, Y={ $memory\csr_file$rdmux[0][5][15]$a$1658 [22] $memory\csr_file$rdmux[0][5][15]$a$1658 [17] $memory\csr_file$rdmux[0][5][15]$a$1658 [15] $memory\csr_file$rdmux[0][5][15]$a$1658 [11] $memory\csr_file$rdmux[0][5][15]$a$1658 [8] $memory\csr_file$rdmux[0][5][15]$a$1658 [4] }
      New connections: { $memory\csr_file$rdmux[0][5][15]$a$1658 [31:23] $memory\csr_file$rdmux[0][5][15]$a$1658 [21:18] $memory\csr_file$rdmux[0][5][15]$a$1658 [16] $memory\csr_file$rdmux[0][5][15]$a$1658 [14:12] $memory\csr_file$rdmux[0][5][15]$a$1658 [10:9] $memory\csr_file$rdmux[0][5][15]$a$1658 [7:5] $memory\csr_file$rdmux[0][5][15]$a$1658 [3:0] } = { 13'0000000000001 $memory\csr_file$rdmux[0][5][15]$a$1658 [4] 1'0 $memory\csr_file$rdmux[0][5][15]$a$1658 [11] 1'0 $memory\csr_file$rdmux[0][5][15]$a$1658 [4] $memory\csr_file$rdmux[0][5][15]$a$1658 [4] $memory\csr_file$rdmux[0][5][15]$a$1658 [4] 6'000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][31]$1801:
      Old ports: A=$memory\csr_file$rdmux[0][6][31]$a$1802, B=$memory\csr_file$rdmux[0][6][31]$b$1803, Y=$memory\csr_file$rdmux[0][5][15]$b$1659
      New ports: A={ $memory\csr_file$rdmux[0][6][31]$a$1802 [5] $memory\csr_file$rdmux[0][6][31]$a$1802 [5] 4'0110 $memory\csr_file$rdmux[0][6][31]$a$1802 [4] 1'0 $memory\csr_file$rdmux[0][6][31]$a$1802 [5:4] }, B={ 1'1 $memory\csr_file$rdmux[0][6][31]$b$1803 [4] 1'1 $memory\csr_file$rdmux[0][6][31]$b$1803 [5:4] $memory\csr_file$rdmux[0][6][31]$b$1803 [4] 1'1 $memory\csr_file$rdmux[0][6][31]$b$1803 [5] $memory\csr_file$rdmux[0][6][31]$b$1803 [5:4] }, Y={ $memory\csr_file$rdmux[0][5][15]$b$1659 [25:23] $memory\csr_file$rdmux[0][5][15]$b$1659 [15] $memory\csr_file$rdmux[0][5][15]$b$1659 [9:4] }
      New connections: { $memory\csr_file$rdmux[0][5][15]$b$1659 [31:26] $memory\csr_file$rdmux[0][5][15]$b$1659 [22:16] $memory\csr_file$rdmux[0][5][15]$b$1659 [14:10] $memory\csr_file$rdmux[0][5][15]$b$1659 [3:0] } = { $memory\csr_file$rdmux[0][5][15]$b$1659 [25] $memory\csr_file$rdmux[0][5][15]$b$1659 [25] $memory\csr_file$rdmux[0][5][15]$b$1659 [25] $memory\csr_file$rdmux[0][5][15]$b$1659 [25] $memory\csr_file$rdmux[0][5][15]$b$1659 [25] $memory\csr_file$rdmux[0][5][15]$b$1659 [25] $memory\csr_file$rdmux[0][5][15]$b$1659 [7] $memory\csr_file$rdmux[0][5][15]$b$1659 [8] $memory\csr_file$rdmux[0][5][15]$b$1659 [8] 3'011 $memory\csr_file$rdmux[0][5][15]$b$1659 [5] $memory\csr_file$rdmux[0][5][15]$b$1659 [6:5] 1'0 $memory\csr_file$rdmux[0][5][15]$b$1659 [5] $memory\csr_file$rdmux[0][5][15]$b$1659 [9] 4'0011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][32]$1804:
      Old ports: A=$memory\csr_file$rdmux[0][6][32]$a$1805, B=$memory\csr_file$rdmux[0][6][32]$b$1806, Y=$memory\csr_file$rdmux[0][5][16]$a$1661
      New ports: A={ 3'110 $memory\csr_file$rdmux[0][6][32]$a$1805 [12] 1'1 $memory\csr_file$rdmux[0][6][32]$a$1805 [5] }, B={ 1'0 $memory\csr_file$rdmux[0][6][32]$b$1806 [5] $memory\csr_file$rdmux[0][6][32]$b$1806 [5] 1'0 $memory\csr_file$rdmux[0][6][32]$b$1806 [7] $memory\csr_file$rdmux[0][6][32]$b$1806 [5] }, Y={ $memory\csr_file$rdmux[0][5][16]$a$1661 [30] $memory\csr_file$rdmux[0][5][16]$a$1661 [23] $memory\csr_file$rdmux[0][5][16]$a$1661 [20] $memory\csr_file$rdmux[0][5][16]$a$1661 [12] $memory\csr_file$rdmux[0][5][16]$a$1661 [7] $memory\csr_file$rdmux[0][5][16]$a$1661 [5] }
      New connections: { $memory\csr_file$rdmux[0][5][16]$a$1661 [31] $memory\csr_file$rdmux[0][5][16]$a$1661 [29:24] $memory\csr_file$rdmux[0][5][16]$a$1661 [22:21] $memory\csr_file$rdmux[0][5][16]$a$1661 [19:13] $memory\csr_file$rdmux[0][5][16]$a$1661 [11:8] $memory\csr_file$rdmux[0][5][16]$a$1661 [6] $memory\csr_file$rdmux[0][5][16]$a$1661 [4:0] } = { $memory\csr_file$rdmux[0][5][16]$a$1661 [12] $memory\csr_file$rdmux[0][5][16]$a$1661 [12] $memory\csr_file$rdmux[0][5][16]$a$1661 [12] $memory\csr_file$rdmux[0][5][16]$a$1661 [12] $memory\csr_file$rdmux[0][5][16]$a$1661 [12] $memory\csr_file$rdmux[0][5][16]$a$1661 [12] $memory\csr_file$rdmux[0][5][16]$a$1661 [12] 1'1 $memory\csr_file$rdmux[0][5][16]$a$1661 [5] 4'0111 $memory\csr_file$rdmux[0][5][16]$a$1661 [7] $memory\csr_file$rdmux[0][5][16]$a$1661 [12] $memory\csr_file$rdmux[0][5][16]$a$1661 [12] 10'0111010011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][33]$1807:
      Old ports: A=$memory\csr_file$rdmux[0][6][33]$a$1808, B=$memory\csr_file$rdmux[0][6][33]$b$1809, Y=$memory\csr_file$rdmux[0][5][16]$b$1662
      New ports: A={ 2'11 $memory\csr_file$rdmux[0][6][33]$a$1808 [4] $memory\csr_file$rdmux[0][6][33]$a$1808 [6] 1'0 $memory\csr_file$rdmux[0][6][33]$a$1808 [4] $memory\csr_file$rdmux[0][6][33]$a$1808 [6] 1'1 $memory\csr_file$rdmux[0][6][33]$a$1808 [4] 1'0 }, B={ 1'0 $memory\csr_file$rdmux[0][6][33]$b$1809 [4] $memory\csr_file$rdmux[0][6][33]$b$1809 [2] 1'0 $memory\csr_file$rdmux[0][6][33]$b$1809 [4] 1'0 $memory\csr_file$rdmux[0][6][33]$b$1809 [2] $memory\csr_file$rdmux[0][6][33]$b$1809 [2] $memory\csr_file$rdmux[0][6][33]$b$1809 [4] $memory\csr_file$rdmux[0][6][33]$b$1809 [2] }, Y={ $memory\csr_file$rdmux[0][5][16]$b$1662 [20] $memory\csr_file$rdmux[0][5][16]$b$1662 [16:15] $memory\csr_file$rdmux[0][5][16]$b$1662 [11] $memory\csr_file$rdmux[0][5][16]$b$1662 [9] $memory\csr_file$rdmux[0][5][16]$b$1662 [7:4] $memory\csr_file$rdmux[0][5][16]$b$1662 [2] }
      New connections: { $memory\csr_file$rdmux[0][5][16]$b$1662 [31:21] $memory\csr_file$rdmux[0][5][16]$b$1662 [19:17] $memory\csr_file$rdmux[0][5][16]$b$1662 [14:12] $memory\csr_file$rdmux[0][5][16]$b$1662 [10] $memory\csr_file$rdmux[0][5][16]$b$1662 [8] $memory\csr_file$rdmux[0][5][16]$b$1662 [3] $memory\csr_file$rdmux[0][5][16]$b$1662 [1:0] } = { 7'0000000 $memory\csr_file$rdmux[0][5][16]$b$1662 [11] $memory\csr_file$rdmux[0][5][16]$b$1662 [7] $memory\csr_file$rdmux[0][5][16]$b$1662 [7] $memory\csr_file$rdmux[0][5][16]$b$1662 [7] 1'0 $memory\csr_file$rdmux[0][5][16]$b$1662 [16] $memory\csr_file$rdmux[0][5][16]$b$1662 [11] $memory\csr_file$rdmux[0][5][16]$b$1662 [11] $memory\csr_file$rdmux[0][5][16]$b$1662 [11] 1'0 $memory\csr_file$rdmux[0][5][16]$b$1662 [4] $memory\csr_file$rdmux[0][5][16]$b$1662 [4] 3'011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][34]$1810:
      Old ports: A=$memory\csr_file$rdmux[0][6][34]$a$1811, B=$memory\csr_file$rdmux[0][6][34]$b$1812, Y=$memory\csr_file$rdmux[0][5][17]$a$1664
      New ports: A={ $memory\csr_file$rdmux[0][6][34]$a$1811 [5] 1'0 $memory\csr_file$rdmux[0][6][34]$a$1811 [8] 1'1 $memory\csr_file$rdmux[0][6][34]$a$1811 [8] $memory\csr_file$rdmux[0][6][34]$a$1811 [8] 1'1 $memory\csr_file$rdmux[0][6][34]$a$1811 [5] 1'0 }, B={ 1'1 $memory\csr_file$rdmux[0][6][34]$b$1812 [9] $memory\csr_file$rdmux[0][6][34]$b$1812 [7] 1'0 $memory\csr_file$rdmux[0][6][34]$b$1812 [9] 1'1 $memory\csr_file$rdmux[0][6][34]$b$1812 [7] 2'01 }, Y={ $memory\csr_file$rdmux[0][5][17]$a$1664 [20] $memory\csr_file$rdmux[0][5][17]$a$1664 [17] $memory\csr_file$rdmux[0][5][17]$a$1664 [15:14] $memory\csr_file$rdmux[0][5][17]$a$1664 [9:7] $memory\csr_file$rdmux[0][5][17]$a$1664 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][5][17]$a$1664 [31:21] $memory\csr_file$rdmux[0][5][17]$a$1664 [19:18] $memory\csr_file$rdmux[0][5][17]$a$1664 [16] $memory\csr_file$rdmux[0][5][17]$a$1664 [13:10] $memory\csr_file$rdmux[0][5][17]$a$1664 [6] $memory\csr_file$rdmux[0][5][17]$a$1664 [3:0] } = { $memory\csr_file$rdmux[0][5][17]$a$1664 [5] $memory\csr_file$rdmux[0][5][17]$a$1664 [5] $memory\csr_file$rdmux[0][5][17]$a$1664 [5] $memory\csr_file$rdmux[0][5][17]$a$1664 [5] $memory\csr_file$rdmux[0][5][17]$a$1664 [5] $memory\csr_file$rdmux[0][5][17]$a$1664 [5] $memory\csr_file$rdmux[0][5][17]$a$1664 [5] $memory\csr_file$rdmux[0][5][17]$a$1664 [5] 6'000011 $memory\csr_file$rdmux[0][5][17]$a$1664 [5] $memory\csr_file$rdmux[0][5][17]$a$1664 [5] $memory\csr_file$rdmux[0][5][17]$a$1664 [5] 1'1 $memory\csr_file$rdmux[0][5][17]$a$1664 [5] 4'0011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][35]$1813:
      Old ports: A=$memory\csr_file$rdmux[0][6][35]$a$1814, B=$memory\csr_file$rdmux[0][6][35]$b$1815, Y=$memory\csr_file$rdmux[0][5][17]$b$1665
      New ports: A={ 1'0 $memory\csr_file$rdmux[0][6][35]$a$1814 [6] $memory\csr_file$rdmux[0][6][35]$a$1814 [6] 1'1 $memory\csr_file$rdmux[0][6][35]$a$1814 [8] $memory\csr_file$rdmux[0][6][35]$a$1814 [8] 1'1 $memory\csr_file$rdmux[0][6][35]$a$1814 [6] 2'10 }, B={ 1'1 $memory\csr_file$rdmux[0][6][35]$b$1815 [7] 2'00 $memory\csr_file$rdmux[0][6][35]$b$1815 [7] 1'0 $memory\csr_file$rdmux[0][6][35]$b$1815 [7] $memory\csr_file$rdmux[0][6][35]$b$1815 [2] $memory\csr_file$rdmux[0][6][35]$b$1815 [2] $memory\csr_file$rdmux[0][6][35]$b$1815 [2] }, Y={ $memory\csr_file$rdmux[0][5][17]$b$1665 [15:13] $memory\csr_file$rdmux[0][5][17]$b$1665 [11] $memory\csr_file$rdmux[0][5][17]$b$1665 [9:5] $memory\csr_file$rdmux[0][5][17]$b$1665 [2] }
      New connections: { $memory\csr_file$rdmux[0][5][17]$b$1665 [31:16] $memory\csr_file$rdmux[0][5][17]$b$1665 [12] $memory\csr_file$rdmux[0][5][17]$b$1665 [10] $memory\csr_file$rdmux[0][5][17]$b$1665 [4:3] $memory\csr_file$rdmux[0][5][17]$b$1665 [1:0] } = { $memory\csr_file$rdmux[0][5][17]$b$1665 [11] $memory\csr_file$rdmux[0][5][17]$b$1665 [11] $memory\csr_file$rdmux[0][5][17]$b$1665 [11] $memory\csr_file$rdmux[0][5][17]$b$1665 [11] $memory\csr_file$rdmux[0][5][17]$b$1665 [11] $memory\csr_file$rdmux[0][5][17]$b$1665 [11] $memory\csr_file$rdmux[0][5][17]$b$1665 [11] $memory\csr_file$rdmux[0][5][17]$b$1665 [13] $memory\csr_file$rdmux[0][5][17]$b$1665 [8] $memory\csr_file$rdmux[0][5][17]$b$1665 [8] $memory\csr_file$rdmux[0][5][17]$b$1665 [8] $memory\csr_file$rdmux[0][5][17]$b$1665 [11] 1'0 $memory\csr_file$rdmux[0][5][17]$b$1665 [7] $memory\csr_file$rdmux[0][5][17]$b$1665 [11] $memory\csr_file$rdmux[0][5][17]$b$1665 [7] 1'0 $memory\csr_file$rdmux[0][5][17]$b$1665 [9] 4'0011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][36]$1816:
      Old ports: A=$memory\csr_file$rdmux[0][6][36]$a$1817, B=$memory\csr_file$rdmux[0][6][36]$b$1818, Y=$memory\csr_file$rdmux[0][5][18]$a$1667
      New ports: A={ 1'0 $memory\csr_file$rdmux[0][6][36]$a$1817 [7] 1'1 $memory\csr_file$rdmux[0][6][36]$a$1817 [7] 2'01 }, B={ $memory\csr_file$rdmux[0][6][36]$b$1818 [4] 1'0 $memory\csr_file$rdmux[0][6][36]$b$1818 [5] 1'1 $memory\csr_file$rdmux[0][6][36]$b$1818 [5:4] }, Y={ $memory\csr_file$rdmux[0][5][18]$a$1667 [15] $memory\csr_file$rdmux[0][5][18]$a$1667 [12] $memory\csr_file$rdmux[0][5][18]$a$1667 [9] $memory\csr_file$rdmux[0][5][18]$a$1667 [7] $memory\csr_file$rdmux[0][5][18]$a$1667 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][5][18]$a$1667 [31:16] $memory\csr_file$rdmux[0][5][18]$a$1667 [14:13] $memory\csr_file$rdmux[0][5][18]$a$1667 [11:10] $memory\csr_file$rdmux[0][5][18]$a$1667 [8] $memory\csr_file$rdmux[0][5][18]$a$1667 [6] $memory\csr_file$rdmux[0][5][18]$a$1667 [3:0] } = { $memory\csr_file$rdmux[0][5][18]$a$1667 [5] $memory\csr_file$rdmux[0][5][18]$a$1667 [5] $memory\csr_file$rdmux[0][5][18]$a$1667 [5] $memory\csr_file$rdmux[0][5][18]$a$1667 [5] $memory\csr_file$rdmux[0][5][18]$a$1667 [5] $memory\csr_file$rdmux[0][5][18]$a$1667 [5] $memory\csr_file$rdmux[0][5][18]$a$1667 [5] 1'0 $memory\csr_file$rdmux[0][5][18]$a$1667 [5] $memory\csr_file$rdmux[0][5][18]$a$1667 [5] $memory\csr_file$rdmux[0][5][18]$a$1667 [12] 3'101 $memory\csr_file$rdmux[0][5][18]$a$1667 [9] 1'1 $memory\csr_file$rdmux[0][5][18]$a$1667 [12] $memory\csr_file$rdmux[0][5][18]$a$1667 [12] $memory\csr_file$rdmux[0][5][18]$a$1667 [5] 7'1100011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][37]$1819:
      Old ports: A=$memory\csr_file$rdmux[0][6][37]$a$1820, B=$memory\csr_file$rdmux[0][6][37]$b$1821, Y=$memory\csr_file$rdmux[0][5][18]$b$1668
      New ports: A={ $memory\csr_file$rdmux[0][6][37]$a$1820 [5] 1'1 $memory\csr_file$rdmux[0][6][37]$a$1820 [9] 1'0 $memory\csr_file$rdmux[0][6][37]$a$1820 [9] 1'1 $memory\csr_file$rdmux[0][6][37]$a$1820 [5] 1'0 }, B={ 2'10 $memory\csr_file$rdmux[0][6][37]$b$1821 [7] $memory\csr_file$rdmux[0][6][37]$b$1821 [7] 1'1 $memory\csr_file$rdmux[0][6][37]$b$1821 [7] 2'01 }, Y={ $memory\csr_file$rdmux[0][5][18]$b$1668 [17] $memory\csr_file$rdmux[0][5][18]$b$1668 [15:14] $memory\csr_file$rdmux[0][5][18]$b$1668 [12] $memory\csr_file$rdmux[0][5][18]$b$1668 [9] $memory\csr_file$rdmux[0][5][18]$b$1668 [7] $memory\csr_file$rdmux[0][5][18]$b$1668 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][5][18]$b$1668 [31:18] $memory\csr_file$rdmux[0][5][18]$b$1668 [16] $memory\csr_file$rdmux[0][5][18]$b$1668 [13] $memory\csr_file$rdmux[0][5][18]$b$1668 [11:10] $memory\csr_file$rdmux[0][5][18]$b$1668 [8] $memory\csr_file$rdmux[0][5][18]$b$1668 [6] $memory\csr_file$rdmux[0][5][18]$b$1668 [3:0] } = { $memory\csr_file$rdmux[0][5][18]$b$1668 [5] $memory\csr_file$rdmux[0][5][18]$b$1668 [5] $memory\csr_file$rdmux[0][5][18]$b$1668 [5] $memory\csr_file$rdmux[0][5][18]$b$1668 [5] $memory\csr_file$rdmux[0][5][18]$b$1668 [5] 5'00000 $memory\csr_file$rdmux[0][5][18]$b$1668 [12] $memory\csr_file$rdmux[0][5][18]$b$1668 [4] 3'011 $memory\csr_file$rdmux[0][5][18]$b$1668 [12] 1'0 $memory\csr_file$rdmux[0][5][18]$b$1668 [9] $memory\csr_file$rdmux[0][5][18]$b$1668 [4] $memory\csr_file$rdmux[0][5][18]$b$1668 [5] 4'0011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][38]$1822:
      Old ports: A=$memory\csr_file$rdmux[0][6][38]$a$1823, B=$memory\csr_file$rdmux[0][6][38]$b$1824, Y=$memory\csr_file$rdmux[0][5][19]$a$1670
      New ports: A={ $memory\csr_file$rdmux[0][6][38]$a$1823 [5] $memory\csr_file$rdmux[0][6][38]$a$1823 [5] 1'1 $memory\csr_file$rdmux[0][6][38]$a$1823 [4] $memory\csr_file$rdmux[0][6][38]$a$1823 [5] 3'110 $memory\csr_file$rdmux[0][6][38]$a$1823 [5:4] 1'0 }, B={ 1'0 $memory\csr_file$rdmux[0][6][38]$b$1824 [2] $memory\csr_file$rdmux[0][6][38]$b$1824 [2] 1'1 $memory\csr_file$rdmux[0][6][38]$b$1824 [7] 1'0 $memory\csr_file$rdmux[0][6][38]$b$1824 [7] 3'110 $memory\csr_file$rdmux[0][6][38]$b$1824 [2] }, Y={ $memory\csr_file$rdmux[0][5][19]$a$1670 [23:22] $memory\csr_file$rdmux[0][5][19]$a$1670 [20] $memory\csr_file$rdmux[0][5][19]$a$1670 [15] $memory\csr_file$rdmux[0][5][19]$a$1670 [9:4] $memory\csr_file$rdmux[0][5][19]$a$1670 [2] }
      New connections: { $memory\csr_file$rdmux[0][5][19]$a$1670 [31:24] $memory\csr_file$rdmux[0][5][19]$a$1670 [21] $memory\csr_file$rdmux[0][5][19]$a$1670 [19:16] $memory\csr_file$rdmux[0][5][19]$a$1670 [14:10] $memory\csr_file$rdmux[0][5][19]$a$1670 [3] $memory\csr_file$rdmux[0][5][19]$a$1670 [1:0] } = { $memory\csr_file$rdmux[0][5][19]$a$1670 [5] $memory\csr_file$rdmux[0][5][19]$a$1670 [5] $memory\csr_file$rdmux[0][5][19]$a$1670 [5] $memory\csr_file$rdmux[0][5][19]$a$1670 [5] $memory\csr_file$rdmux[0][5][19]$a$1670 [9] $memory\csr_file$rdmux[0][5][19]$a$1670 [5] $memory\csr_file$rdmux[0][5][19]$a$1670 [22] 2'00 $memory\csr_file$rdmux[0][5][19]$a$1670 [2] 1'1 $memory\csr_file$rdmux[0][5][19]$a$1670 [5] 1'1 $memory\csr_file$rdmux[0][5][19]$a$1670 [2] $memory\csr_file$rdmux[0][5][19]$a$1670 [2] $memory\csr_file$rdmux[0][5][19]$a$1670 [6] $memory\csr_file$rdmux[0][5][19]$a$1670 [9:8] $memory\csr_file$rdmux[0][5][19]$a$1670 [2] 2'11 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][39]$1825:
      Old ports: A=$memory\csr_file$rdmux[0][6][39]$a$1826, B=$memory\csr_file$rdmux[0][6][39]$b$1827, Y=$memory\csr_file$rdmux[0][5][19]$b$1671
      New ports: A={ $memory\csr_file$rdmux[0][6][39]$a$1826 [22] $memory\csr_file$rdmux[0][6][39]$a$1826 [10] 2'01 }, B={ $memory\csr_file$rdmux[0][6][39]$b$1827 [22] 2'11 $memory\csr_file$rdmux[0][6][39]$b$1827 [7] }, Y={ $memory\csr_file$rdmux[0][5][19]$b$1671 [22] $memory\csr_file$rdmux[0][5][19]$b$1671 [10] $memory\csr_file$rdmux[0][5][19]$b$1671 [8:7] }
      New connections: { $memory\csr_file$rdmux[0][5][19]$b$1671 [31:23] $memory\csr_file$rdmux[0][5][19]$b$1671 [21:11] $memory\csr_file$rdmux[0][5][19]$b$1671 [9] $memory\csr_file$rdmux[0][5][19]$b$1671 [6:0] } = { 8'00000000 $memory\csr_file$rdmux[0][5][19]$b$1671 [8] 10'0001011010 $memory\csr_file$rdmux[0][5][19]$b$1671 [8] 8'10000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][3]$1717:
      Old ports: A=$memory\csr_file$rdmux[0][6][3]$a$1718, B=$memory\csr_file$rdmux[0][6][3]$b$1719, Y=$memory\csr_file$rdmux[0][5][1]$b$1617
      New ports: A={ 1'1 $memory\csr_file$rdmux[0][6][3]$a$1718 [9] $memory\csr_file$rdmux[0][6][3]$a$1718 [7] $memory\csr_file$rdmux[0][6][3]$a$1718 [7] 2'10 }, B={ 2'00 $memory\csr_file$rdmux[0][6][3]$b$1719 [4] $memory\csr_file$rdmux[0][6][3]$b$1719 [2] $memory\csr_file$rdmux[0][6][3]$b$1719 [4] $memory\csr_file$rdmux[0][6][3]$b$1719 [2] }, Y={ $memory\csr_file$rdmux[0][5][1]$b$1617 [15] $memory\csr_file$rdmux[0][5][1]$b$1617 [9:7] $memory\csr_file$rdmux[0][5][1]$b$1617 [4] $memory\csr_file$rdmux[0][5][1]$b$1617 [2] }
      New connections: { $memory\csr_file$rdmux[0][5][1]$b$1617 [31:16] $memory\csr_file$rdmux[0][5][1]$b$1617 [14:10] $memory\csr_file$rdmux[0][5][1]$b$1617 [6:5] $memory\csr_file$rdmux[0][5][1]$b$1617 [3] $memory\csr_file$rdmux[0][5][1]$b$1617 [1:0] } = { 3'000 $memory\csr_file$rdmux[0][5][1]$b$1617 [2] 1'0 $memory\csr_file$rdmux[0][5][1]$b$1617 [2] $memory\csr_file$rdmux[0][5][1]$b$1617 [2] $memory\csr_file$rdmux[0][5][1]$b$1617 [2] 5'00000 $memory\csr_file$rdmux[0][5][1]$b$1617 [4] $memory\csr_file$rdmux[0][5][1]$b$1617 [4] $memory\csr_file$rdmux[0][5][1]$b$1617 [8] 4'0000 $memory\csr_file$rdmux[0][5][1]$b$1617 [4] $memory\csr_file$rdmux[0][5][1]$b$1617 [2] $memory\csr_file$rdmux[0][5][1]$b$1617 [2] $memory\csr_file$rdmux[0][5][1]$b$1617 [2] 2'11 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][40]$1828:
      Old ports: A=$memory\csr_file$rdmux[0][6][40]$a$1829, B=$memory\csr_file$rdmux[0][6][40]$b$1830, Y=$memory\csr_file$rdmux[0][5][20]$a$1673
      New ports: A={ 1'0 $memory\csr_file$rdmux[0][6][40]$a$1829 [22] 4'1110 $memory\csr_file$rdmux[0][6][40]$a$1829 [7] }, B={ 1'1 $memory\csr_file$rdmux[0][6][40]$b$1830 [11] $memory\csr_file$rdmux[0][6][40]$b$1830 [11] 1'0 $memory\csr_file$rdmux[0][6][40]$b$1830 [8] $memory\csr_file$rdmux[0][6][40]$b$1830 [8] 1'0 }, Y={ $memory\csr_file$rdmux[0][5][20]$a$1673 [23:22] $memory\csr_file$rdmux[0][5][20]$a$1673 [11:7] }
      New connections: { $memory\csr_file$rdmux[0][5][20]$a$1673 [31:24] $memory\csr_file$rdmux[0][5][20]$a$1673 [21:12] $memory\csr_file$rdmux[0][5][20]$a$1673 [6:0] } = 25'0000000100010110100000011
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][41]$1831:
      Old ports: A=$memory\csr_file$rdmux[0][6][41]$a$1832, B=$memory\csr_file$rdmux[0][6][41]$b$1833, Y=$memory\csr_file$rdmux[0][5][20]$b$1674
      New ports: A={ 1'0 $memory\csr_file$rdmux[0][6][41]$a$1832 [5] $memory\csr_file$rdmux[0][6][41]$a$1832 [5] 1'0 $memory\csr_file$rdmux[0][6][41]$a$1832 [4] $memory\csr_file$rdmux[0][6][41]$a$1832 [5:4] }, B={ $memory\csr_file$rdmux[0][6][41]$b$1833 [7] $memory\csr_file$rdmux[0][6][41]$b$1833 [7] 2'11 $memory\csr_file$rdmux[0][6][41]$b$1833 [7] $memory\csr_file$rdmux[0][6][41]$b$1833 [5] 1'0 }, Y={ $memory\csr_file$rdmux[0][5][20]$b$1674 [24:23] $memory\csr_file$rdmux[0][5][20]$b$1674 [13] $memory\csr_file$rdmux[0][5][20]$b$1674 [9] $memory\csr_file$rdmux[0][5][20]$b$1674 [7] $memory\csr_file$rdmux[0][5][20]$b$1674 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][5][20]$b$1674 [31:25] $memory\csr_file$rdmux[0][5][20]$b$1674 [22:14] $memory\csr_file$rdmux[0][5][20]$b$1674 [12:10] $memory\csr_file$rdmux[0][5][20]$b$1674 [8] $memory\csr_file$rdmux[0][5][20]$b$1674 [6] $memory\csr_file$rdmux[0][5][20]$b$1674 [3:0] } = { $memory\csr_file$rdmux[0][5][20]$b$1674 [24] $memory\csr_file$rdmux[0][5][20]$b$1674 [24] $memory\csr_file$rdmux[0][5][20]$b$1674 [24] $memory\csr_file$rdmux[0][5][20]$b$1674 [24] $memory\csr_file$rdmux[0][5][20]$b$1674 [24] $memory\csr_file$rdmux[0][5][20]$b$1674 [24] $memory\csr_file$rdmux[0][5][20]$b$1674 [7] 2'10 $memory\csr_file$rdmux[0][5][20]$b$1674 [5] 2'01 $memory\csr_file$rdmux[0][5][20]$b$1674 [5] 1'1 $memory\csr_file$rdmux[0][5][20]$b$1674 [7] 3'000 $memory\csr_file$rdmux[0][5][20]$b$1674 [7] $memory\csr_file$rdmux[0][5][20]$b$1674 [4] 5'00011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][42]$1834:
      Old ports: A=$memory\csr_file$rdmux[0][6][42]$a$1835, B=$memory\csr_file$rdmux[0][6][42]$b$1836, Y=$memory\csr_file$rdmux[0][5][21]$a$1676
      New ports: A={ $memory\csr_file$rdmux[0][6][42]$a$1835 [20] 2'01 $memory\csr_file$rdmux[0][6][42]$a$1835 [9] }, B={ $memory\csr_file$rdmux[0][6][42]$b$1836 [20] 2'10 $memory\csr_file$rdmux[0][6][42]$b$1836 [9] }, Y={ $memory\csr_file$rdmux[0][5][21]$a$1676 [20] $memory\csr_file$rdmux[0][5][21]$a$1676 [11:9] }
      New connections: { $memory\csr_file$rdmux[0][5][21]$a$1676 [31:21] $memory\csr_file$rdmux[0][5][21]$a$1676 [19:12] $memory\csr_file$rdmux[0][5][21]$a$1676 [8:0] } = { 10'0000000111 $memory\csr_file$rdmux[0][5][21]$a$1676 [10] 17'01110010000100011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][43]$1837:
      Old ports: A=$memory\csr_file$rdmux[0][6][43]$a$1838, B=$memory\csr_file$rdmux[0][6][43]$b$1839, Y=$memory\csr_file$rdmux[0][5][21]$b$1677
      New ports: A={ 1'0 $memory\csr_file$rdmux[0][6][43]$a$1838 [9] $memory\csr_file$rdmux[0][6][43]$a$1838 [21] $memory\csr_file$rdmux[0][6][43]$a$1838 [21] 1'0 $memory\csr_file$rdmux[0][6][43]$a$1838 [9] 2'10 }, B={ 4'1010 $memory\csr_file$rdmux[0][6][43]$b$1839 [5] 1'1 $memory\csr_file$rdmux[0][6][43]$b$1839 [5:4] }, Y={ $memory\csr_file$rdmux[0][5][21]$b$1677 [25:24] $memory\csr_file$rdmux[0][5][21]$b$1677 [22:20] $memory\csr_file$rdmux[0][5][21]$b$1677 [9] $memory\csr_file$rdmux[0][5][21]$b$1677 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][5][21]$b$1677 [31:26] $memory\csr_file$rdmux[0][5][21]$b$1677 [23] $memory\csr_file$rdmux[0][5][21]$b$1677 [19:10] $memory\csr_file$rdmux[0][5][21]$b$1677 [8:6] $memory\csr_file$rdmux[0][5][21]$b$1677 [3:0] } = { $memory\csr_file$rdmux[0][5][21]$b$1677 [20] $memory\csr_file$rdmux[0][5][21]$b$1677 [20] $memory\csr_file$rdmux[0][5][21]$b$1677 [20] $memory\csr_file$rdmux[0][5][21]$b$1677 [20] $memory\csr_file$rdmux[0][5][21]$b$1677 [20] $memory\csr_file$rdmux[0][5][21]$b$1677 [20] $memory\csr_file$rdmux[0][5][21]$b$1677 [20] 6'011100 $memory\csr_file$rdmux[0][5][21]$b$1677 [5] 1'0 $memory\csr_file$rdmux[0][5][21]$b$1677 [5] 1'1 $memory\csr_file$rdmux[0][5][21]$b$1677 [4] 6'000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][44]$1840:
      Old ports: A=$memory\csr_file$rdmux[0][6][44]$a$1841, B=0, Y=$memory\csr_file$rdmux[0][5][22]$a$1679
      New ports: A={ $memory\csr_file$rdmux[0][6][44]$a$1841 [7] $memory\csr_file$rdmux[0][6][44]$a$1841 [2] 1'1 }, B=3'000, Y={ $memory\csr_file$rdmux[0][5][22]$a$1679 [7] $memory\csr_file$rdmux[0][5][22]$a$1679 [2] $memory\csr_file$rdmux[0][5][22]$a$1679 [0] }
      New connections: { $memory\csr_file$rdmux[0][5][22]$a$1679 [31:8] $memory\csr_file$rdmux[0][5][22]$a$1679 [6:3] $memory\csr_file$rdmux[0][5][22]$a$1679 [1] } = { $memory\csr_file$rdmux[0][5][22]$a$1679 [0] $memory\csr_file$rdmux[0][5][22]$a$1679 [0] $memory\csr_file$rdmux[0][5][22]$a$1679 [0] $memory\csr_file$rdmux[0][5][22]$a$1679 [0] $memory\csr_file$rdmux[0][5][22]$a$1679 [7] 1'0 $memory\csr_file$rdmux[0][5][22]$a$1679 [7] $memory\csr_file$rdmux[0][5][22]$a$1679 [2] $memory\csr_file$rdmux[0][5][22]$a$1679 [0] $memory\csr_file$rdmux[0][5][22]$a$1679 [7] $memory\csr_file$rdmux[0][5][22]$a$1679 [7] $memory\csr_file$rdmux[0][5][22]$a$1679 [0] $memory\csr_file$rdmux[0][5][22]$a$1679 [2] $memory\csr_file$rdmux[0][5][22]$a$1679 [0] $memory\csr_file$rdmux[0][5][22]$a$1679 [0] $memory\csr_file$rdmux[0][5][22]$a$1679 [0] $memory\csr_file$rdmux[0][5][22]$a$1679 [2] $memory\csr_file$rdmux[0][5][22]$a$1679 [0] $memory\csr_file$rdmux[0][5][22]$a$1679 [0] $memory\csr_file$rdmux[0][5][22]$a$1679 [2] $memory\csr_file$rdmux[0][5][22]$a$1679 [7] 3'000 $memory\csr_file$rdmux[0][5][22]$a$1679 [0] $memory\csr_file$rdmux[0][5][22]$a$1679 [0] 1'0 $memory\csr_file$rdmux[0][5][22]$a$1679 [2] $memory\csr_file$rdmux[0][5][22]$a$1679 [0] }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][19]$1765:
      Old ports: A=$memory\csr_file$rdmux[0][6][19]$a$1766, B=$memory\csr_file$rdmux[0][6][19]$b$1767, Y=$memory\csr_file$rdmux[0][5][9]$b$1641
      New ports: A={ $memory\csr_file$rdmux[0][6][19]$a$1766 [24] $memory\csr_file$rdmux[0][6][19]$a$1766 [24] $memory\csr_file$rdmux[0][6][19]$a$1766 [24] $memory\csr_file$rdmux[0][6][19]$a$1766 [5] $memory\csr_file$rdmux[0][6][19]$a$1766 [5] 2'00 $memory\csr_file$rdmux[0][6][19]$a$1766 [5] $memory\csr_file$rdmux[0][6][19]$a$1766 [5] 1'1 }, B={ 1'1 $memory\csr_file$rdmux[0][6][19]$b$1767 [7] 2'01 $memory\csr_file$rdmux[0][6][19]$b$1767 [14] $memory\csr_file$rdmux[0][6][19]$b$1767 [14] $memory\csr_file$rdmux[0][6][19]$b$1767 [7] $memory\csr_file$rdmux[0][6][19]$b$1767 [7] 2'00 }, Y={ $memory\csr_file$rdmux[0][5][9]$b$1641 [26:23] $memory\csr_file$rdmux[0][5][9]$b$1641 [16] $memory\csr_file$rdmux[0][5][9]$b$1641 [14:13] $memory\csr_file$rdmux[0][5][9]$b$1641 [7] $memory\csr_file$rdmux[0][5][9]$b$1641 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][5][9]$b$1641 [31:27] $memory\csr_file$rdmux[0][5][9]$b$1641 [22:17] $memory\csr_file$rdmux[0][5][9]$b$1641 [15] $memory\csr_file$rdmux[0][5][9]$b$1641 [12:8] $memory\csr_file$rdmux[0][5][9]$b$1641 [6] $memory\csr_file$rdmux[0][5][9]$b$1641 [3:0] } = { $memory\csr_file$rdmux[0][5][9]$b$1641 [26:25] $memory\csr_file$rdmux[0][5][9]$b$1641 [26] $memory\csr_file$rdmux[0][5][9]$b$1641 [26] $memory\csr_file$rdmux[0][5][9]$b$1641 [26] $memory\csr_file$rdmux[0][5][9]$b$1641 [7] $memory\csr_file$rdmux[0][5][9]$b$1641 [5] $memory\csr_file$rdmux[0][5][9]$b$1641 [5] 2'01 $memory\csr_file$rdmux[0][5][9]$b$1641 [16] $memory\csr_file$rdmux[0][5][9]$b$1641 [14] 10'0011100011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][4]$1720:
      Old ports: A=$memory\csr_file$rdmux[0][6][4]$a$1721, B=$memory\csr_file$rdmux[0][6][4]$b$1722, Y=$memory\csr_file$rdmux[0][5][2]$a$1619
      New ports: A={ 1'1 $memory\csr_file$rdmux[0][6][4]$a$1721 [5] 1'1 $memory\csr_file$rdmux[0][6][4]$a$1721 [5:4] 1'0 }, B={ $memory\csr_file$rdmux[0][6][4]$b$1722 [18] $memory\csr_file$rdmux[0][6][4]$b$1722 [18] $memory\csr_file$rdmux[0][6][4]$b$1722 [2] 1'1 $memory\csr_file$rdmux[0][6][4]$b$1722 [2] $memory\csr_file$rdmux[0][6][4]$b$1722 [2] }, Y={ $memory\csr_file$rdmux[0][5][2]$a$1619 [21] $memory\csr_file$rdmux[0][5][2]$a$1619 [18] $memory\csr_file$rdmux[0][5][2]$a$1619 [9] $memory\csr_file$rdmux[0][5][2]$a$1619 [5:4] $memory\csr_file$rdmux[0][5][2]$a$1619 [2] }
      New connections: { $memory\csr_file$rdmux[0][5][2]$a$1619 [31:22] $memory\csr_file$rdmux[0][5][2]$a$1619 [20:19] $memory\csr_file$rdmux[0][5][2]$a$1619 [17:10] $memory\csr_file$rdmux[0][5][2]$a$1619 [8:6] $memory\csr_file$rdmux[0][5][2]$a$1619 [3] $memory\csr_file$rdmux[0][5][2]$a$1619 [1:0] } = { $memory\csr_file$rdmux[0][5][2]$a$1619 [18] $memory\csr_file$rdmux[0][5][2]$a$1619 [21] $memory\csr_file$rdmux[0][5][2]$a$1619 [18] $memory\csr_file$rdmux[0][5][2]$a$1619 [18] $memory\csr_file$rdmux[0][5][2]$a$1619 [18] $memory\csr_file$rdmux[0][5][2]$a$1619 [18] $memory\csr_file$rdmux[0][5][2]$a$1619 [21] 1'0 $memory\csr_file$rdmux[0][5][2]$a$1619 [18] $memory\csr_file$rdmux[0][5][2]$a$1619 [21] $memory\csr_file$rdmux[0][5][2]$a$1619 [18] 5'00000 $memory\csr_file$rdmux[0][5][2]$a$1619 [5] 2'00 $memory\csr_file$rdmux[0][5][2]$a$1619 [4] $memory\csr_file$rdmux[0][5][2]$a$1619 [4] $memory\csr_file$rdmux[0][5][2]$a$1619 [4] 4'0011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][0]$1708:
      Old ports: A=$memory\csr_file$rdmux[0][6][0]$a$1709, B=$memory\csr_file$rdmux[0][6][0]$b$1710, Y=$memory\csr_file$rdmux[0][5][0]$a$1613
      New ports: A={ 1'0 $memory\csr_file$rdmux[0][6][0]$a$1709 [2] $memory\csr_file$rdmux[0][6][0]$a$1709 [2] 2'10 $memory\csr_file$rdmux[0][6][0]$a$1709 [2] }, B={ $memory\csr_file$rdmux[0][6][0]$b$1710 [4] 1'0 $memory\csr_file$rdmux[0][6][0]$b$1710 [4] $memory\csr_file$rdmux[0][6][0]$b$1710 [4] $memory\csr_file$rdmux[0][6][0]$b$1710 [2] $memory\csr_file$rdmux[0][6][0]$b$1710 [2] }, Y={ $memory\csr_file$rdmux[0][5][0]$a$1613 [16] $memory\csr_file$rdmux[0][5][0]$a$1613 [12] $memory\csr_file$rdmux[0][5][0]$a$1613 [8] $memory\csr_file$rdmux[0][5][0]$a$1613 [4:2] }
      New connections: { $memory\csr_file$rdmux[0][5][0]$a$1613 [31:17] $memory\csr_file$rdmux[0][5][0]$a$1613 [15:13] $memory\csr_file$rdmux[0][5][0]$a$1613 [11:9] $memory\csr_file$rdmux[0][5][0]$a$1613 [7:5] $memory\csr_file$rdmux[0][5][0]$a$1613 [1:0] } = { 1'0 $memory\csr_file$rdmux[0][5][0]$a$1613 [16] 7'0000000 $memory\csr_file$rdmux[0][5][0]$a$1613 [3] 12'000000000000 $memory\csr_file$rdmux[0][5][0]$a$1613 [3:2] 2'11 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][5]$1723:
      Old ports: A=$memory\csr_file$rdmux[0][6][5]$a$1724, B=$memory\csr_file$rdmux[0][6][5]$b$1725, Y=$memory\csr_file$rdmux[0][5][2]$b$1620
      New ports: A={ 1'1 $memory\csr_file$rdmux[0][6][5]$a$1724 [4] $memory\csr_file$rdmux[0][6][5]$a$1724 [13] 2'10 $memory\csr_file$rdmux[0][6][5]$a$1724 [4] }, B={ $memory\csr_file$rdmux[0][6][5]$b$1725 [5] $memory\csr_file$rdmux[0][6][5]$b$1725 [5] 1'1 $memory\csr_file$rdmux[0][6][5]$b$1725 [7] $memory\csr_file$rdmux[0][6][5]$b$1725 [5] 1'0 }, Y={ $memory\csr_file$rdmux[0][5][2]$b$1620 [22] $memory\csr_file$rdmux[0][5][2]$b$1620 [20] $memory\csr_file$rdmux[0][5][2]$b$1620 [13] $memory\csr_file$rdmux[0][5][2]$b$1620 [7] $memory\csr_file$rdmux[0][5][2]$b$1620 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][5][2]$b$1620 [31:23] $memory\csr_file$rdmux[0][5][2]$b$1620 [21] $memory\csr_file$rdmux[0][5][2]$b$1620 [19:14] $memory\csr_file$rdmux[0][5][2]$b$1620 [12:8] $memory\csr_file$rdmux[0][5][2]$b$1620 [6] $memory\csr_file$rdmux[0][5][2]$b$1620 [3:0] } = { 7'1111111 $memory\csr_file$rdmux[0][5][2]$b$1620 [4] $memory\csr_file$rdmux[0][5][2]$b$1620 [20] $memory\csr_file$rdmux[0][5][2]$b$1620 [20] 2'01 $memory\csr_file$rdmux[0][5][2]$b$1620 [4] $memory\csr_file$rdmux[0][5][2]$b$1620 [4] $memory\csr_file$rdmux[0][5][2]$b$1620 [4] 4'0001 $memory\csr_file$rdmux[0][5][2]$b$1620 [7] $memory\csr_file$rdmux[0][5][2]$b$1620 [7] 5'00011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][12]$1744:
      Old ports: A=$memory\csr_file$rdmux[0][6][12]$a$1745, B=$memory\csr_file$rdmux[0][6][12]$b$1746, Y=$memory\csr_file$rdmux[0][5][6]$a$1631
      New ports: A={ $memory\csr_file$rdmux[0][6][12]$a$1745 [13] 1'0 $memory\csr_file$rdmux[0][6][12]$a$1745 [13] $memory\csr_file$rdmux[0][6][12]$a$1745 [4] $memory\csr_file$rdmux[0][6][12]$a$1745 [4] $memory\csr_file$rdmux[0][6][12]$a$1745 [13] 2'10 $memory\csr_file$rdmux[0][6][12]$a$1745 [4] }, B={ $memory\csr_file$rdmux[0][6][12]$b$1746 [24] $memory\csr_file$rdmux[0][6][12]$b$1746 [24] $memory\csr_file$rdmux[0][6][12]$b$1746 [5] 1'0 $memory\csr_file$rdmux[0][6][12]$b$1746 [5] 1'0 $memory\csr_file$rdmux[0][6][12]$b$1746 [5] $memory\csr_file$rdmux[0][6][12]$b$1746 [5] 1'1 }, Y={ $memory\csr_file$rdmux[0][5][6]$a$1631 [25:24] $memory\csr_file$rdmux[0][5][6]$a$1631 [22] $memory\csr_file$rdmux[0][5][6]$a$1631 [16:15] $memory\csr_file$rdmux[0][5][6]$a$1631 [13] $memory\csr_file$rdmux[0][5][6]$a$1631 [8] $memory\csr_file$rdmux[0][5][6]$a$1631 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][5][6]$a$1631 [31:26] $memory\csr_file$rdmux[0][5][6]$a$1631 [23] $memory\csr_file$rdmux[0][5][6]$a$1631 [21:17] $memory\csr_file$rdmux[0][5][6]$a$1631 [14] $memory\csr_file$rdmux[0][5][6]$a$1631 [12:9] $memory\csr_file$rdmux[0][5][6]$a$1631 [7:6] $memory\csr_file$rdmux[0][5][6]$a$1631 [3:0] } = { $memory\csr_file$rdmux[0][5][6]$a$1631 [25] $memory\csr_file$rdmux[0][5][6]$a$1631 [25] $memory\csr_file$rdmux[0][5][6]$a$1631 [25] $memory\csr_file$rdmux[0][5][6]$a$1631 [25] $memory\csr_file$rdmux[0][5][6]$a$1631 [25] $memory\csr_file$rdmux[0][5][6]$a$1631 [25] $memory\csr_file$rdmux[0][5][6]$a$1631 [22] $memory\csr_file$rdmux[0][5][6]$a$1631 [5] $memory\csr_file$rdmux[0][5][6]$a$1631 [15] 2'01 $memory\csr_file$rdmux[0][5][6]$a$1631 [15] 11'00011100011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][15]$1753:
      Old ports: A=$memory\csr_file$rdmux[0][6][15]$a$1754, B=$memory\csr_file$rdmux[0][6][15]$b$1755, Y=$memory\csr_file$rdmux[0][5][7]$b$1635
      New ports: A={ $memory\csr_file$rdmux[0][6][15]$a$1754 [24] $memory\csr_file$rdmux[0][6][15]$a$1754 [24] 1'0 $memory\csr_file$rdmux[0][6][15]$a$1754 [7] $memory\csr_file$rdmux[0][6][15]$a$1754 [7] 1'0 $memory\csr_file$rdmux[0][6][15]$a$1754 [7] 2'01 }, B={ $memory\csr_file$rdmux[0][6][15]$b$1755 [14] 2'01 $memory\csr_file$rdmux[0][6][15]$b$1755 [4] $memory\csr_file$rdmux[0][6][15]$b$1755 [14] $memory\csr_file$rdmux[0][6][15]$b$1755 [14] 1'1 $memory\csr_file$rdmux[0][6][15]$b$1755 [4] $memory\csr_file$rdmux[0][6][15]$b$1755 [4] }, Y={ $memory\csr_file$rdmux[0][5][7]$b$1635 [26] $memory\csr_file$rdmux[0][5][7]$b$1635 [24:23] $memory\csr_file$rdmux[0][5][7]$b$1635 [20] $memory\csr_file$rdmux[0][5][7]$b$1635 [15:14] $memory\csr_file$rdmux[0][5][7]$b$1635 [7] $memory\csr_file$rdmux[0][5][7]$b$1635 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][5][7]$b$1635 [31:27] $memory\csr_file$rdmux[0][5][7]$b$1635 [25] $memory\csr_file$rdmux[0][5][7]$b$1635 [22:21] $memory\csr_file$rdmux[0][5][7]$b$1635 [19:16] $memory\csr_file$rdmux[0][5][7]$b$1635 [13:8] $memory\csr_file$rdmux[0][5][7]$b$1635 [6] $memory\csr_file$rdmux[0][5][7]$b$1635 [3:0] } = { $memory\csr_file$rdmux[0][5][7]$b$1635 [26] $memory\csr_file$rdmux[0][5][7]$b$1635 [24] $memory\csr_file$rdmux[0][5][7]$b$1635 [26] $memory\csr_file$rdmux[0][5][7]$b$1635 [26] $memory\csr_file$rdmux[0][5][7]$b$1635 [26] $memory\csr_file$rdmux[0][5][7]$b$1635 [24] $memory\csr_file$rdmux[0][5][7]$b$1635 [5] $memory\csr_file$rdmux[0][5][7]$b$1635 [5] 2'01 $memory\csr_file$rdmux[0][5][7]$b$1635 [7] $memory\csr_file$rdmux[0][5][7]$b$1635 [7] 5'00011 $memory\csr_file$rdmux[0][5][7]$b$1635 [4] 5'00011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][6]$1726:
      Old ports: A=$memory\csr_file$rdmux[0][6][6]$a$1727, B=$memory\csr_file$rdmux[0][6][6]$b$1728, Y=$memory\csr_file$rdmux[0][5][3]$a$1622
      New ports: A={ 1'0 $memory\csr_file$rdmux[0][6][6]$a$1727 [4] 2'11 $memory\csr_file$rdmux[0][6][6]$a$1727 [5] $memory\csr_file$rdmux[0][6][6]$a$1727 [5:4] 1'0 $memory\csr_file$rdmux[0][6][6]$a$1727 [5:4] 1'0 }, B={ 2'11 $memory\csr_file$rdmux[0][6][6]$b$1728 [2] 2'00 $memory\csr_file$rdmux[0][6][6]$b$1728 [7] $memory\csr_file$rdmux[0][6][6]$b$1728 [7] $memory\csr_file$rdmux[0][6][6]$b$1728 [7] $memory\csr_file$rdmux[0][6][6]$b$1728 [2] 1'0 $memory\csr_file$rdmux[0][6][6]$b$1728 [2] }, Y={ $memory\csr_file$rdmux[0][5][3]$a$1622 [28] $memory\csr_file$rdmux[0][5][3]$a$1622 [25] $memory\csr_file$rdmux[0][5][3]$a$1622 [22:21] $memory\csr_file$rdmux[0][5][3]$a$1622 [15] $memory\csr_file$rdmux[0][5][3]$a$1622 [13] $memory\csr_file$rdmux[0][5][3]$a$1622 [8:7] $memory\csr_file$rdmux[0][5][3]$a$1622 [5:4] $memory\csr_file$rdmux[0][5][3]$a$1622 [2] }
      New connections: { $memory\csr_file$rdmux[0][5][3]$a$1622 [31:29] $memory\csr_file$rdmux[0][5][3]$a$1622 [27:26] $memory\csr_file$rdmux[0][5][3]$a$1622 [24:23] $memory\csr_file$rdmux[0][5][3]$a$1622 [20:16] $memory\csr_file$rdmux[0][5][3]$a$1622 [14] $memory\csr_file$rdmux[0][5][3]$a$1622 [12:9] $memory\csr_file$rdmux[0][5][3]$a$1622 [6] $memory\csr_file$rdmux[0][5][3]$a$1622 [3] $memory\csr_file$rdmux[0][5][3]$a$1622 [1:0] } = { $memory\csr_file$rdmux[0][5][3]$a$1622 [7] $memory\csr_file$rdmux[0][5][3]$a$1622 [7] $memory\csr_file$rdmux[0][5][3]$a$1622 [7] $memory\csr_file$rdmux[0][5][3]$a$1622 [8] $memory\csr_file$rdmux[0][5][3]$a$1622 [8] $memory\csr_file$rdmux[0][5][3]$a$1622 [4] $memory\csr_file$rdmux[0][5][3]$a$1622 [21] $memory\csr_file$rdmux[0][5][3]$a$1622 [4] 1'0 $memory\csr_file$rdmux[0][5][3]$a$1622 [13] $memory\csr_file$rdmux[0][5][3]$a$1622 [15] $memory\csr_file$rdmux[0][5][3]$a$1622 [15] 3'000 $memory\csr_file$rdmux[0][5][3]$a$1622 [8] $memory\csr_file$rdmux[0][5][3]$a$1622 [8] $memory\csr_file$rdmux[0][5][3]$a$1622 [2] $memory\csr_file$rdmux[0][5][3]$a$1622 [2] 2'11 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][7]$1729:
      Old ports: A=$memory\csr_file$rdmux[0][6][7]$a$1730, B=$memory\csr_file$rdmux[0][6][7]$b$1731, Y=$memory\csr_file$rdmux[0][5][3]$b$1623
      New ports: A={ $memory\csr_file$rdmux[0][6][7]$a$1730 [4] $memory\csr_file$rdmux[0][6][7]$a$1730 [4] 1'1 $memory\csr_file$rdmux[0][6][7]$a$1730 [7] 1'1 $memory\csr_file$rdmux[0][6][7]$a$1730 [7] 1'0 $memory\csr_file$rdmux[0][6][7]$a$1730 [4] }, B={ $memory\csr_file$rdmux[0][6][7]$b$1731 [7] $memory\csr_file$rdmux[0][6][7]$b$1731 [5] $memory\csr_file$rdmux[0][6][7]$b$1731 [5] 1'1 $memory\csr_file$rdmux[0][6][7]$b$1731 [7] $memory\csr_file$rdmux[0][6][7]$b$1731 [7] $memory\csr_file$rdmux[0][6][7]$b$1731 [5] 1'0 }, Y={ $memory\csr_file$rdmux[0][5][3]$b$1623 [25] $memory\csr_file$rdmux[0][5][3]$b$1623 [21] $memory\csr_file$rdmux[0][5][3]$b$1623 [15] $memory\csr_file$rdmux[0][5][3]$b$1623 [13] $memory\csr_file$rdmux[0][5][3]$b$1623 [8:7] $memory\csr_file$rdmux[0][5][3]$b$1623 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][5][3]$b$1623 [31:26] $memory\csr_file$rdmux[0][5][3]$b$1623 [24:22] $memory\csr_file$rdmux[0][5][3]$b$1623 [20:16] $memory\csr_file$rdmux[0][5][3]$b$1623 [14] $memory\csr_file$rdmux[0][5][3]$b$1623 [12:9] $memory\csr_file$rdmux[0][5][3]$b$1623 [6] $memory\csr_file$rdmux[0][5][3]$b$1623 [3:0] } = { $memory\csr_file$rdmux[0][5][3]$b$1623 [25] $memory\csr_file$rdmux[0][5][3]$b$1623 [25] $memory\csr_file$rdmux[0][5][3]$b$1623 [25] $memory\csr_file$rdmux[0][5][3]$b$1623 [25] $memory\csr_file$rdmux[0][5][3]$b$1623 [25] $memory\csr_file$rdmux[0][5][3]$b$1623 [25] $memory\csr_file$rdmux[0][5][3]$b$1623 [4] $memory\csr_file$rdmux[0][5][3]$b$1623 [21] $memory\csr_file$rdmux[0][5][3]$b$1623 [21] $memory\csr_file$rdmux[0][5][3]$b$1623 [4] 2'01 $memory\csr_file$rdmux[0][5][3]$b$1623 [15] $memory\csr_file$rdmux[0][5][3]$b$1623 [15] $memory\csr_file$rdmux[0][5][3]$b$1623 [4] 2'00 $memory\csr_file$rdmux[0][5][3]$b$1623 [8] $memory\csr_file$rdmux[0][5][3]$b$1623 [8] 5'00011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][8]$1732:
      Old ports: A=$memory\csr_file$rdmux[0][6][8]$a$1733, B=$memory\csr_file$rdmux[0][6][8]$b$1734, Y=$memory\csr_file$rdmux[0][5][4]$a$1625
      New ports: A={ $memory\csr_file$rdmux[0][6][8]$a$1733 [2] $memory\csr_file$rdmux[0][6][8]$a$1733 [9] $memory\csr_file$rdmux[0][6][8]$a$1733 [9] 4'0010 $memory\csr_file$rdmux[0][6][8]$a$1733 [2] }, B={ $memory\csr_file$rdmux[0][6][8]$b$1734 [4] $memory\csr_file$rdmux[0][6][8]$b$1734 [7] 2'11 $memory\csr_file$rdmux[0][6][8]$b$1734 [7] 1'0 $memory\csr_file$rdmux[0][6][8]$b$1734 [4] 1'0 }, Y={ $memory\csr_file$rdmux[0][5][4]$a$1625 [24] $memory\csr_file$rdmux[0][5][4]$a$1625 [13] $memory\csr_file$rdmux[0][5][4]$a$1625 [9:7] $memory\csr_file$rdmux[0][5][4]$a$1625 [5:4] $memory\csr_file$rdmux[0][5][4]$a$1625 [2] }
      New connections: { $memory\csr_file$rdmux[0][5][4]$a$1625 [31:25] $memory\csr_file$rdmux[0][5][4]$a$1625 [23:14] $memory\csr_file$rdmux[0][5][4]$a$1625 [12:10] $memory\csr_file$rdmux[0][5][4]$a$1625 [6] $memory\csr_file$rdmux[0][5][4]$a$1625 [3] $memory\csr_file$rdmux[0][5][4]$a$1625 [1:0] } = { $memory\csr_file$rdmux[0][5][4]$a$1625 [9] $memory\csr_file$rdmux[0][5][4]$a$1625 [9] $memory\csr_file$rdmux[0][5][4]$a$1625 [9] $memory\csr_file$rdmux[0][5][4]$a$1625 [9] 3'111 $memory\csr_file$rdmux[0][5][4]$a$1625 [7] $memory\csr_file$rdmux[0][5][4]$a$1625 [7] 3'000 $memory\csr_file$rdmux[0][5][4]$a$1625 [9] 6'000000 $memory\csr_file$rdmux[0][5][4]$a$1625 [9] $memory\csr_file$rdmux[0][5][4]$a$1625 [2] $memory\csr_file$rdmux[0][5][4]$a$1625 [2] 2'11 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][9]$1735:
      Old ports: A=$memory\csr_file$rdmux[0][6][9]$a$1736, B=$memory\csr_file$rdmux[0][6][9]$b$1737, Y=$memory\csr_file$rdmux[0][5][4]$b$1626
      New ports: A={ $memory\csr_file$rdmux[0][6][9]$a$1736 [14] 1'1 $memory\csr_file$rdmux[0][6][9]$a$1736 [4] 1'1 $memory\csr_file$rdmux[0][6][9]$a$1736 [14] $memory\csr_file$rdmux[0][6][9]$a$1736 [14] 1'0 $memory\csr_file$rdmux[0][6][9]$a$1736 [4] $memory\csr_file$rdmux[0][6][9]$a$1736 [4] $memory\csr_file$rdmux[0][6][9]$a$1736 [4] }, B={ $memory\csr_file$rdmux[0][6][9]$b$1737 [13] $memory\csr_file$rdmux[0][6][9]$b$1737 [13] $memory\csr_file$rdmux[0][6][9]$b$1737 [13] $memory\csr_file$rdmux[0][6][9]$b$1737 [4] $memory\csr_file$rdmux[0][6][9]$b$1737 [4] 1'0 $memory\csr_file$rdmux[0][6][9]$b$1737 [13] 2'10 $memory\csr_file$rdmux[0][6][9]$b$1737 [4] }, Y={ $memory\csr_file$rdmux[0][5][4]$b$1626 [26] $memory\csr_file$rdmux[0][5][4]$b$1626 [23:22] $memory\csr_file$rdmux[0][5][4]$b$1626 [16:13] $memory\csr_file$rdmux[0][5][4]$b$1626 [7] $memory\csr_file$rdmux[0][5][4]$b$1626 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][5][4]$b$1626 [31:27] $memory\csr_file$rdmux[0][5][4]$b$1626 [25:24] $memory\csr_file$rdmux[0][5][4]$b$1626 [21:17] $memory\csr_file$rdmux[0][5][4]$b$1626 [12:8] $memory\csr_file$rdmux[0][5][4]$b$1626 [6] $memory\csr_file$rdmux[0][5][4]$b$1626 [3:0] } = { $memory\csr_file$rdmux[0][5][4]$b$1626 [26] $memory\csr_file$rdmux[0][5][4]$b$1626 [13] $memory\csr_file$rdmux[0][5][4]$b$1626 [26] $memory\csr_file$rdmux[0][5][4]$b$1626 [26] $memory\csr_file$rdmux[0][5][4]$b$1626 [26] $memory\csr_file$rdmux[0][5][4]$b$1626 [13] 1'0 $memory\csr_file$rdmux[0][5][4]$b$1626 [5:4] 2'01 $memory\csr_file$rdmux[0][5][4]$b$1626 [16] 10'0011100011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][17]$1759:
      Old ports: A=$memory\csr_file$rdmux[0][6][17]$a$1760, B=$memory\csr_file$rdmux[0][6][17]$b$1761, Y=$memory\csr_file$rdmux[0][5][8]$b$1638
      New ports: A={ $memory\csr_file$rdmux[0][6][17]$a$1760 [13] $memory\csr_file$rdmux[0][6][17]$a$1760 [13] $memory\csr_file$rdmux[0][6][17]$a$1760 [4] $memory\csr_file$rdmux[0][6][17]$a$1760 [4] 1'0 $memory\csr_file$rdmux[0][6][17]$a$1760 [13] 3'010 $memory\csr_file$rdmux[0][6][17]$a$1760 [4] }, B={ 2'01 $memory\csr_file$rdmux[0][6][17]$b$1761 [12] $memory\csr_file$rdmux[0][6][17]$b$1761 [5] 1'1 $memory\csr_file$rdmux[0][6][17]$b$1761 [12] $memory\csr_file$rdmux[0][6][17]$b$1761 [12] 1'0 $memory\csr_file$rdmux[0][6][17]$b$1761 [5] 1'1 }, Y={ $memory\csr_file$rdmux[0][5][8]$b$1638 [28] $memory\csr_file$rdmux[0][5][8]$b$1638 [22] $memory\csr_file$rdmux[0][5][8]$b$1638 [16:12] $memory\csr_file$rdmux[0][5][8]$b$1638 [7] $memory\csr_file$rdmux[0][5][8]$b$1638 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][5][8]$b$1638 [31:29] $memory\csr_file$rdmux[0][5][8]$b$1638 [27:23] $memory\csr_file$rdmux[0][5][8]$b$1638 [21:17] $memory\csr_file$rdmux[0][5][8]$b$1638 [11:8] $memory\csr_file$rdmux[0][5][8]$b$1638 [6] $memory\csr_file$rdmux[0][5][8]$b$1638 [3:0] } = { $memory\csr_file$rdmux[0][5][8]$b$1638 [28] $memory\csr_file$rdmux[0][5][8]$b$1638 [28] $memory\csr_file$rdmux[0][5][8]$b$1638 [28] $memory\csr_file$rdmux[0][5][8]$b$1638 [13] $memory\csr_file$rdmux[0][5][8]$b$1638 [13] $memory\csr_file$rdmux[0][5][8]$b$1638 [13:12] $memory\csr_file$rdmux[0][5][8]$b$1638 [22] $memory\csr_file$rdmux[0][5][8]$b$1638 [14] $memory\csr_file$rdmux[0][5][8]$b$1638 [16] 2'01 $memory\csr_file$rdmux[0][5][8]$b$1638 [4] 9'011100011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][16]$1756:
      Old ports: A=$memory\csr_file$rdmux[0][6][16]$a$1757, B=$memory\csr_file$rdmux[0][6][16]$b$1758, Y=$memory\csr_file$rdmux[0][5][8]$a$1637
      New ports: A={ 2'11 $memory\csr_file$rdmux[0][6][16]$a$1757 [4] $memory\csr_file$rdmux[0][6][16]$a$1757 [7] 2'00 $memory\csr_file$rdmux[0][6][16]$a$1757 [7] $memory\csr_file$rdmux[0][6][16]$a$1757 [7] 1'0 $memory\csr_file$rdmux[0][6][16]$a$1757 [4] }, B={ $memory\csr_file$rdmux[0][6][16]$b$1758 [14] 4'0011 $memory\csr_file$rdmux[0][6][16]$b$1758 [14] 1'0 $memory\csr_file$rdmux[0][6][16]$b$1758 [4] $memory\csr_file$rdmux[0][6][16]$b$1758 [4] $memory\csr_file$rdmux[0][6][16]$b$1758 [4] }, Y={ $memory\csr_file$rdmux[0][5][8]$a$1637 [26:23] $memory\csr_file$rdmux[0][5][8]$a$1637 [16] $memory\csr_file$rdmux[0][5][8]$a$1637 [14:13] $memory\csr_file$rdmux[0][5][8]$a$1637 [7] $memory\csr_file$rdmux[0][5][8]$a$1637 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][5][8]$a$1637 [31:27] $memory\csr_file$rdmux[0][5][8]$a$1637 [22:17] $memory\csr_file$rdmux[0][5][8]$a$1637 [15] $memory\csr_file$rdmux[0][5][8]$a$1637 [12:8] $memory\csr_file$rdmux[0][5][8]$a$1637 [6] $memory\csr_file$rdmux[0][5][8]$a$1637 [3:0] } = { $memory\csr_file$rdmux[0][5][8]$a$1637 [26:25] $memory\csr_file$rdmux[0][5][8]$a$1637 [26] $memory\csr_file$rdmux[0][5][8]$a$1637 [26] $memory\csr_file$rdmux[0][5][8]$a$1637 [26] $memory\csr_file$rdmux[0][5][8]$a$1637 [7] $memory\csr_file$rdmux[0][5][8]$a$1637 [5] $memory\csr_file$rdmux[0][5][8]$a$1637 [5] 2'01 $memory\csr_file$rdmux[0][5][8]$a$1637 [16] $memory\csr_file$rdmux[0][5][8]$a$1637 [14] 10'0011100011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][10]$1738:
      Old ports: A=$memory\csr_file$rdmux[0][6][10]$a$1739, B=$memory\csr_file$rdmux[0][6][10]$b$1740, Y=$memory\csr_file$rdmux[0][5][5]$a$1628
      New ports: A={ $memory\csr_file$rdmux[0][6][10]$a$1739 [24] $memory\csr_file$rdmux[0][6][10]$a$1739 [24] $memory\csr_file$rdmux[0][6][10]$a$1739 [24] $memory\csr_file$rdmux[0][6][10]$a$1739 [24] $memory\csr_file$rdmux[0][6][10]$a$1739 [5] $memory\csr_file$rdmux[0][6][10]$a$1739 [5] 1'0 $memory\csr_file$rdmux[0][6][10]$a$1739 [5] 2'10 $memory\csr_file$rdmux[0][6][10]$a$1739 [5] 1'1 }, B={ 1'1 $memory\csr_file$rdmux[0][6][10]$b$1740 [7] $memory\csr_file$rdmux[0][6][10]$b$1740 [5] 4'0011 $memory\csr_file$rdmux[0][6][10]$b$1740 [7] $memory\csr_file$rdmux[0][6][10]$b$1740 [7] $memory\csr_file$rdmux[0][6][10]$b$1740 [5] $memory\csr_file$rdmux[0][6][10]$b$1740 [5] 1'0 }, Y={ $memory\csr_file$rdmux[0][5][5]$a$1628 [27:24] $memory\csr_file$rdmux[0][5][5]$a$1628 [20] $memory\csr_file$rdmux[0][5][5]$a$1628 [15:14] $memory\csr_file$rdmux[0][5][5]$a$1628 [8:4] }
      New connections: { $memory\csr_file$rdmux[0][5][5]$a$1628 [31:28] $memory\csr_file$rdmux[0][5][5]$a$1628 [23:21] $memory\csr_file$rdmux[0][5][5]$a$1628 [19:16] $memory\csr_file$rdmux[0][5][5]$a$1628 [13:9] $memory\csr_file$rdmux[0][5][5]$a$1628 [3:0] } = { $memory\csr_file$rdmux[0][5][5]$a$1628 [26] $memory\csr_file$rdmux[0][5][5]$a$1628 [24] $memory\csr_file$rdmux[0][5][5]$a$1628 [26] $memory\csr_file$rdmux[0][5][5]$a$1628 [26] $memory\csr_file$rdmux[0][5][5]$a$1628 [15] $memory\csr_file$rdmux[0][5][5]$a$1628 [5] $memory\csr_file$rdmux[0][5][5]$a$1628 [5] 2'01 $memory\csr_file$rdmux[0][5][5]$a$1628 [15:14] $memory\csr_file$rdmux[0][5][5]$a$1628 [6] $memory\csr_file$rdmux[0][5][5]$a$1628 [6] $memory\csr_file$rdmux[0][5][5]$a$1628 [6] 6'110011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][11]$1741:
      Old ports: A=$memory\csr_file$rdmux[0][6][11]$a$1742, B=$memory\csr_file$rdmux[0][6][11]$b$1743, Y=$memory\csr_file$rdmux[0][5][5]$b$1629
      New ports: A={ 2'11 $memory\csr_file$rdmux[0][6][11]$a$1742 [4] $memory\csr_file$rdmux[0][6][11]$a$1742 [7] 2'00 $memory\csr_file$rdmux[0][6][11]$a$1742 [7] $memory\csr_file$rdmux[0][6][11]$a$1742 [7] 1'0 $memory\csr_file$rdmux[0][6][11]$a$1742 [4] }, B={ $memory\csr_file$rdmux[0][6][11]$b$1743 [14] 4'0011 $memory\csr_file$rdmux[0][6][11]$b$1743 [14] 1'0 $memory\csr_file$rdmux[0][6][11]$b$1743 [4] $memory\csr_file$rdmux[0][6][11]$b$1743 [4] $memory\csr_file$rdmux[0][6][11]$b$1743 [4] }, Y={ $memory\csr_file$rdmux[0][5][5]$b$1629 [26:23] $memory\csr_file$rdmux[0][5][5]$b$1629 [16] $memory\csr_file$rdmux[0][5][5]$b$1629 [14:13] $memory\csr_file$rdmux[0][5][5]$b$1629 [7] $memory\csr_file$rdmux[0][5][5]$b$1629 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][5][5]$b$1629 [31:27] $memory\csr_file$rdmux[0][5][5]$b$1629 [22:17] $memory\csr_file$rdmux[0][5][5]$b$1629 [15] $memory\csr_file$rdmux[0][5][5]$b$1629 [12:8] $memory\csr_file$rdmux[0][5][5]$b$1629 [6] $memory\csr_file$rdmux[0][5][5]$b$1629 [3:0] } = { $memory\csr_file$rdmux[0][5][5]$b$1629 [26:25] $memory\csr_file$rdmux[0][5][5]$b$1629 [26] $memory\csr_file$rdmux[0][5][5]$b$1629 [26] $memory\csr_file$rdmux[0][5][5]$b$1629 [26] $memory\csr_file$rdmux[0][5][5]$b$1629 [7] $memory\csr_file$rdmux[0][5][5]$b$1629 [5] $memory\csr_file$rdmux[0][5][5]$b$1629 [5] 2'01 $memory\csr_file$rdmux[0][5][5]$b$1629 [16] $memory\csr_file$rdmux[0][5][5]$b$1629 [14] 10'0011100011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][13]$1747:
      Old ports: A=$memory\csr_file$rdmux[0][6][13]$a$1748, B=$memory\csr_file$rdmux[0][6][13]$b$1749, Y=$memory\csr_file$rdmux[0][5][6]$b$1632
      New ports: A={ 1'0 $memory\csr_file$rdmux[0][6][13]$a$1748 [15] $memory\csr_file$rdmux[0][6][13]$a$1748 [15] $memory\csr_file$rdmux[0][6][13]$a$1748 [4] $memory\csr_file$rdmux[0][6][13]$a$1748 [15] 4'1001 $memory\csr_file$rdmux[0][6][13]$a$1748 [4] $memory\csr_file$rdmux[0][6][13]$a$1748 [4] }, B={ $memory\csr_file$rdmux[0][6][13]$b$1749 [7] $memory\csr_file$rdmux[0][6][13]$b$1749 [7] 2'11 $memory\csr_file$rdmux[0][6][13]$b$1749 [4] $memory\csr_file$rdmux[0][6][13]$b$1749 [4] 1'1 $memory\csr_file$rdmux[0][6][13]$b$1749 [4] $memory\csr_file$rdmux[0][6][13]$b$1749 [7] 1'0 $memory\csr_file$rdmux[0][6][13]$b$1749 [4] }, Y={ $memory\csr_file$rdmux[0][5][6]$b$1632 [30] $memory\csr_file$rdmux[0][5][6]$b$1632 [28] $memory\csr_file$rdmux[0][5][6]$b$1632 [26] $memory\csr_file$rdmux[0][5][6]$b$1632 [22] $memory\csr_file$rdmux[0][5][6]$b$1632 [15:12] $memory\csr_file$rdmux[0][5][6]$b$1632 [7] $memory\csr_file$rdmux[0][5][6]$b$1632 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][5][6]$b$1632 [31] $memory\csr_file$rdmux[0][5][6]$b$1632 [29] $memory\csr_file$rdmux[0][5][6]$b$1632 [27] $memory\csr_file$rdmux[0][5][6]$b$1632 [25:23] $memory\csr_file$rdmux[0][5][6]$b$1632 [21:16] $memory\csr_file$rdmux[0][5][6]$b$1632 [11:8] $memory\csr_file$rdmux[0][5][6]$b$1632 [6] $memory\csr_file$rdmux[0][5][6]$b$1632 [3:0] } = { $memory\csr_file$rdmux[0][5][6]$b$1632 [28] $memory\csr_file$rdmux[0][5][6]$b$1632 [28] $memory\csr_file$rdmux[0][5][6]$b$1632 [26] $memory\csr_file$rdmux[0][5][6]$b$1632 [13:12] 1'1 $memory\csr_file$rdmux[0][5][6]$b$1632 [4] $memory\csr_file$rdmux[0][5][6]$b$1632 [4] 2'01 $memory\csr_file$rdmux[0][5][6]$b$1632 [14] $memory\csr_file$rdmux[0][5][6]$b$1632 [14] 9'011100011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][14]$1750:
      Old ports: A=$memory\csr_file$rdmux[0][6][14]$a$1751, B=$memory\csr_file$rdmux[0][6][14]$b$1752, Y=$memory\csr_file$rdmux[0][5][7]$a$1634
      New ports: A={ $memory\csr_file$rdmux[0][6][14]$a$1751 [24] $memory\csr_file$rdmux[0][6][14]$a$1751 [24] $memory\csr_file$rdmux[0][6][14]$a$1751 [24] $memory\csr_file$rdmux[0][6][14]$a$1751 [5] $memory\csr_file$rdmux[0][6][14]$a$1751 [5] 2'00 $memory\csr_file$rdmux[0][6][14]$a$1751 [5] 1'1 $memory\csr_file$rdmux[0][6][14]$a$1751 [5] 1'1 }, B={ 1'1 $memory\csr_file$rdmux[0][6][14]$b$1752 [7] 3'010 $memory\csr_file$rdmux[0][6][14]$b$1752 [5] $memory\csr_file$rdmux[0][6][14]$b$1752 [7] $memory\csr_file$rdmux[0][6][14]$b$1752 [7] $memory\csr_file$rdmux[0][6][14]$b$1752 [7] $memory\csr_file$rdmux[0][6][14]$b$1752 [5] 1'0 }, Y={ $memory\csr_file$rdmux[0][5][7]$a$1634 [26:24] $memory\csr_file$rdmux[0][5][7]$a$1634 [22] $memory\csr_file$rdmux[0][5][7]$a$1634 [20] $memory\csr_file$rdmux[0][5][7]$a$1634 [16] $memory\csr_file$rdmux[0][5][7]$a$1634 [13] $memory\csr_file$rdmux[0][5][7]$a$1634 [8:7] $memory\csr_file$rdmux[0][5][7]$a$1634 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][5][7]$a$1634 [31:27] $memory\csr_file$rdmux[0][5][7]$a$1634 [23] $memory\csr_file$rdmux[0][5][7]$a$1634 [21] $memory\csr_file$rdmux[0][5][7]$a$1634 [19:17] $memory\csr_file$rdmux[0][5][7]$a$1634 [15:14] $memory\csr_file$rdmux[0][5][7]$a$1634 [12:9] $memory\csr_file$rdmux[0][5][7]$a$1634 [6] $memory\csr_file$rdmux[0][5][7]$a$1634 [3:0] } = { $memory\csr_file$rdmux[0][5][7]$a$1634 [26:25] $memory\csr_file$rdmux[0][5][7]$a$1634 [26] $memory\csr_file$rdmux[0][5][7]$a$1634 [26] $memory\csr_file$rdmux[0][5][7]$a$1634 [26] $memory\csr_file$rdmux[0][5][7]$a$1634 [22] $memory\csr_file$rdmux[0][5][7]$a$1634 [5] 2'01 $memory\csr_file$rdmux[0][5][7]$a$1634 [5] $memory\csr_file$rdmux[0][5][7]$a$1634 [5] 4'0001 $memory\csr_file$rdmux[0][5][7]$a$1634 [7] 5'00011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][18]$1762:
      Old ports: A=$memory\csr_file$rdmux[0][6][18]$a$1763, B=$memory\csr_file$rdmux[0][6][18]$b$1764, Y=$memory\csr_file$rdmux[0][5][9]$a$1640
      New ports: A={ $memory\csr_file$rdmux[0][6][18]$a$1763 [24] $memory\csr_file$rdmux[0][6][18]$a$1763 [24] $memory\csr_file$rdmux[0][6][18]$a$1763 [24] $memory\csr_file$rdmux[0][6][18]$a$1763 [5] $memory\csr_file$rdmux[0][6][18]$a$1763 [5] 2'00 $memory\csr_file$rdmux[0][6][18]$a$1763 [5] 1'1 $memory\csr_file$rdmux[0][6][18]$a$1763 [5] 1'1 }, B={ 1'1 $memory\csr_file$rdmux[0][6][18]$b$1764 [7] 3'010 $memory\csr_file$rdmux[0][6][18]$b$1764 [5] $memory\csr_file$rdmux[0][6][18]$b$1764 [7] $memory\csr_file$rdmux[0][6][18]$b$1764 [7] $memory\csr_file$rdmux[0][6][18]$b$1764 [7] $memory\csr_file$rdmux[0][6][18]$b$1764 [5] 1'0 }, Y={ $memory\csr_file$rdmux[0][5][9]$a$1640 [26:24] $memory\csr_file$rdmux[0][5][9]$a$1640 [22] $memory\csr_file$rdmux[0][5][9]$a$1640 [20] $memory\csr_file$rdmux[0][5][9]$a$1640 [16] $memory\csr_file$rdmux[0][5][9]$a$1640 [13] $memory\csr_file$rdmux[0][5][9]$a$1640 [8:7] $memory\csr_file$rdmux[0][5][9]$a$1640 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][5][9]$a$1640 [31:27] $memory\csr_file$rdmux[0][5][9]$a$1640 [23] $memory\csr_file$rdmux[0][5][9]$a$1640 [21] $memory\csr_file$rdmux[0][5][9]$a$1640 [19:17] $memory\csr_file$rdmux[0][5][9]$a$1640 [15:14] $memory\csr_file$rdmux[0][5][9]$a$1640 [12:9] $memory\csr_file$rdmux[0][5][9]$a$1640 [6] $memory\csr_file$rdmux[0][5][9]$a$1640 [3:0] } = { $memory\csr_file$rdmux[0][5][9]$a$1640 [26:25] $memory\csr_file$rdmux[0][5][9]$a$1640 [26] $memory\csr_file$rdmux[0][5][9]$a$1640 [26] $memory\csr_file$rdmux[0][5][9]$a$1640 [26] $memory\csr_file$rdmux[0][5][9]$a$1640 [22] $memory\csr_file$rdmux[0][5][9]$a$1640 [5] 2'01 $memory\csr_file$rdmux[0][5][9]$a$1640 [5] $memory\csr_file$rdmux[0][5][9]$a$1640 [5] 4'0001 $memory\csr_file$rdmux[0][5][9]$a$1640 [7] 5'00011 }
  Optimizing cells in module \csr_file.
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][5][19]$1669:
      Old ports: A=$memory\csr_file$rdmux[0][5][19]$a$1670, B=$memory\csr_file$rdmux[0][5][19]$b$1671, Y=$memory\csr_file$rdmux[0][4][9]$b$1593
      New ports: A={ $memory\csr_file$rdmux[0][5][19]$a$1670 [9] $memory\csr_file$rdmux[0][5][19]$a$1670 [22] $memory\csr_file$rdmux[0][5][19]$a$1670 [23:22] $memory\csr_file$rdmux[0][5][19]$a$1670 [20] $memory\csr_file$rdmux[0][5][19]$a$1670 [15] $memory\csr_file$rdmux[0][5][19]$a$1670 [2] $memory\csr_file$rdmux[0][5][19]$a$1670 [9:8] $memory\csr_file$rdmux[0][5][19]$a$1670 [9:4] $memory\csr_file$rdmux[0][5][19]$a$1670 [2] }, B={ 2'00 $memory\csr_file$rdmux[0][5][19]$b$1671 [8] $memory\csr_file$rdmux[0][5][19]$b$1671 [22] 3'011 $memory\csr_file$rdmux[0][5][19]$b$1671 [8] $memory\csr_file$rdmux[0][5][19]$b$1671 [10] 1'1 $memory\csr_file$rdmux[0][5][19]$b$1671 [8:7] 4'0000 }, Y={ $memory\csr_file$rdmux[0][4][9]$b$1593 [27] $memory\csr_file$rdmux[0][4][9]$b$1593 [25] $memory\csr_file$rdmux[0][4][9]$b$1593 [23:22] $memory\csr_file$rdmux[0][4][9]$b$1593 [20] $memory\csr_file$rdmux[0][4][9]$b$1593 [15] $memory\csr_file$rdmux[0][4][9]$b$1593 [13] $memory\csr_file$rdmux[0][4][9]$b$1593 [11:4] $memory\csr_file$rdmux[0][4][9]$b$1593 [2] }
      New connections: { $memory\csr_file$rdmux[0][4][9]$b$1593 [31:28] $memory\csr_file$rdmux[0][4][9]$b$1593 [26] $memory\csr_file$rdmux[0][4][9]$b$1593 [24] $memory\csr_file$rdmux[0][4][9]$b$1593 [21] $memory\csr_file$rdmux[0][4][9]$b$1593 [19:16] $memory\csr_file$rdmux[0][4][9]$b$1593 [14] $memory\csr_file$rdmux[0][4][9]$b$1593 [12] $memory\csr_file$rdmux[0][4][9]$b$1593 [3] $memory\csr_file$rdmux[0][4][9]$b$1593 [1:0] } = { $memory\csr_file$rdmux[0][4][9]$b$1593 [5] $memory\csr_file$rdmux[0][4][9]$b$1593 [5] $memory\csr_file$rdmux[0][4][9]$b$1593 [5] $memory\csr_file$rdmux[0][4][9]$b$1593 [5] $memory\csr_file$rdmux[0][4][9]$b$1593 [5] 2'00 $memory\csr_file$rdmux[0][4][9]$b$1593 [2] 1'1 $memory\csr_file$rdmux[0][4][9]$b$1593 [5] 1'1 $memory\csr_file$rdmux[0][4][9]$b$1593 [2] $memory\csr_file$rdmux[0][4][9]$b$1593 [6] $memory\csr_file$rdmux[0][4][9]$b$1593 [2] 2'11 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][5][3]$1621:
      Old ports: A=$memory\csr_file$rdmux[0][5][3]$a$1622, B=$memory\csr_file$rdmux[0][5][3]$b$1623, Y=$memory\csr_file$rdmux[0][4][1]$b$1569
      New ports: A={ $memory\csr_file$rdmux[0][5][3]$a$1622 [7] $memory\csr_file$rdmux[0][5][3]$a$1622 [28] $memory\csr_file$rdmux[0][5][3]$a$1622 [8] $memory\csr_file$rdmux[0][5][3]$a$1622 [25] $memory\csr_file$rdmux[0][5][3]$a$1622 [22:21] $memory\csr_file$rdmux[0][5][3]$a$1622 [13] $memory\csr_file$rdmux[0][5][3]$a$1622 [15] 1'0 $memory\csr_file$rdmux[0][5][3]$a$1622 [13] $memory\csr_file$rdmux[0][5][3]$a$1622 [8:7] $memory\csr_file$rdmux[0][5][3]$a$1622 [5:4] $memory\csr_file$rdmux[0][5][3]$a$1622 [2] }, B={ $memory\csr_file$rdmux[0][5][3]$b$1623 [25] $memory\csr_file$rdmux[0][5][3]$b$1623 [25] $memory\csr_file$rdmux[0][5][3]$b$1623 [25] $memory\csr_file$rdmux[0][5][3]$b$1623 [25] $memory\csr_file$rdmux[0][5][3]$b$1623 [21] $memory\csr_file$rdmux[0][5][3]$b$1623 [21] 1'1 $memory\csr_file$rdmux[0][5][3]$b$1623 [15] $memory\csr_file$rdmux[0][5][3]$b$1623 [4] $memory\csr_file$rdmux[0][5][3]$b$1623 [13] $memory\csr_file$rdmux[0][5][3]$b$1623 [8:7] $memory\csr_file$rdmux[0][5][3]$b$1623 [5:4] 1'0 }, Y={ $memory\csr_file$rdmux[0][4][1]$b$1569 [29:28] $memory\csr_file$rdmux[0][4][1]$b$1569 [26:25] $memory\csr_file$rdmux[0][4][1]$b$1569 [22:21] $memory\csr_file$rdmux[0][4][1]$b$1569 [18] $memory\csr_file$rdmux[0][4][1]$b$1569 [15:13] $memory\csr_file$rdmux[0][4][1]$b$1569 [8:7] $memory\csr_file$rdmux[0][4][1]$b$1569 [5:4] $memory\csr_file$rdmux[0][4][1]$b$1569 [2] }
      New connections: { $memory\csr_file$rdmux[0][4][1]$b$1569 [31:30] $memory\csr_file$rdmux[0][4][1]$b$1569 [27] $memory\csr_file$rdmux[0][4][1]$b$1569 [24:23] $memory\csr_file$rdmux[0][4][1]$b$1569 [20:19] $memory\csr_file$rdmux[0][4][1]$b$1569 [17:16] $memory\csr_file$rdmux[0][4][1]$b$1569 [12:9] $memory\csr_file$rdmux[0][4][1]$b$1569 [6] $memory\csr_file$rdmux[0][4][1]$b$1569 [3] $memory\csr_file$rdmux[0][4][1]$b$1569 [1:0] } = { $memory\csr_file$rdmux[0][4][1]$b$1569 [29] $memory\csr_file$rdmux[0][4][1]$b$1569 [29] $memory\csr_file$rdmux[0][4][1]$b$1569 [26] $memory\csr_file$rdmux[0][4][1]$b$1569 [4] $memory\csr_file$rdmux[0][4][1]$b$1569 [21] $memory\csr_file$rdmux[0][4][1]$b$1569 [4] 1'0 $memory\csr_file$rdmux[0][4][1]$b$1569 [15] $memory\csr_file$rdmux[0][4][1]$b$1569 [15] 2'00 $memory\csr_file$rdmux[0][4][1]$b$1569 [8] $memory\csr_file$rdmux[0][4][1]$b$1569 [8] $memory\csr_file$rdmux[0][4][1]$b$1569 [2] $memory\csr_file$rdmux[0][4][1]$b$1569 [2] 2'11 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][5][0]$1612:
      Old ports: A=$memory\csr_file$rdmux[0][5][0]$a$1613, B=$memory\csr_file$rdmux[0][5][0]$b$1614, Y=$memory\csr_file$rdmux[0][4][0]$a$1565
      New ports: A={ $memory\csr_file$rdmux[0][5][0]$a$1613 [16] 3'000 $memory\csr_file$rdmux[0][5][0]$a$1613 [16] 1'0 $memory\csr_file$rdmux[0][5][0]$a$1613 [12] 2'00 $memory\csr_file$rdmux[0][5][0]$a$1613 [8] $memory\csr_file$rdmux[0][5][0]$a$1613 [2] $memory\csr_file$rdmux[0][5][0]$a$1613 [4:2] }, B={ $memory\csr_file$rdmux[0][5][0]$b$1614 [10] $memory\csr_file$rdmux[0][5][0]$b$1614 [8] $memory\csr_file$rdmux[0][5][0]$b$1614 [4] $memory\csr_file$rdmux[0][5][0]$b$1614 [23] 1'1 $memory\csr_file$rdmux[0][5][0]$b$1614 [5] 1'0 $memory\csr_file$rdmux[0][5][0]$b$1614 [10:8] $memory\csr_file$rdmux[0][5][0]$b$1614 [5:4] 2'00 }, Y={ $memory\csr_file$rdmux[0][4][0]$a$1565 [30] $memory\csr_file$rdmux[0][4][0]$a$1565 [25:23] $memory\csr_file$rdmux[0][4][0]$a$1565 [16] $memory\csr_file$rdmux[0][4][0]$a$1565 [13:12] $memory\csr_file$rdmux[0][4][0]$a$1565 [10:8] $memory\csr_file$rdmux[0][4][0]$a$1565 [5:2] }
      New connections: { $memory\csr_file$rdmux[0][4][0]$a$1565 [31] $memory\csr_file$rdmux[0][4][0]$a$1565 [29:26] $memory\csr_file$rdmux[0][4][0]$a$1565 [22:17] $memory\csr_file$rdmux[0][4][0]$a$1565 [15:14] $memory\csr_file$rdmux[0][4][0]$a$1565 [11] $memory\csr_file$rdmux[0][4][0]$a$1565 [7:6] $memory\csr_file$rdmux[0][4][0]$a$1565 [1:0] } = { $memory\csr_file$rdmux[0][4][0]$a$1565 [25] $memory\csr_file$rdmux[0][4][0]$a$1565 [25] $memory\csr_file$rdmux[0][4][0]$a$1565 [25] $memory\csr_file$rdmux[0][4][0]$a$1565 [25] $memory\csr_file$rdmux[0][4][0]$a$1565 [10] $memory\csr_file$rdmux[0][4][0]$a$1565 [3] 1'0 $memory\csr_file$rdmux[0][4][0]$a$1565 [9] 7'0000000 $memory\csr_file$rdmux[0][4][0]$a$1565 [3] 2'11 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][5][13]$1651:
      Old ports: A=$memory\csr_file$rdmux[0][5][13]$a$1652, B=$memory\csr_file$rdmux[0][5][13]$b$1653, Y=$memory\csr_file$rdmux[0][4][6]$b$1584
      New ports: A={ $memory\csr_file$rdmux[0][5][13]$a$1652 [26] $memory\csr_file$rdmux[0][5][13]$a$1652 [26] 1'0 $memory\csr_file$rdmux[0][5][13]$a$1652 [24] $memory\csr_file$rdmux[0][5][13]$a$1652 [10] $memory\csr_file$rdmux[0][5][13]$a$1652 [7] 1'0 $memory\csr_file$rdmux[0][5][13]$a$1652 [7] $memory\csr_file$rdmux[0][5][13]$a$1652 [16] $memory\csr_file$rdmux[0][5][13]$a$1652 [5] $memory\csr_file$rdmux[0][5][13]$a$1652 [7] $memory\csr_file$rdmux[0][5][13]$a$1652 [13] 2'00 $memory\csr_file$rdmux[0][5][13]$a$1652 [10] $memory\csr_file$rdmux[0][5][13]$a$1652 [7] $memory\csr_file$rdmux[0][5][13]$a$1652 [4] $memory\csr_file$rdmux[0][5][13]$a$1652 [7] $memory\csr_file$rdmux[0][5][13]$a$1652 [2] $memory\csr_file$rdmux[0][5][13]$a$1652 [5:4] $memory\csr_file$rdmux[0][5][13]$a$1652 [2] }, B={ 1'0 $memory\csr_file$rdmux[0][5][13]$b$1653 [6] $memory\csr_file$rdmux[0][5][13]$b$1653 [6] 1'0 $memory\csr_file$rdmux[0][5][13]$b$1653 [11] $memory\csr_file$rdmux[0][5][13]$b$1653 [8] $memory\csr_file$rdmux[0][5][13]$b$1653 [8] $memory\csr_file$rdmux[0][5][13]$b$1653 [16] $memory\csr_file$rdmux[0][5][13]$b$1653 [16] $memory\csr_file$rdmux[0][5][13]$b$1653 [12] $memory\csr_file$rdmux[0][5][13]$b$1653 [13] $memory\csr_file$rdmux[0][5][13]$b$1653 [13:11] $memory\csr_file$rdmux[0][5][13]$b$1653 [8] $memory\csr_file$rdmux[0][5][13]$b$1653 [9:8] $memory\csr_file$rdmux[0][5][13]$b$1653 [4] $memory\csr_file$rdmux[0][5][13]$b$1653 [6:4] 1'0 }, Y={ $memory\csr_file$rdmux[0][4][6]$b$1584 [30] $memory\csr_file$rdmux[0][4][6]$b$1584 [26:23] $memory\csr_file$rdmux[0][4][6]$b$1584 [21:20] $memory\csr_file$rdmux[0][4][6]$b$1584 [18] $memory\csr_file$rdmux[0][4][6]$b$1584 [16:4] $memory\csr_file$rdmux[0][4][6]$b$1584 [2] }
      New connections: { $memory\csr_file$rdmux[0][4][6]$b$1584 [31] $memory\csr_file$rdmux[0][4][6]$b$1584 [29:27] $memory\csr_file$rdmux[0][4][6]$b$1584 [22] $memory\csr_file$rdmux[0][4][6]$b$1584 [19] $memory\csr_file$rdmux[0][4][6]$b$1584 [17] $memory\csr_file$rdmux[0][4][6]$b$1584 [3] $memory\csr_file$rdmux[0][4][6]$b$1584 [1:0] } = { 4'0000 $memory\csr_file$rdmux[0][4][6]$b$1584 [11] 1'0 $memory\csr_file$rdmux[0][4][6]$b$1584 [12] 3'011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][5][16]$1660:
      Old ports: A=$memory\csr_file$rdmux[0][5][16]$a$1661, B=$memory\csr_file$rdmux[0][5][16]$b$1662, Y=$memory\csr_file$rdmux[0][4][8]$a$1589
      New ports: A={ $memory\csr_file$rdmux[0][5][16]$a$1661 [30] $memory\csr_file$rdmux[0][5][16]$a$1661 [23] 1'1 $memory\csr_file$rdmux[0][5][16]$a$1661 [5] $memory\csr_file$rdmux[0][5][16]$a$1661 [20] 2'11 $memory\csr_file$rdmux[0][5][16]$a$1661 [7] $memory\csr_file$rdmux[0][5][16]$a$1661 [12] $memory\csr_file$rdmux[0][5][16]$a$1661 [12] 2'01 $memory\csr_file$rdmux[0][5][16]$a$1661 [7] 1'0 $memory\csr_file$rdmux[0][5][16]$a$1661 [5] 2'10 }, B={ 1'0 $memory\csr_file$rdmux[0][5][16]$b$1662 [7] $memory\csr_file$rdmux[0][5][16]$b$1662 [7] $memory\csr_file$rdmux[0][5][16]$b$1662 [7] $memory\csr_file$rdmux[0][5][16]$b$1662 [20] $memory\csr_file$rdmux[0][5][16]$b$1662 [11] $memory\csr_file$rdmux[0][5][16]$b$1662 [16:15] $memory\csr_file$rdmux[0][5][16]$b$1662 [11] 1'0 $memory\csr_file$rdmux[0][5][16]$b$1662 [11] $memory\csr_file$rdmux[0][5][16]$b$1662 [9] $memory\csr_file$rdmux[0][5][16]$b$1662 [7:4] $memory\csr_file$rdmux[0][5][16]$b$1662 [2] }, Y={ $memory\csr_file$rdmux[0][4][8]$a$1589 [30] $memory\csr_file$rdmux[0][4][8]$a$1589 [23:20] $memory\csr_file$rdmux[0][4][8]$a$1589 [17:15] $memory\csr_file$rdmux[0][4][8]$a$1589 [13:11] $memory\csr_file$rdmux[0][4][8]$a$1589 [9] $memory\csr_file$rdmux[0][4][8]$a$1589 [7:4] $memory\csr_file$rdmux[0][4][8]$a$1589 [2] }
      New connections: { $memory\csr_file$rdmux[0][4][8]$a$1589 [31] $memory\csr_file$rdmux[0][4][8]$a$1589 [29:24] $memory\csr_file$rdmux[0][4][8]$a$1589 [19:18] $memory\csr_file$rdmux[0][4][8]$a$1589 [14] $memory\csr_file$rdmux[0][4][8]$a$1589 [10] $memory\csr_file$rdmux[0][4][8]$a$1589 [8] $memory\csr_file$rdmux[0][4][8]$a$1589 [3] $memory\csr_file$rdmux[0][4][8]$a$1589 [1:0] } = { $memory\csr_file$rdmux[0][4][8]$a$1589 [12] $memory\csr_file$rdmux[0][4][8]$a$1589 [12] $memory\csr_file$rdmux[0][4][8]$a$1589 [12] $memory\csr_file$rdmux[0][4][8]$a$1589 [12] $memory\csr_file$rdmux[0][4][8]$a$1589 [12] $memory\csr_file$rdmux[0][4][8]$a$1589 [12] $memory\csr_file$rdmux[0][4][8]$a$1589 [13] 1'0 $memory\csr_file$rdmux[0][4][8]$a$1589 [16] $memory\csr_file$rdmux[0][4][8]$a$1589 [13] $memory\csr_file$rdmux[0][4][8]$a$1589 [4] $memory\csr_file$rdmux[0][4][8]$a$1589 [4] 3'011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][5][21]$1675:
      Old ports: A=$memory\csr_file$rdmux[0][5][21]$a$1676, B=$memory\csr_file$rdmux[0][5][21]$b$1677, Y=$memory\csr_file$rdmux[0][4][10]$b$1596
      New ports: A={ 5'00111 $memory\csr_file$rdmux[0][5][21]$a$1676 [10] $memory\csr_file$rdmux[0][5][21]$a$1676 [20] $memory\csr_file$rdmux[0][5][21]$a$1676 [11:9] 2'10 }, B={ $memory\csr_file$rdmux[0][5][21]$b$1677 [20] $memory\csr_file$rdmux[0][5][21]$b$1677 [25:24] $memory\csr_file$rdmux[0][5][21]$b$1677 [20] $memory\csr_file$rdmux[0][5][21]$b$1677 [22:20] $memory\csr_file$rdmux[0][5][21]$b$1677 [5] 1'1 $memory\csr_file$rdmux[0][5][21]$b$1677 [9] $memory\csr_file$rdmux[0][5][21]$b$1677 [5:4] }, Y={ $memory\csr_file$rdmux[0][4][10]$b$1596 [26:20] $memory\csr_file$rdmux[0][4][10]$b$1596 [11:9] $memory\csr_file$rdmux[0][4][10]$b$1596 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][4][10]$b$1596 [31:27] $memory\csr_file$rdmux[0][4][10]$b$1596 [19:12] $memory\csr_file$rdmux[0][4][10]$b$1596 [8:6] $memory\csr_file$rdmux[0][4][10]$b$1596 [3:0] } = { $memory\csr_file$rdmux[0][4][10]$b$1596 [26] $memory\csr_file$rdmux[0][4][10]$b$1596 [26] $memory\csr_file$rdmux[0][4][10]$b$1596 [26] $memory\csr_file$rdmux[0][4][10]$b$1596 [26] $memory\csr_file$rdmux[0][4][10]$b$1596 [26] 6'011100 $memory\csr_file$rdmux[0][4][10]$b$1596 [5] 1'0 $memory\csr_file$rdmux[0][4][10]$b$1596 [4] 6'000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][5][6]$1630:
      Old ports: A=$memory\csr_file$rdmux[0][5][6]$a$1631, B=$memory\csr_file$rdmux[0][5][6]$b$1632, Y=$memory\csr_file$rdmux[0][4][3]$a$1574
      New ports: A={ $memory\csr_file$rdmux[0][5][6]$a$1631 [25] $memory\csr_file$rdmux[0][5][6]$a$1631 [25] $memory\csr_file$rdmux[0][5][6]$a$1631 [25] $memory\csr_file$rdmux[0][5][6]$a$1631 [25:24] $memory\csr_file$rdmux[0][5][6]$a$1631 [22] $memory\csr_file$rdmux[0][5][6]$a$1631 [22] $memory\csr_file$rdmux[0][5][6]$a$1631 [5] $memory\csr_file$rdmux[0][5][6]$a$1631 [15] $memory\csr_file$rdmux[0][5][6]$a$1631 [15] $memory\csr_file$rdmux[0][5][6]$a$1631 [16:15] 1'0 $memory\csr_file$rdmux[0][5][6]$a$1631 [13] 1'0 $memory\csr_file$rdmux[0][5][6]$a$1631 [8] 1'1 $memory\csr_file$rdmux[0][5][6]$a$1631 [5:4] }, B={ $memory\csr_file$rdmux[0][5][6]$b$1632 [30] $memory\csr_file$rdmux[0][5][6]$b$1632 [28] $memory\csr_file$rdmux[0][5][6]$b$1632 [26] $memory\csr_file$rdmux[0][5][6]$b$1632 [13:12] 1'1 $memory\csr_file$rdmux[0][5][6]$b$1632 [22] $memory\csr_file$rdmux[0][5][6]$b$1632 [4] $memory\csr_file$rdmux[0][5][6]$b$1632 [4] $memory\csr_file$rdmux[0][5][6]$b$1632 [14] $memory\csr_file$rdmux[0][5][6]$b$1632 [14] $memory\csr_file$rdmux[0][5][6]$b$1632 [15:12] 1'1 $memory\csr_file$rdmux[0][5][6]$b$1632 [7] $memory\csr_file$rdmux[0][5][6]$b$1632 [5:4] }, Y={ $memory\csr_file$rdmux[0][4][3]$a$1574 [30] $memory\csr_file$rdmux[0][4][3]$a$1574 [28] $memory\csr_file$rdmux[0][4][3]$a$1574 [26:20] $memory\csr_file$rdmux[0][4][3]$a$1574 [17:12] $memory\csr_file$rdmux[0][4][3]$a$1574 [8:7] $memory\csr_file$rdmux[0][4][3]$a$1574 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][4][3]$a$1574 [31] $memory\csr_file$rdmux[0][4][3]$a$1574 [29] $memory\csr_file$rdmux[0][4][3]$a$1574 [27] $memory\csr_file$rdmux[0][4][3]$a$1574 [19:18] $memory\csr_file$rdmux[0][4][3]$a$1574 [11:9] $memory\csr_file$rdmux[0][4][3]$a$1574 [6] $memory\csr_file$rdmux[0][4][3]$a$1574 [3:0] } = { $memory\csr_file$rdmux[0][4][3]$a$1574 [28] $memory\csr_file$rdmux[0][4][3]$a$1574 [28] $memory\csr_file$rdmux[0][4][3]$a$1574 [26] 10'0101100011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][5][9]$1639:
      Old ports: A=$memory\csr_file$rdmux[0][5][9]$a$1640, B=$memory\csr_file$rdmux[0][5][9]$b$1641, Y=$memory\csr_file$rdmux[0][4][4]$b$1578
      New ports: A={ $memory\csr_file$rdmux[0][5][9]$a$1640 [26:24] $memory\csr_file$rdmux[0][5][9]$a$1640 [22] $memory\csr_file$rdmux[0][5][9]$a$1640 [22] $memory\csr_file$rdmux[0][5][9]$a$1640 [20] $memory\csr_file$rdmux[0][5][9]$a$1640 [5] $memory\csr_file$rdmux[0][5][9]$a$1640 [16] $memory\csr_file$rdmux[0][5][9]$a$1640 [5] 1'0 $memory\csr_file$rdmux[0][5][9]$a$1640 [13] $memory\csr_file$rdmux[0][5][9]$a$1640 [7] $memory\csr_file$rdmux[0][5][9]$a$1640 [8:7] $memory\csr_file$rdmux[0][5][9]$a$1640 [5:4] }, B={ $memory\csr_file$rdmux[0][5][9]$b$1641 [26:23] $memory\csr_file$rdmux[0][5][9]$b$1641 [7] $memory\csr_file$rdmux[0][5][9]$b$1641 [5] $memory\csr_file$rdmux[0][5][9]$b$1641 [16] $memory\csr_file$rdmux[0][5][9]$b$1641 [16] $memory\csr_file$rdmux[0][5][9]$b$1641 [14] $memory\csr_file$rdmux[0][5][9]$b$1641 [14:13] 2'11 $memory\csr_file$rdmux[0][5][9]$b$1641 [7] $memory\csr_file$rdmux[0][5][9]$b$1641 [5:4] }, Y={ $memory\csr_file$rdmux[0][4][4]$b$1578 [26:22] $memory\csr_file$rdmux[0][4][4]$b$1578 [20] $memory\csr_file$rdmux[0][4][4]$b$1578 [17:13] $memory\csr_file$rdmux[0][4][4]$b$1578 [9:7] $memory\csr_file$rdmux[0][4][4]$b$1578 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][4][4]$b$1578 [31:27] $memory\csr_file$rdmux[0][4][4]$b$1578 [21] $memory\csr_file$rdmux[0][4][4]$b$1578 [19:18] $memory\csr_file$rdmux[0][4][4]$b$1578 [12:10] $memory\csr_file$rdmux[0][4][4]$b$1578 [6] $memory\csr_file$rdmux[0][4][4]$b$1578 [3:0] } = { $memory\csr_file$rdmux[0][4][4]$b$1578 [26:25] $memory\csr_file$rdmux[0][4][4]$b$1578 [26] $memory\csr_file$rdmux[0][4][4]$b$1578 [26] $memory\csr_file$rdmux[0][4][4]$b$1578 [26] $memory\csr_file$rdmux[0][4][4]$b$1578 [5] 10'0100100011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][5][18]$1666:
      Old ports: A=$memory\csr_file$rdmux[0][5][18]$a$1667, B=$memory\csr_file$rdmux[0][5][18]$b$1668, Y=$memory\csr_file$rdmux[0][4][9]$a$1592
      New ports: A={ $memory\csr_file$rdmux[0][5][18]$a$1667 [9] $memory\csr_file$rdmux[0][5][18]$a$1667 [15] $memory\csr_file$rdmux[0][5][18]$a$1667 [12] $memory\csr_file$rdmux[0][5][18]$a$1667 [12] $memory\csr_file$rdmux[0][5][18]$a$1667 [5] 1'1 $memory\csr_file$rdmux[0][5][18]$a$1667 [9] 1'1 $memory\csr_file$rdmux[0][5][18]$a$1667 [7] 1'0 $memory\csr_file$rdmux[0][5][18]$a$1667 [5:4] }, B={ $memory\csr_file$rdmux[0][5][18]$b$1668 [17] $memory\csr_file$rdmux[0][5][18]$b$1668 [15:14] $memory\csr_file$rdmux[0][5][18]$b$1668 [12] 1'0 $memory\csr_file$rdmux[0][5][18]$b$1668 [9] $memory\csr_file$rdmux[0][5][18]$b$1668 [9] $memory\csr_file$rdmux[0][5][18]$b$1668 [4] $memory\csr_file$rdmux[0][5][18]$b$1668 [7] $memory\csr_file$rdmux[0][5][18]$b$1668 [5] $memory\csr_file$rdmux[0][5][18]$b$1668 [5:4] }, Y={ $memory\csr_file$rdmux[0][4][9]$a$1592 [17] $memory\csr_file$rdmux[0][4][9]$a$1592 [15:14] $memory\csr_file$rdmux[0][4][9]$a$1592 [12:4] }
      New connections: { $memory\csr_file$rdmux[0][4][9]$a$1592 [31:18] $memory\csr_file$rdmux[0][4][9]$a$1592 [16] $memory\csr_file$rdmux[0][4][9]$a$1592 [13] $memory\csr_file$rdmux[0][4][9]$a$1592 [3:0] } = { $memory\csr_file$rdmux[0][4][9]$a$1592 [5] $memory\csr_file$rdmux[0][4][9]$a$1592 [5] $memory\csr_file$rdmux[0][4][9]$a$1592 [5] $memory\csr_file$rdmux[0][4][9]$a$1592 [5] $memory\csr_file$rdmux[0][4][9]$a$1592 [5] $memory\csr_file$rdmux[0][4][9]$a$1592 [11] $memory\csr_file$rdmux[0][4][9]$a$1592 [11] 1'0 $memory\csr_file$rdmux[0][4][9]$a$1592 [11] $memory\csr_file$rdmux[0][4][9]$a$1592 [11] $memory\csr_file$rdmux[0][4][9]$a$1592 [12] $memory\csr_file$rdmux[0][4][9]$a$1592 [8] 3'011 $memory\csr_file$rdmux[0][4][9]$a$1592 [12] 4'0011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][5][11]$1645:
      Old ports: A=$memory\csr_file$rdmux[0][5][11]$a$1646, B=$memory\csr_file$rdmux[0][5][11]$b$1647, Y=$memory\csr_file$rdmux[0][4][5]$b$1581
      New ports: A={ $memory\csr_file$rdmux[0][5][11]$a$1646 [13] $memory\csr_file$rdmux[0][5][11]$a$1646 [26] $memory\csr_file$rdmux[0][5][11]$a$1646 [26] $memory\csr_file$rdmux[0][5][11]$a$1646 [22] $memory\csr_file$rdmux[0][5][11]$a$1646 [22] $memory\csr_file$rdmux[0][5][11]$a$1646 [4] $memory\csr_file$rdmux[0][5][11]$a$1646 [15] $memory\csr_file$rdmux[0][5][11]$a$1646 [16:15] $memory\csr_file$rdmux[0][5][11]$a$1646 [13] $memory\csr_file$rdmux[0][5][11]$a$1646 [7] $memory\csr_file$rdmux[0][5][11]$a$1646 [7] $memory\csr_file$rdmux[0][5][11]$a$1646 [7] 1'0 $memory\csr_file$rdmux[0][5][11]$a$1646 [5:4] }, B={ 2'11 $memory\csr_file$rdmux[0][5][11]$b$1647 [13] 1'1 $memory\csr_file$rdmux[0][5][11]$b$1647 [22] $memory\csr_file$rdmux[0][5][11]$b$1647 [5] $memory\csr_file$rdmux[0][5][11]$b$1647 [6] $memory\csr_file$rdmux[0][5][11]$b$1647 [6] 1'0 $memory\csr_file$rdmux[0][5][11]$b$1647 [13] 1'1 $memory\csr_file$rdmux[0][5][11]$b$1647 [8:5] 1'0 }, Y={ $memory\csr_file$rdmux[0][4][5]$b$1581 [30] $memory\csr_file$rdmux[0][4][5]$b$1581 [28] $memory\csr_file$rdmux[0][4][5]$b$1581 [26] $memory\csr_file$rdmux[0][4][5]$b$1581 [23:22] $memory\csr_file$rdmux[0][4][5]$b$1581 [20] $memory\csr_file$rdmux[0][4][5]$b$1581 [17:15] $memory\csr_file$rdmux[0][4][5]$b$1581 [13] $memory\csr_file$rdmux[0][4][5]$b$1581 [9:4] }
      New connections: { $memory\csr_file$rdmux[0][4][5]$b$1581 [31] $memory\csr_file$rdmux[0][4][5]$b$1581 [29] $memory\csr_file$rdmux[0][4][5]$b$1581 [27] $memory\csr_file$rdmux[0][4][5]$b$1581 [25:24] $memory\csr_file$rdmux[0][4][5]$b$1581 [21] $memory\csr_file$rdmux[0][4][5]$b$1581 [19:18] $memory\csr_file$rdmux[0][4][5]$b$1581 [14] $memory\csr_file$rdmux[0][4][5]$b$1581 [12:10] $memory\csr_file$rdmux[0][4][5]$b$1581 [3:0] } = { $memory\csr_file$rdmux[0][4][5]$b$1581 [28] $memory\csr_file$rdmux[0][4][5]$b$1581 [28] $memory\csr_file$rdmux[0][4][5]$b$1581 [26] $memory\csr_file$rdmux[0][4][5]$b$1581 [13] 1'0 $memory\csr_file$rdmux[0][4][5]$b$1581 [5] 2'01 $memory\csr_file$rdmux[0][4][5]$b$1581 [6] 7'0010011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][5][12]$1648:
      Old ports: A=$memory\csr_file$rdmux[0][5][12]$a$1649, B=$memory\csr_file$rdmux[0][5][12]$b$1650, Y=$memory\csr_file$rdmux[0][4][6]$a$1583
      New ports: A={ 2'11 $memory\csr_file$rdmux[0][5][12]$a$1649 [4] 1'1 $memory\csr_file$rdmux[0][5][12]$a$1649 [20] $memory\csr_file$rdmux[0][5][12]$a$1649 [20] 1'1 $memory\csr_file$rdmux[0][5][12]$a$1649 [4] $memory\csr_file$rdmux[0][5][12]$a$1649 [4] $memory\csr_file$rdmux[0][5][12]$a$1649 [13] 1'1 $memory\csr_file$rdmux[0][5][12]$a$1649 [7] $memory\csr_file$rdmux[0][5][12]$a$1649 [7] $memory\csr_file$rdmux[0][5][12]$a$1649 [7] 1'0 $memory\csr_file$rdmux[0][5][12]$a$1649 [5:4] }, B={ $memory\csr_file$rdmux[0][5][12]$b$1650 [5] 2'00 $memory\csr_file$rdmux[0][5][12]$b$1650 [22] $memory\csr_file$rdmux[0][5][12]$b$1650 [22] $memory\csr_file$rdmux[0][5][12]$b$1650 [5] $memory\csr_file$rdmux[0][5][12]$b$1650 [15] $memory\csr_file$rdmux[0][5][12]$b$1650 [16:15] $memory\csr_file$rdmux[0][5][12]$b$1650 [13] $memory\csr_file$rdmux[0][5][12]$b$1650 [10:9] $memory\csr_file$rdmux[0][5][12]$b$1650 [4] $memory\csr_file$rdmux[0][5][12]$b$1650 [7] $memory\csr_file$rdmux[0][5][12]$b$1650 [5] $memory\csr_file$rdmux[0][5][12]$b$1650 [5:4] }, Y={ $memory\csr_file$rdmux[0][4][6]$a$1583 [27] $memory\csr_file$rdmux[0][4][6]$a$1583 [25:22] $memory\csr_file$rdmux[0][4][6]$a$1583 [20] $memory\csr_file$rdmux[0][4][6]$a$1583 [18] $memory\csr_file$rdmux[0][4][6]$a$1583 [16:15] $memory\csr_file$rdmux[0][4][6]$a$1583 [13] $memory\csr_file$rdmux[0][4][6]$a$1583 [10:4] }
      New connections: { $memory\csr_file$rdmux[0][4][6]$a$1583 [31:28] $memory\csr_file$rdmux[0][4][6]$a$1583 [26] $memory\csr_file$rdmux[0][4][6]$a$1583 [21] $memory\csr_file$rdmux[0][4][6]$a$1583 [19] $memory\csr_file$rdmux[0][4][6]$a$1583 [17] $memory\csr_file$rdmux[0][4][6]$a$1583 [14] $memory\csr_file$rdmux[0][4][6]$a$1583 [12:11] $memory\csr_file$rdmux[0][4][6]$a$1583 [3:0] } = { $memory\csr_file$rdmux[0][4][6]$a$1583 [27] $memory\csr_file$rdmux[0][4][6]$a$1583 [23] $memory\csr_file$rdmux[0][4][6]$a$1583 [27] $memory\csr_file$rdmux[0][4][6]$a$1583 [25] $memory\csr_file$rdmux[0][4][6]$a$1583 [23] $memory\csr_file$rdmux[0][4][6]$a$1583 [20] 1'0 $memory\csr_file$rdmux[0][4][6]$a$1583 [15] $memory\csr_file$rdmux[0][4][6]$a$1583 [6] 1'0 $memory\csr_file$rdmux[0][4][6]$a$1583 [6] 4'0011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][5][14]$1654:
      Old ports: A=$memory\csr_file$rdmux[0][5][14]$a$1655, B=$memory\csr_file$rdmux[0][5][14]$b$1656, Y=$memory\csr_file$rdmux[0][4][7]$a$1586
      New ports: A={ 2'00 $memory\csr_file$rdmux[0][5][14]$a$1655 [5] $memory\csr_file$rdmux[0][5][14]$a$1655 [25] $memory\csr_file$rdmux[0][5][14]$a$1655 [22] $memory\csr_file$rdmux[0][5][14]$a$1655 [7] 2'01 $memory\csr_file$rdmux[0][5][14]$a$1655 [5] 1'1 $memory\csr_file$rdmux[0][5][14]$a$1655 [5] $memory\csr_file$rdmux[0][5][14]$a$1655 [13:12] $memory\csr_file$rdmux[0][5][14]$a$1655 [9] $memory\csr_file$rdmux[0][5][14]$a$1655 [9] $memory\csr_file$rdmux[0][5][14]$a$1655 [4] $memory\csr_file$rdmux[0][5][14]$a$1655 [7] $memory\csr_file$rdmux[0][5][14]$a$1655 [5:4] }, B={ $memory\csr_file$rdmux[0][5][14]$b$1656 [4] $memory\csr_file$rdmux[0][5][14]$b$1656 [27] $memory\csr_file$rdmux[0][5][14]$b$1656 [4] $memory\csr_file$rdmux[0][5][14]$b$1656 [25] $memory\csr_file$rdmux[0][5][14]$b$1656 [13] $memory\csr_file$rdmux[0][5][14]$b$1656 [20] $memory\csr_file$rdmux[0][5][14]$b$1656 [15] $memory\csr_file$rdmux[0][5][14]$b$1656 [17] $memory\csr_file$rdmux[0][5][14]$b$1656 [17] $memory\csr_file$rdmux[0][5][14]$b$1656 [5] $memory\csr_file$rdmux[0][5][14]$b$1656 [15] $memory\csr_file$rdmux[0][5][14]$b$1656 [13:12] 1'1 $memory\csr_file$rdmux[0][5][14]$b$1656 [4] $memory\csr_file$rdmux[0][5][14]$b$1656 [7] $memory\csr_file$rdmux[0][5][14]$b$1656 [7] $memory\csr_file$rdmux[0][5][14]$b$1656 [5:4] }, Y={ $memory\csr_file$rdmux[0][4][7]$a$1586 [28:25] $memory\csr_file$rdmux[0][4][7]$a$1586 [22] $memory\csr_file$rdmux[0][4][7]$a$1586 [20:15] $memory\csr_file$rdmux[0][4][7]$a$1586 [13:12] $memory\csr_file$rdmux[0][4][7]$a$1586 [10:7] $memory\csr_file$rdmux[0][4][7]$a$1586 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][4][7]$a$1586 [31:29] $memory\csr_file$rdmux[0][4][7]$a$1586 [24:23] $memory\csr_file$rdmux[0][4][7]$a$1586 [21] $memory\csr_file$rdmux[0][4][7]$a$1586 [14] $memory\csr_file$rdmux[0][4][7]$a$1586 [11] $memory\csr_file$rdmux[0][4][7]$a$1586 [6] $memory\csr_file$rdmux[0][4][7]$a$1586 [3:0] } = { $memory\csr_file$rdmux[0][4][7]$a$1586 [28] $memory\csr_file$rdmux[0][4][7]$a$1586 [28] $memory\csr_file$rdmux[0][4][7]$a$1586 [28] $memory\csr_file$rdmux[0][4][7]$a$1586 [19] $memory\csr_file$rdmux[0][4][7]$a$1586 [22] $memory\csr_file$rdmux[0][4][7]$a$1586 [20] $memory\csr_file$rdmux[0][4][7]$a$1586 [13] $memory\csr_file$rdmux[0][4][7]$a$1586 [5] $memory\csr_file$rdmux[0][4][7]$a$1586 [5] 4'0011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][5][15]$1657:
      Old ports: A=$memory\csr_file$rdmux[0][5][15]$a$1658, B=$memory\csr_file$rdmux[0][5][15]$b$1659, Y=$memory\csr_file$rdmux[0][4][7]$b$1587
      New ports: A={ 3'000 $memory\csr_file$rdmux[0][5][15]$a$1658 [22] 1'0 $memory\csr_file$rdmux[0][5][15]$a$1658 [17] $memory\csr_file$rdmux[0][5][15]$a$1658 [4] $memory\csr_file$rdmux[0][5][15]$a$1658 [15] $memory\csr_file$rdmux[0][5][15]$a$1658 [11] $memory\csr_file$rdmux[0][5][15]$a$1658 [4] $memory\csr_file$rdmux[0][5][15]$a$1658 [8] $memory\csr_file$rdmux[0][5][15]$a$1658 [4] 2'00 $memory\csr_file$rdmux[0][5][15]$a$1658 [4] }, B={ $memory\csr_file$rdmux[0][5][15]$b$1659 [25:23] $memory\csr_file$rdmux[0][5][15]$b$1659 [7] $memory\csr_file$rdmux[0][5][15]$b$1659 [8] 1'1 $memory\csr_file$rdmux[0][5][15]$b$1659 [5] $memory\csr_file$rdmux[0][5][15]$b$1659 [15] $memory\csr_file$rdmux[0][5][15]$b$1659 [5] $memory\csr_file$rdmux[0][5][15]$b$1659 [9:4] }, Y={ $memory\csr_file$rdmux[0][4][7]$b$1587 [25:22] $memory\csr_file$rdmux[0][4][7]$b$1587 [20] $memory\csr_file$rdmux[0][4][7]$b$1587 [17:15] $memory\csr_file$rdmux[0][4][7]$b$1587 [11] $memory\csr_file$rdmux[0][4][7]$b$1587 [9:4] }
      New connections: { $memory\csr_file$rdmux[0][4][7]$b$1587 [31:26] $memory\csr_file$rdmux[0][4][7]$b$1587 [21] $memory\csr_file$rdmux[0][4][7]$b$1587 [19:18] $memory\csr_file$rdmux[0][4][7]$b$1587 [14:12] $memory\csr_file$rdmux[0][4][7]$b$1587 [10] $memory\csr_file$rdmux[0][4][7]$b$1587 [3:0] } = { $memory\csr_file$rdmux[0][4][7]$b$1587 [25] $memory\csr_file$rdmux[0][4][7]$b$1587 [25] $memory\csr_file$rdmux[0][4][7]$b$1587 [25] $memory\csr_file$rdmux[0][4][7]$b$1587 [25] $memory\csr_file$rdmux[0][4][7]$b$1587 [25] $memory\csr_file$rdmux[0][4][7]$b$1587 [25] $memory\csr_file$rdmux[0][4][7]$b$1587 [20] 2'01 $memory\csr_file$rdmux[0][4][7]$b$1587 [6] $memory\csr_file$rdmux[0][4][7]$b$1587 [11] 1'0 $memory\csr_file$rdmux[0][4][7]$b$1587 [9] 4'0011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][5][1]$1615:
      Old ports: A=$memory\csr_file$rdmux[0][5][1]$a$1616, B=$memory\csr_file$rdmux[0][5][1]$b$1617, Y=$memory\csr_file$rdmux[0][4][0]$b$1566
      New ports: A={ $memory\csr_file$rdmux[0][5][1]$a$1616 [25] $memory\csr_file$rdmux[0][5][1]$a$1616 [23] $memory\csr_file$rdmux[0][5][1]$a$1616 [23] $memory\csr_file$rdmux[0][5][1]$a$1616 [21] $memory\csr_file$rdmux[0][5][1]$a$1616 [18] $memory\csr_file$rdmux[0][5][1]$a$1616 [15] $memory\csr_file$rdmux[0][5][1]$a$1616 [15] $memory\csr_file$rdmux[0][5][1]$a$1616 [15] $memory\csr_file$rdmux[0][5][1]$a$1616 [2] 1'1 $memory\csr_file$rdmux[0][5][1]$a$1616 [8:7] 2'10 $memory\csr_file$rdmux[0][5][1]$a$1616 [2] }, B={ $memory\csr_file$rdmux[0][5][1]$b$1617 [2] $memory\csr_file$rdmux[0][5][1]$b$1617 [2] 2'00 $memory\csr_file$rdmux[0][5][1]$b$1617 [4] $memory\csr_file$rdmux[0][5][1]$b$1617 [4] $memory\csr_file$rdmux[0][5][1]$b$1617 [8] $memory\csr_file$rdmux[0][5][1]$b$1617 [15] 1'0 $memory\csr_file$rdmux[0][5][1]$b$1617 [9:7] $memory\csr_file$rdmux[0][5][1]$b$1617 [4] $memory\csr_file$rdmux[0][5][1]$b$1617 [2] $memory\csr_file$rdmux[0][5][1]$b$1617 [2] }, Y={ $memory\csr_file$rdmux[0][4][0]$b$1566 [25:23] $memory\csr_file$rdmux[0][4][0]$b$1566 [21] $memory\csr_file$rdmux[0][4][0]$b$1566 [18:15] $memory\csr_file$rdmux[0][4][0]$b$1566 [12] $memory\csr_file$rdmux[0][4][0]$b$1566 [9:7] $memory\csr_file$rdmux[0][4][0]$b$1566 [4:2] }
      New connections: { $memory\csr_file$rdmux[0][4][0]$b$1566 [31:26] $memory\csr_file$rdmux[0][4][0]$b$1566 [22] $memory\csr_file$rdmux[0][4][0]$b$1566 [20:19] $memory\csr_file$rdmux[0][4][0]$b$1566 [14:13] $memory\csr_file$rdmux[0][4][0]$b$1566 [11:10] $memory\csr_file$rdmux[0][4][0]$b$1566 [6:5] $memory\csr_file$rdmux[0][4][0]$b$1566 [1:0] } = { $memory\csr_file$rdmux[0][4][0]$b$1566 [23] $memory\csr_file$rdmux[0][4][0]$b$1566 [21] $memory\csr_file$rdmux[0][4][0]$b$1566 [23] $memory\csr_file$rdmux[0][4][0]$b$1566 [24:23] $memory\csr_file$rdmux[0][4][0]$b$1566 [3] $memory\csr_file$rdmux[0][4][0]$b$1566 [21] 5'00000 $memory\csr_file$rdmux[0][4][0]$b$1566 [4:2] 2'11 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][5][20]$1672:
      Old ports: A=$memory\csr_file$rdmux[0][5][20]$a$1673, B=$memory\csr_file$rdmux[0][5][20]$b$1674, Y=$memory\csr_file$rdmux[0][4][10]$a$1595
      New ports: A={ 3'001 $memory\csr_file$rdmux[0][5][20]$a$1673 [23:22] 2'11 $memory\csr_file$rdmux[0][5][20]$a$1673 [11:7] 2'00 }, B={ $memory\csr_file$rdmux[0][5][20]$b$1674 [24] $memory\csr_file$rdmux[0][5][20]$b$1674 [7] $memory\csr_file$rdmux[0][5][20]$b$1674 [24:23] 1'1 $memory\csr_file$rdmux[0][5][20]$b$1674 [7] $memory\csr_file$rdmux[0][5][20]$b$1674 [13] 1'0 $memory\csr_file$rdmux[0][5][20]$b$1674 [7] $memory\csr_file$rdmux[0][5][20]$b$1674 [9] $memory\csr_file$rdmux[0][5][20]$b$1674 [4] $memory\csr_file$rdmux[0][5][20]$b$1674 [7] $memory\csr_file$rdmux[0][5][20]$b$1674 [5:4] }, Y={ $memory\csr_file$rdmux[0][4][10]$a$1595 [26:22] $memory\csr_file$rdmux[0][4][10]$a$1595 [15] $memory\csr_file$rdmux[0][4][10]$a$1595 [13] $memory\csr_file$rdmux[0][4][10]$a$1595 [11:7] $memory\csr_file$rdmux[0][4][10]$a$1595 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][4][10]$a$1595 [31:27] $memory\csr_file$rdmux[0][4][10]$a$1595 [21:16] $memory\csr_file$rdmux[0][4][10]$a$1595 [14] $memory\csr_file$rdmux[0][4][10]$a$1595 [12] $memory\csr_file$rdmux[0][4][10]$a$1595 [6] $memory\csr_file$rdmux[0][4][10]$a$1595 [3:0] } = { $memory\csr_file$rdmux[0][4][10]$a$1595 [26] $memory\csr_file$rdmux[0][4][10]$a$1595 [26] $memory\csr_file$rdmux[0][4][10]$a$1595 [26] $memory\csr_file$rdmux[0][4][10]$a$1595 [26] $memory\csr_file$rdmux[0][4][10]$a$1595 [26] 1'0 $memory\csr_file$rdmux[0][4][10]$a$1595 [5] 2'01 $memory\csr_file$rdmux[0][4][10]$a$1595 [5] 8'10000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][5][22]$1678:
      Old ports: A=$memory\csr_file$rdmux[0][5][22]$a$1679, B=0, Y=$memory\csr_file$rdmux[0][4][11]$a$1598
      New ports: A={ $memory\csr_file$rdmux[0][5][22]$a$1679 [7] $memory\csr_file$rdmux[0][5][22]$a$1679 [2] $memory\csr_file$rdmux[0][5][22]$a$1679 [0] }, B=3'000, Y={ $memory\csr_file$rdmux[0][4][11]$a$1598 [7] $memory\csr_file$rdmux[0][4][11]$a$1598 [2] $memory\csr_file$rdmux[0][4][11]$a$1598 [0] }
      New connections: { $memory\csr_file$rdmux[0][4][11]$a$1598 [31:8] $memory\csr_file$rdmux[0][4][11]$a$1598 [6:3] $memory\csr_file$rdmux[0][4][11]$a$1598 [1] } = { $memory\csr_file$rdmux[0][4][11]$a$1598 [0] $memory\csr_file$rdmux[0][4][11]$a$1598 [0] $memory\csr_file$rdmux[0][4][11]$a$1598 [0] $memory\csr_file$rdmux[0][4][11]$a$1598 [0] $memory\csr_file$rdmux[0][4][11]$a$1598 [7] 1'0 $memory\csr_file$rdmux[0][4][11]$a$1598 [7] $memory\csr_file$rdmux[0][4][11]$a$1598 [2] $memory\csr_file$rdmux[0][4][11]$a$1598 [0] $memory\csr_file$rdmux[0][4][11]$a$1598 [7] $memory\csr_file$rdmux[0][4][11]$a$1598 [7] $memory\csr_file$rdmux[0][4][11]$a$1598 [0] $memory\csr_file$rdmux[0][4][11]$a$1598 [2] $memory\csr_file$rdmux[0][4][11]$a$1598 [0] $memory\csr_file$rdmux[0][4][11]$a$1598 [0] $memory\csr_file$rdmux[0][4][11]$a$1598 [0] $memory\csr_file$rdmux[0][4][11]$a$1598 [2] $memory\csr_file$rdmux[0][4][11]$a$1598 [0] $memory\csr_file$rdmux[0][4][11]$a$1598 [0] $memory\csr_file$rdmux[0][4][11]$a$1598 [2] $memory\csr_file$rdmux[0][4][11]$a$1598 [7] 3'000 $memory\csr_file$rdmux[0][4][11]$a$1598 [0] $memory\csr_file$rdmux[0][4][11]$a$1598 [0] 1'0 $memory\csr_file$rdmux[0][4][11]$a$1598 [2] $memory\csr_file$rdmux[0][4][11]$a$1598 [0] }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][5][10]$1642:
      Old ports: A=$memory\csr_file$rdmux[0][5][10]$a$1643, B=$memory\csr_file$rdmux[0][5][10]$b$1644, Y=$memory\csr_file$rdmux[0][4][5]$a$1580
      New ports: A={ $memory\csr_file$rdmux[0][5][10]$a$1643 [24] $memory\csr_file$rdmux[0][5][10]$a$1643 [26] $memory\csr_file$rdmux[0][5][10]$a$1643 [26] $memory\csr_file$rdmux[0][5][10]$a$1643 [24] $memory\csr_file$rdmux[0][5][10]$a$1643 [24:23] $memory\csr_file$rdmux[0][5][10]$a$1643 [5] $memory\csr_file$rdmux[0][5][10]$a$1643 [5] $memory\csr_file$rdmux[0][5][10]$a$1643 [20] $memory\csr_file$rdmux[0][5][10]$a$1643 [8] $memory\csr_file$rdmux[0][5][10]$a$1643 [16] $memory\csr_file$rdmux[0][5][10]$a$1643 [8] $memory\csr_file$rdmux[0][5][10]$a$1643 [14] 2'00 $memory\csr_file$rdmux[0][5][10]$a$1643 [8] 1'1 $memory\csr_file$rdmux[0][5][10]$a$1643 [5:4] }, B={ $memory\csr_file$rdmux[0][5][10]$b$1644 [28] $memory\csr_file$rdmux[0][5][10]$b$1644 [28] $memory\csr_file$rdmux[0][5][10]$b$1644 [25] $memory\csr_file$rdmux[0][5][10]$b$1644 [25:24] $memory\csr_file$rdmux[0][5][10]$b$1644 [8] $memory\csr_file$rdmux[0][5][10]$b$1644 [8] $memory\csr_file$rdmux[0][5][10]$b$1644 [14] $memory\csr_file$rdmux[0][5][10]$b$1644 [14] $memory\csr_file$rdmux[0][5][10]$b$1644 [14] $memory\csr_file$rdmux[0][5][10]$b$1644 [14] $memory\csr_file$rdmux[0][5][10]$b$1644 [12] $memory\csr_file$rdmux[0][5][10]$b$1644 [14:12] $memory\csr_file$rdmux[0][5][10]$b$1644 [8:7] $memory\csr_file$rdmux[0][5][10]$b$1644 [5:4] }, Y={ $memory\csr_file$rdmux[0][4][5]$a$1580 [30] $memory\csr_file$rdmux[0][4][5]$a$1580 [28] $memory\csr_file$rdmux[0][4][5]$a$1580 [26:20] $memory\csr_file$rdmux[0][4][5]$a$1580 [17:12] $memory\csr_file$rdmux[0][4][5]$a$1580 [8:7] $memory\csr_file$rdmux[0][4][5]$a$1580 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][4][5]$a$1580 [31] $memory\csr_file$rdmux[0][4][5]$a$1580 [29] $memory\csr_file$rdmux[0][4][5]$a$1580 [27] $memory\csr_file$rdmux[0][4][5]$a$1580 [19:18] $memory\csr_file$rdmux[0][4][5]$a$1580 [11:9] $memory\csr_file$rdmux[0][4][5]$a$1580 [6] $memory\csr_file$rdmux[0][4][5]$a$1580 [3:0] } = { $memory\csr_file$rdmux[0][4][5]$a$1580 [28] $memory\csr_file$rdmux[0][4][5]$a$1580 [28] $memory\csr_file$rdmux[0][4][5]$a$1580 [26] 10'0101100011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][5][17]$1663:
      Old ports: A=$memory\csr_file$rdmux[0][5][17]$a$1664, B=$memory\csr_file$rdmux[0][5][17]$b$1665, Y=$memory\csr_file$rdmux[0][4][8]$b$1590
      New ports: A={ 1'0 $memory\csr_file$rdmux[0][5][17]$a$1664 [20] $memory\csr_file$rdmux[0][5][17]$a$1664 [17] 1'1 $memory\csr_file$rdmux[0][5][17]$a$1664 [15:14] $memory\csr_file$rdmux[0][5][17]$a$1664 [5] $memory\csr_file$rdmux[0][5][17]$a$1664 [5] $memory\csr_file$rdmux[0][5][17]$a$1664 [5] 1'1 $memory\csr_file$rdmux[0][5][17]$a$1664 [9:7] $memory\csr_file$rdmux[0][5][17]$a$1664 [5] $memory\csr_file$rdmux[0][5][17]$a$1664 [5:4] 1'0 }, B={ $memory\csr_file$rdmux[0][5][17]$b$1665 [8] $memory\csr_file$rdmux[0][5][17]$b$1665 [11] $memory\csr_file$rdmux[0][5][17]$b$1665 [11] $memory\csr_file$rdmux[0][5][17]$b$1665 [7] $memory\csr_file$rdmux[0][5][17]$b$1665 [15:13] 1'0 $memory\csr_file$rdmux[0][5][17]$b$1665 [11] $memory\csr_file$rdmux[0][5][17]$b$1665 [9] $memory\csr_file$rdmux[0][5][17]$b$1665 [9:5] 1'0 $memory\csr_file$rdmux[0][5][17]$b$1665 [2] }, Y={ $memory\csr_file$rdmux[0][4][8]$b$1590 [21:20] $memory\csr_file$rdmux[0][4][8]$b$1590 [17:4] $memory\csr_file$rdmux[0][4][8]$b$1590 [2] }
      New connections: { $memory\csr_file$rdmux[0][4][8]$b$1590 [31:22] $memory\csr_file$rdmux[0][4][8]$b$1590 [19:18] $memory\csr_file$rdmux[0][4][8]$b$1590 [3] $memory\csr_file$rdmux[0][4][8]$b$1590 [1:0] } = { $memory\csr_file$rdmux[0][4][8]$b$1590 [11] $memory\csr_file$rdmux[0][4][8]$b$1590 [11] $memory\csr_file$rdmux[0][4][8]$b$1590 [11] $memory\csr_file$rdmux[0][4][8]$b$1590 [11] $memory\csr_file$rdmux[0][4][8]$b$1590 [11] $memory\csr_file$rdmux[0][4][8]$b$1590 [11] $memory\csr_file$rdmux[0][4][8]$b$1590 [11] $memory\csr_file$rdmux[0][4][8]$b$1590 [13] $memory\csr_file$rdmux[0][4][8]$b$1590 [21] $memory\csr_file$rdmux[0][4][8]$b$1590 [21] 1'0 $memory\csr_file$rdmux[0][4][8]$b$1590 [16] 3'011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][5][2]$1618:
      Old ports: A=$memory\csr_file$rdmux[0][5][2]$a$1619, B=$memory\csr_file$rdmux[0][5][2]$b$1620, Y=$memory\csr_file$rdmux[0][4][1]$a$1568
      New ports: A={ $memory\csr_file$rdmux[0][5][2]$a$1619 [21] $memory\csr_file$rdmux[0][5][2]$a$1619 [21] $memory\csr_file$rdmux[0][5][2]$a$1619 [21] $memory\csr_file$rdmux[0][5][2]$a$1619 [18] $memory\csr_file$rdmux[0][5][2]$a$1619 [18] 1'0 $memory\csr_file$rdmux[0][5][2]$a$1619 [5:4] $memory\csr_file$rdmux[0][5][2]$a$1619 [9] $memory\csr_file$rdmux[0][5][2]$a$1619 [4] $memory\csr_file$rdmux[0][5][2]$a$1619 [5:4] $memory\csr_file$rdmux[0][5][2]$a$1619 [2] }, B={ 1'1 $memory\csr_file$rdmux[0][5][2]$b$1620 [22] $memory\csr_file$rdmux[0][5][2]$b$1620 [20] $memory\csr_file$rdmux[0][5][2]$b$1620 [20] 1'1 $memory\csr_file$rdmux[0][5][2]$b$1620 [4] $memory\csr_file$rdmux[0][5][2]$b$1620 [13] 1'1 $memory\csr_file$rdmux[0][5][2]$b$1620 [7] $memory\csr_file$rdmux[0][5][2]$b$1620 [7] $memory\csr_file$rdmux[0][5][2]$b$1620 [5:4] 1'0 }, Y={ $memory\csr_file$rdmux[0][4][1]$a$1568 [25] $memory\csr_file$rdmux[0][4][1]$a$1568 [22:20] $memory\csr_file$rdmux[0][4][1]$a$1568 [18] $memory\csr_file$rdmux[0][4][1]$a$1568 [15] $memory\csr_file$rdmux[0][4][1]$a$1568 [13] $memory\csr_file$rdmux[0][4][1]$a$1568 [10:9] $memory\csr_file$rdmux[0][4][1]$a$1568 [7] $memory\csr_file$rdmux[0][4][1]$a$1568 [5:4] $memory\csr_file$rdmux[0][4][1]$a$1568 [2] }
      New connections: { $memory\csr_file$rdmux[0][4][1]$a$1568 [31:26] $memory\csr_file$rdmux[0][4][1]$a$1568 [24:23] $memory\csr_file$rdmux[0][4][1]$a$1568 [19] $memory\csr_file$rdmux[0][4][1]$a$1568 [17:16] $memory\csr_file$rdmux[0][4][1]$a$1568 [14] $memory\csr_file$rdmux[0][4][1]$a$1568 [12:11] $memory\csr_file$rdmux[0][4][1]$a$1568 [8] $memory\csr_file$rdmux[0][4][1]$a$1568 [6] $memory\csr_file$rdmux[0][4][1]$a$1568 [3] $memory\csr_file$rdmux[0][4][1]$a$1568 [1:0] } = { $memory\csr_file$rdmux[0][4][1]$a$1568 [18] $memory\csr_file$rdmux[0][4][1]$a$1568 [25] $memory\csr_file$rdmux[0][4][1]$a$1568 [18] $memory\csr_file$rdmux[0][4][1]$a$1568 [18] $memory\csr_file$rdmux[0][4][1]$a$1568 [18] $memory\csr_file$rdmux[0][4][1]$a$1568 [18] $memory\csr_file$rdmux[0][4][1]$a$1568 [15] $memory\csr_file$rdmux[0][4][1]$a$1568 [20] 1'0 $memory\csr_file$rdmux[0][4][1]$a$1568 [15] $memory\csr_file$rdmux[0][4][1]$a$1568 [15] 3'000 $memory\csr_file$rdmux[0][4][1]$a$1568 [7] 4'0011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][5][4]$1624:
      Old ports: A=$memory\csr_file$rdmux[0][5][4]$a$1625, B=$memory\csr_file$rdmux[0][5][4]$b$1626, Y=$memory\csr_file$rdmux[0][4][2]$a$1571
      New ports: A={ $memory\csr_file$rdmux[0][5][4]$a$1625 [9] $memory\csr_file$rdmux[0][5][4]$a$1625 [9] 2'11 $memory\csr_file$rdmux[0][5][4]$a$1625 [24] $memory\csr_file$rdmux[0][5][4]$a$1625 [7] $memory\csr_file$rdmux[0][5][4]$a$1625 [7] 5'00000 $memory\csr_file$rdmux[0][5][4]$a$1625 [13] $memory\csr_file$rdmux[0][5][4]$a$1625 [9:7] $memory\csr_file$rdmux[0][5][4]$a$1625 [5:4] $memory\csr_file$rdmux[0][5][4]$a$1625 [2] }, B={ $memory\csr_file$rdmux[0][5][4]$b$1626 [13] $memory\csr_file$rdmux[0][5][4]$b$1626 [26] $memory\csr_file$rdmux[0][5][4]$b$1626 [26] $memory\csr_file$rdmux[0][5][4]$b$1626 [13] 1'0 $memory\csr_file$rdmux[0][5][4]$b$1626 [23:22] $memory\csr_file$rdmux[0][5][4]$b$1626 [5:4] $memory\csr_file$rdmux[0][5][4]$b$1626 [16:13] 2'11 $memory\csr_file$rdmux[0][5][4]$b$1626 [7] $memory\csr_file$rdmux[0][5][4]$b$1626 [5:4] 1'0 }, Y={ $memory\csr_file$rdmux[0][4][2]$a$1571 [30] $memory\csr_file$rdmux[0][4][2]$a$1571 [28] $memory\csr_file$rdmux[0][4][2]$a$1571 [26:20] $memory\csr_file$rdmux[0][4][2]$a$1571 [16:13] $memory\csr_file$rdmux[0][4][2]$a$1571 [9:7] $memory\csr_file$rdmux[0][4][2]$a$1571 [5:4] $memory\csr_file$rdmux[0][4][2]$a$1571 [2] }
      New connections: { $memory\csr_file$rdmux[0][4][2]$a$1571 [31] $memory\csr_file$rdmux[0][4][2]$a$1571 [29] $memory\csr_file$rdmux[0][4][2]$a$1571 [27] $memory\csr_file$rdmux[0][4][2]$a$1571 [19:17] $memory\csr_file$rdmux[0][4][2]$a$1571 [12:10] $memory\csr_file$rdmux[0][4][2]$a$1571 [6] $memory\csr_file$rdmux[0][4][2]$a$1571 [3] $memory\csr_file$rdmux[0][4][2]$a$1571 [1:0] } = { $memory\csr_file$rdmux[0][4][2]$a$1571 [28] $memory\csr_file$rdmux[0][4][2]$a$1571 [28] $memory\csr_file$rdmux[0][4][2]$a$1571 [26] 1'0 $memory\csr_file$rdmux[0][4][2]$a$1571 [9] $memory\csr_file$rdmux[0][4][2]$a$1571 [16] 2'00 $memory\csr_file$rdmux[0][4][2]$a$1571 [9] $memory\csr_file$rdmux[0][4][2]$a$1571 [2] $memory\csr_file$rdmux[0][4][2]$a$1571 [2] 2'11 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][5][5]$1627:
      Old ports: A=$memory\csr_file$rdmux[0][5][5]$a$1628, B=$memory\csr_file$rdmux[0][5][5]$b$1629, Y=$memory\csr_file$rdmux[0][4][2]$b$1572
      New ports: A={ $memory\csr_file$rdmux[0][5][5]$a$1628 [24] $memory\csr_file$rdmux[0][5][5]$a$1628 [27:24] $memory\csr_file$rdmux[0][5][5]$a$1628 [15] $memory\csr_file$rdmux[0][5][5]$a$1628 [5] $memory\csr_file$rdmux[0][5][5]$a$1628 [20] $memory\csr_file$rdmux[0][5][5]$a$1628 [15:14] $memory\csr_file$rdmux[0][5][5]$a$1628 [15:14] $memory\csr_file$rdmux[0][5][5]$a$1628 [6] $memory\csr_file$rdmux[0][5][5]$a$1628 [8:4] }, B={ $memory\csr_file$rdmux[0][5][5]$b$1629 [25] $memory\csr_file$rdmux[0][5][5]$b$1629 [26] $memory\csr_file$rdmux[0][5][5]$b$1629 [26:23] $memory\csr_file$rdmux[0][5][5]$b$1629 [7] $memory\csr_file$rdmux[0][5][5]$b$1629 [5] $memory\csr_file$rdmux[0][5][5]$b$1629 [16] $memory\csr_file$rdmux[0][5][5]$b$1629 [16] $memory\csr_file$rdmux[0][5][5]$b$1629 [14] $memory\csr_file$rdmux[0][5][5]$b$1629 [14:13] 1'1 $memory\csr_file$rdmux[0][5][5]$b$1629 [7] 1'0 $memory\csr_file$rdmux[0][5][5]$b$1629 [5:4] }, Y={ $memory\csr_file$rdmux[0][4][2]$b$1572 [30] $memory\csr_file$rdmux[0][4][2]$b$1572 [27:22] $memory\csr_file$rdmux[0][4][2]$b$1572 [20] $memory\csr_file$rdmux[0][4][2]$b$1572 [17:13] $memory\csr_file$rdmux[0][4][2]$b$1572 [8:4] }
      New connections: { $memory\csr_file$rdmux[0][4][2]$b$1572 [31] $memory\csr_file$rdmux[0][4][2]$b$1572 [29:28] $memory\csr_file$rdmux[0][4][2]$b$1572 [21] $memory\csr_file$rdmux[0][4][2]$b$1572 [19:18] $memory\csr_file$rdmux[0][4][2]$b$1572 [12:9] $memory\csr_file$rdmux[0][4][2]$b$1572 [3:0] } = { $memory\csr_file$rdmux[0][4][2]$b$1572 [26] $memory\csr_file$rdmux[0][4][2]$b$1572 [26] $memory\csr_file$rdmux[0][4][2]$b$1572 [26] $memory\csr_file$rdmux[0][4][2]$b$1572 [5] 2'01 $memory\csr_file$rdmux[0][4][2]$b$1572 [6] $memory\csr_file$rdmux[0][4][2]$b$1572 [6] 6'110011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][5][7]$1633:
      Old ports: A=$memory\csr_file$rdmux[0][5][7]$a$1634, B=$memory\csr_file$rdmux[0][5][7]$b$1635, Y=$memory\csr_file$rdmux[0][4][3]$b$1575
      New ports: A={ $memory\csr_file$rdmux[0][5][7]$a$1634 [26:24] $memory\csr_file$rdmux[0][5][7]$a$1634 [22] $memory\csr_file$rdmux[0][5][7]$a$1634 [22] $memory\csr_file$rdmux[0][5][7]$a$1634 [20] $memory\csr_file$rdmux[0][5][7]$a$1634 [5] $memory\csr_file$rdmux[0][5][7]$a$1634 [16] $memory\csr_file$rdmux[0][5][7]$a$1634 [5] 1'0 $memory\csr_file$rdmux[0][5][7]$a$1634 [13] $memory\csr_file$rdmux[0][5][7]$a$1634 [7] $memory\csr_file$rdmux[0][5][7]$a$1634 [8:7] $memory\csr_file$rdmux[0][5][7]$a$1634 [5:4] }, B={ $memory\csr_file$rdmux[0][5][7]$b$1635 [26] $memory\csr_file$rdmux[0][5][7]$b$1635 [24] $memory\csr_file$rdmux[0][5][7]$b$1635 [24:23] $memory\csr_file$rdmux[0][5][7]$b$1635 [5] $memory\csr_file$rdmux[0][5][7]$b$1635 [20] $memory\csr_file$rdmux[0][5][7]$b$1635 [7] $memory\csr_file$rdmux[0][5][7]$b$1635 [7] $memory\csr_file$rdmux[0][5][7]$b$1635 [15:14] 2'01 $memory\csr_file$rdmux[0][5][7]$b$1635 [4] $memory\csr_file$rdmux[0][5][7]$b$1635 [7] $memory\csr_file$rdmux[0][5][7]$b$1635 [5:4] }, Y={ $memory\csr_file$rdmux[0][4][3]$b$1575 [26:22] $memory\csr_file$rdmux[0][4][3]$b$1575 [20] $memory\csr_file$rdmux[0][4][3]$b$1575 [17:13] $memory\csr_file$rdmux[0][4][3]$b$1575 [9:7] $memory\csr_file$rdmux[0][4][3]$b$1575 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][4][3]$b$1575 [31:27] $memory\csr_file$rdmux[0][4][3]$b$1575 [21] $memory\csr_file$rdmux[0][4][3]$b$1575 [19:18] $memory\csr_file$rdmux[0][4][3]$b$1575 [12:10] $memory\csr_file$rdmux[0][4][3]$b$1575 [6] $memory\csr_file$rdmux[0][4][3]$b$1575 [3:0] } = { $memory\csr_file$rdmux[0][4][3]$b$1575 [26:25] $memory\csr_file$rdmux[0][4][3]$b$1575 [26] $memory\csr_file$rdmux[0][4][3]$b$1575 [26] $memory\csr_file$rdmux[0][4][3]$b$1575 [26] $memory\csr_file$rdmux[0][4][3]$b$1575 [5] 10'0100100011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][5][8]$1636:
      Old ports: A=$memory\csr_file$rdmux[0][5][8]$a$1637, B=$memory\csr_file$rdmux[0][5][8]$b$1638, Y=$memory\csr_file$rdmux[0][4][4]$a$1577
      New ports: A={ $memory\csr_file$rdmux[0][5][8]$a$1637 [25] $memory\csr_file$rdmux[0][5][8]$a$1637 [26] $memory\csr_file$rdmux[0][5][8]$a$1637 [26:23] $memory\csr_file$rdmux[0][5][8]$a$1637 [7] $memory\csr_file$rdmux[0][5][8]$a$1637 [5] $memory\csr_file$rdmux[0][5][8]$a$1637 [5] $memory\csr_file$rdmux[0][5][8]$a$1637 [16] $memory\csr_file$rdmux[0][5][8]$a$1637 [16] $memory\csr_file$rdmux[0][5][8]$a$1637 [14] $memory\csr_file$rdmux[0][5][8]$a$1637 [14:13] 1'0 $memory\csr_file$rdmux[0][5][8]$a$1637 [7] $memory\csr_file$rdmux[0][5][8]$a$1637 [5:4] }, B={ $memory\csr_file$rdmux[0][5][8]$b$1638 [28] $memory\csr_file$rdmux[0][5][8]$b$1638 [28] $memory\csr_file$rdmux[0][5][8]$b$1638 [13] $memory\csr_file$rdmux[0][5][8]$b$1638 [13:12] $memory\csr_file$rdmux[0][5][8]$b$1638 [22] $memory\csr_file$rdmux[0][5][8]$b$1638 [22] $memory\csr_file$rdmux[0][5][8]$b$1638 [14] $memory\csr_file$rdmux[0][5][8]$b$1638 [16] $memory\csr_file$rdmux[0][5][8]$b$1638 [4] $memory\csr_file$rdmux[0][5][8]$b$1638 [16:12] $memory\csr_file$rdmux[0][5][8]$b$1638 [7] $memory\csr_file$rdmux[0][5][8]$b$1638 [5:4] }, Y={ $memory\csr_file$rdmux[0][4][4]$a$1577 [30] $memory\csr_file$rdmux[0][4][4]$a$1577 [28] $memory\csr_file$rdmux[0][4][4]$a$1577 [26:20] $memory\csr_file$rdmux[0][4][4]$a$1577 [17:12] $memory\csr_file$rdmux[0][4][4]$a$1577 [7] $memory\csr_file$rdmux[0][4][4]$a$1577 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][4][4]$a$1577 [31] $memory\csr_file$rdmux[0][4][4]$a$1577 [29] $memory\csr_file$rdmux[0][4][4]$a$1577 [27] $memory\csr_file$rdmux[0][4][4]$a$1577 [19:18] $memory\csr_file$rdmux[0][4][4]$a$1577 [11:8] $memory\csr_file$rdmux[0][4][4]$a$1577 [6] $memory\csr_file$rdmux[0][4][4]$a$1577 [3:0] } = { $memory\csr_file$rdmux[0][4][4]$a$1577 [28] $memory\csr_file$rdmux[0][4][4]$a$1577 [28] $memory\csr_file$rdmux[0][4][4]$a$1577 [26] 11'01011100011 }
  Optimizing cells in module \csr_file.
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][4][10]$1594:
      Old ports: A=$memory\csr_file$rdmux[0][4][10]$a$1595, B=$memory\csr_file$rdmux[0][4][10]$b$1596, Y=$memory\csr_file$rdmux[0][3][5]$a$1556
      New ports: A={ $memory\csr_file$rdmux[0][4][10]$a$1595 [26:22] 1'0 $memory\csr_file$rdmux[0][4][10]$a$1595 [5] $memory\csr_file$rdmux[0][4][10]$a$1595 [5] $memory\csr_file$rdmux[0][4][10]$a$1595 [15] $memory\csr_file$rdmux[0][4][10]$a$1595 [13] $memory\csr_file$rdmux[0][4][10]$a$1595 [11:7] $memory\csr_file$rdmux[0][4][10]$a$1595 [5:4] }, B={ $memory\csr_file$rdmux[0][4][10]$b$1596 [26:20] 2'10 $memory\csr_file$rdmux[0][4][10]$b$1596 [5] $memory\csr_file$rdmux[0][4][10]$b$1596 [11:9] $memory\csr_file$rdmux[0][4][10]$b$1596 [4] 1'0 $memory\csr_file$rdmux[0][4][10]$b$1596 [5:4] }, Y={ $memory\csr_file$rdmux[0][3][5]$a$1556 [26:20] $memory\csr_file$rdmux[0][3][5]$a$1556 [17] $memory\csr_file$rdmux[0][3][5]$a$1556 [15] $memory\csr_file$rdmux[0][3][5]$a$1556 [13] $memory\csr_file$rdmux[0][3][5]$a$1556 [11:7] $memory\csr_file$rdmux[0][3][5]$a$1556 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][3][5]$a$1556 [31:27] $memory\csr_file$rdmux[0][3][5]$a$1556 [19:18] $memory\csr_file$rdmux[0][3][5]$a$1556 [16] $memory\csr_file$rdmux[0][3][5]$a$1556 [14] $memory\csr_file$rdmux[0][3][5]$a$1556 [12] $memory\csr_file$rdmux[0][3][5]$a$1556 [6] $memory\csr_file$rdmux[0][3][5]$a$1556 [3:0] } = { $memory\csr_file$rdmux[0][3][5]$a$1556 [26] $memory\csr_file$rdmux[0][3][5]$a$1556 [26] $memory\csr_file$rdmux[0][3][5]$a$1556 [26] $memory\csr_file$rdmux[0][3][5]$a$1556 [26] $memory\csr_file$rdmux[0][3][5]$a$1556 [26] 10'0110000011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][4][2]$1570:
      Old ports: A=$memory\csr_file$rdmux[0][4][2]$a$1571, B=$memory\csr_file$rdmux[0][4][2]$b$1572, Y=$memory\csr_file$rdmux[0][3][1]$a$1544
      New ports: A={ $memory\csr_file$rdmux[0][4][2]$a$1571 [30] $memory\csr_file$rdmux[0][4][2]$a$1571 [28] $memory\csr_file$rdmux[0][4][2]$a$1571 [26] $memory\csr_file$rdmux[0][4][2]$a$1571 [26:20] $memory\csr_file$rdmux[0][4][2]$a$1571 [16] $memory\csr_file$rdmux[0][4][2]$a$1571 [16:13] 1'0 $memory\csr_file$rdmux[0][4][2]$a$1571 [9:7] $memory\csr_file$rdmux[0][4][2]$a$1571 [2] $memory\csr_file$rdmux[0][4][2]$a$1571 [5:4] $memory\csr_file$rdmux[0][4][2]$a$1571 [2] }, B={ $memory\csr_file$rdmux[0][4][2]$b$1572 [30] $memory\csr_file$rdmux[0][4][2]$b$1572 [26] $memory\csr_file$rdmux[0][4][2]$b$1572 [27:22] $memory\csr_file$rdmux[0][4][2]$b$1572 [5] $memory\csr_file$rdmux[0][4][2]$b$1572 [20] $memory\csr_file$rdmux[0][4][2]$b$1572 [17:13] $memory\csr_file$rdmux[0][4][2]$b$1572 [6] 1'1 $memory\csr_file$rdmux[0][4][2]$b$1572 [8:4] 1'0 }, Y={ $memory\csr_file$rdmux[0][3][1]$a$1544 [30] $memory\csr_file$rdmux[0][3][1]$a$1544 [28:20] $memory\csr_file$rdmux[0][3][1]$a$1544 [17:13] $memory\csr_file$rdmux[0][3][1]$a$1544 [11] $memory\csr_file$rdmux[0][3][1]$a$1544 [9:4] $memory\csr_file$rdmux[0][3][1]$a$1544 [2] }
      New connections: { $memory\csr_file$rdmux[0][3][1]$a$1544 [31] $memory\csr_file$rdmux[0][3][1]$a$1544 [29] $memory\csr_file$rdmux[0][3][1]$a$1544 [19:18] $memory\csr_file$rdmux[0][3][1]$a$1544 [12] $memory\csr_file$rdmux[0][3][1]$a$1544 [10] $memory\csr_file$rdmux[0][3][1]$a$1544 [3] $memory\csr_file$rdmux[0][3][1]$a$1544 [1:0] } = { $memory\csr_file$rdmux[0][3][1]$a$1544 [28] $memory\csr_file$rdmux[0][3][1]$a$1544 [28] 1'0 $memory\csr_file$rdmux[0][3][1]$a$1544 [9] $memory\csr_file$rdmux[0][3][1]$a$1544 [11] $memory\csr_file$rdmux[0][3][1]$a$1544 [9] $memory\csr_file$rdmux[0][3][1]$a$1544 [2] 2'11 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][4][7]$1585:
      Old ports: A=$memory\csr_file$rdmux[0][4][7]$a$1586, B=$memory\csr_file$rdmux[0][4][7]$b$1587, Y=$memory\csr_file$rdmux[0][3][3]$b$1551
      New ports: A={ $memory\csr_file$rdmux[0][4][7]$a$1586 [28:25] $memory\csr_file$rdmux[0][4][7]$a$1586 [19] $memory\csr_file$rdmux[0][4][7]$a$1586 [22] $memory\csr_file$rdmux[0][4][7]$a$1586 [22] $memory\csr_file$rdmux[0][4][7]$a$1586 [20:15] $memory\csr_file$rdmux[0][4][7]$a$1586 [13] $memory\csr_file$rdmux[0][4][7]$a$1586 [13:12] $memory\csr_file$rdmux[0][4][7]$a$1586 [5] $memory\csr_file$rdmux[0][4][7]$a$1586 [10:7] $memory\csr_file$rdmux[0][4][7]$a$1586 [5] $memory\csr_file$rdmux[0][4][7]$a$1586 [5:4] }, B={ $memory\csr_file$rdmux[0][4][7]$b$1587 [25] $memory\csr_file$rdmux[0][4][7]$b$1587 [25] $memory\csr_file$rdmux[0][4][7]$b$1587 [25] $memory\csr_file$rdmux[0][4][7]$b$1587 [25:22] $memory\csr_file$rdmux[0][4][7]$b$1587 [20] 2'01 $memory\csr_file$rdmux[0][4][7]$b$1587 [17:15] $memory\csr_file$rdmux[0][4][7]$b$1587 [6] $memory\csr_file$rdmux[0][4][7]$b$1587 [11] 1'0 $memory\csr_file$rdmux[0][4][7]$b$1587 [11] $memory\csr_file$rdmux[0][4][7]$b$1587 [9] $memory\csr_file$rdmux[0][4][7]$b$1587 [9:4] }, Y={ $memory\csr_file$rdmux[0][3][3]$b$1551 [28:22] $memory\csr_file$rdmux[0][3][3]$b$1551 [20:4] }
      New connections: { $memory\csr_file$rdmux[0][3][3]$b$1551 [31:29] $memory\csr_file$rdmux[0][3][3]$b$1551 [21] $memory\csr_file$rdmux[0][3][3]$b$1551 [3:0] } = { $memory\csr_file$rdmux[0][3][3]$b$1551 [28] $memory\csr_file$rdmux[0][3][3]$b$1551 [28] $memory\csr_file$rdmux[0][3][3]$b$1551 [28] $memory\csr_file$rdmux[0][3][3]$b$1551 [20] 4'0011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][4][11]$1597:
      Old ports: A=$memory\csr_file$rdmux[0][4][11]$a$1598, B=0, Y=$memory\csr_file$rdmux[0][3][5]$b$1557
      New ports: A={ $memory\csr_file$rdmux[0][4][11]$a$1598 [7] $memory\csr_file$rdmux[0][4][11]$a$1598 [2] $memory\csr_file$rdmux[0][4][11]$a$1598 [0] }, B=3'000, Y={ $memory\csr_file$rdmux[0][3][5]$b$1557 [7] $memory\csr_file$rdmux[0][3][5]$b$1557 [2] $memory\csr_file$rdmux[0][3][5]$b$1557 [0] }
      New connections: { $memory\csr_file$rdmux[0][3][5]$b$1557 [31:8] $memory\csr_file$rdmux[0][3][5]$b$1557 [6:3] $memory\csr_file$rdmux[0][3][5]$b$1557 [1] } = { $memory\csr_file$rdmux[0][3][5]$b$1557 [0] $memory\csr_file$rdmux[0][3][5]$b$1557 [0] $memory\csr_file$rdmux[0][3][5]$b$1557 [0] $memory\csr_file$rdmux[0][3][5]$b$1557 [0] $memory\csr_file$rdmux[0][3][5]$b$1557 [7] 1'0 $memory\csr_file$rdmux[0][3][5]$b$1557 [7] $memory\csr_file$rdmux[0][3][5]$b$1557 [2] $memory\csr_file$rdmux[0][3][5]$b$1557 [0] $memory\csr_file$rdmux[0][3][5]$b$1557 [7] $memory\csr_file$rdmux[0][3][5]$b$1557 [7] $memory\csr_file$rdmux[0][3][5]$b$1557 [0] $memory\csr_file$rdmux[0][3][5]$b$1557 [2] $memory\csr_file$rdmux[0][3][5]$b$1557 [0] $memory\csr_file$rdmux[0][3][5]$b$1557 [0] $memory\csr_file$rdmux[0][3][5]$b$1557 [0] $memory\csr_file$rdmux[0][3][5]$b$1557 [2] $memory\csr_file$rdmux[0][3][5]$b$1557 [0] $memory\csr_file$rdmux[0][3][5]$b$1557 [0] $memory\csr_file$rdmux[0][3][5]$b$1557 [2] $memory\csr_file$rdmux[0][3][5]$b$1557 [7] 3'000 $memory\csr_file$rdmux[0][3][5]$b$1557 [0] $memory\csr_file$rdmux[0][3][5]$b$1557 [0] 1'0 $memory\csr_file$rdmux[0][3][5]$b$1557 [2] $memory\csr_file$rdmux[0][3][5]$b$1557 [0] }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][4][3]$1573:
      Old ports: A=$memory\csr_file$rdmux[0][4][3]$a$1574, B=$memory\csr_file$rdmux[0][4][3]$b$1575, Y=$memory\csr_file$rdmux[0][3][1]$b$1545
      New ports: A={ $memory\csr_file$rdmux[0][4][3]$a$1574 [30] $memory\csr_file$rdmux[0][4][3]$a$1574 [28] $memory\csr_file$rdmux[0][4][3]$a$1574 [26:20] $memory\csr_file$rdmux[0][4][3]$a$1574 [17:12] 1'1 $memory\csr_file$rdmux[0][4][3]$a$1574 [8:7] $memory\csr_file$rdmux[0][4][3]$a$1574 [5:4] }, B={ $memory\csr_file$rdmux[0][4][3]$b$1575 [25] $memory\csr_file$rdmux[0][4][3]$b$1575 [26] $memory\csr_file$rdmux[0][4][3]$b$1575 [26:22] $memory\csr_file$rdmux[0][4][3]$b$1575 [5] $memory\csr_file$rdmux[0][4][3]$b$1575 [20] $memory\csr_file$rdmux[0][4][3]$b$1575 [17:13] 1'0 $memory\csr_file$rdmux[0][4][3]$b$1575 [9:7] $memory\csr_file$rdmux[0][4][3]$b$1575 [5:4] }, Y={ $memory\csr_file$rdmux[0][3][1]$b$1545 [30] $memory\csr_file$rdmux[0][3][1]$b$1545 [28] $memory\csr_file$rdmux[0][3][1]$b$1545 [26:20] $memory\csr_file$rdmux[0][3][1]$b$1545 [17:12] $memory\csr_file$rdmux[0][3][1]$b$1545 [9:7] $memory\csr_file$rdmux[0][3][1]$b$1545 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][3][1]$b$1545 [31] $memory\csr_file$rdmux[0][3][1]$b$1545 [29] $memory\csr_file$rdmux[0][3][1]$b$1545 [27] $memory\csr_file$rdmux[0][3][1]$b$1545 [19:18] $memory\csr_file$rdmux[0][3][1]$b$1545 [11:10] $memory\csr_file$rdmux[0][3][1]$b$1545 [6] $memory\csr_file$rdmux[0][3][1]$b$1545 [3:0] } = { $memory\csr_file$rdmux[0][3][1]$b$1545 [28] $memory\csr_file$rdmux[0][3][1]$b$1545 [28] $memory\csr_file$rdmux[0][3][1]$b$1545 [26] 9'010100011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][4][4]$1576:
      Old ports: A=$memory\csr_file$rdmux[0][4][4]$a$1577, B=$memory\csr_file$rdmux[0][4][4]$b$1578, Y=$memory\csr_file$rdmux[0][3][2]$a$1547
      New ports: A={ $memory\csr_file$rdmux[0][4][4]$a$1577 [30] $memory\csr_file$rdmux[0][4][4]$a$1577 [28] $memory\csr_file$rdmux[0][4][4]$a$1577 [26:20] $memory\csr_file$rdmux[0][4][4]$a$1577 [17:12] 2'11 $memory\csr_file$rdmux[0][4][4]$a$1577 [7] $memory\csr_file$rdmux[0][4][4]$a$1577 [5:4] }, B={ $memory\csr_file$rdmux[0][4][4]$b$1578 [25] $memory\csr_file$rdmux[0][4][4]$b$1578 [26] $memory\csr_file$rdmux[0][4][4]$b$1578 [26:22] $memory\csr_file$rdmux[0][4][4]$b$1578 [5] $memory\csr_file$rdmux[0][4][4]$b$1578 [20] $memory\csr_file$rdmux[0][4][4]$b$1578 [17:13] 1'0 $memory\csr_file$rdmux[0][4][4]$b$1578 [9:7] $memory\csr_file$rdmux[0][4][4]$b$1578 [5:4] }, Y={ $memory\csr_file$rdmux[0][3][2]$a$1547 [30] $memory\csr_file$rdmux[0][3][2]$a$1547 [28] $memory\csr_file$rdmux[0][3][2]$a$1547 [26:20] $memory\csr_file$rdmux[0][3][2]$a$1547 [17:12] $memory\csr_file$rdmux[0][3][2]$a$1547 [9:7] $memory\csr_file$rdmux[0][3][2]$a$1547 [5:4] }
      New connections: { $memory\csr_file$rdmux[0][3][2]$a$1547 [31] $memory\csr_file$rdmux[0][3][2]$a$1547 [29] $memory\csr_file$rdmux[0][3][2]$a$1547 [27] $memory\csr_file$rdmux[0][3][2]$a$1547 [19:18] $memory\csr_file$rdmux[0][3][2]$a$1547 [11:10] $memory\csr_file$rdmux[0][3][2]$a$1547 [6] $memory\csr_file$rdmux[0][3][2]$a$1547 [3:0] } = { $memory\csr_file$rdmux[0][3][2]$a$1547 [28] $memory\csr_file$rdmux[0][3][2]$a$1547 [28] $memory\csr_file$rdmux[0][3][2]$a$1547 [26] 9'010100011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][4][1]$1567:
      Old ports: A=$memory\csr_file$rdmux[0][4][1]$a$1568, B=$memory\csr_file$rdmux[0][4][1]$b$1569, Y=$memory\csr_file$rdmux[0][3][0]$b$1542
      New ports: A={ $memory\csr_file$rdmux[0][4][1]$a$1568 [25] $memory\csr_file$rdmux[0][4][1]$a$1568 [18] $memory\csr_file$rdmux[0][4][1]$a$1568 [18] $memory\csr_file$rdmux[0][4][1]$a$1568 [18] $memory\csr_file$rdmux[0][4][1]$a$1568 [25] $memory\csr_file$rdmux[0][4][1]$a$1568 [15] $memory\csr_file$rdmux[0][4][1]$a$1568 [20] $memory\csr_file$rdmux[0][4][1]$a$1568 [22:20] $memory\csr_file$rdmux[0][4][1]$a$1568 [18] $memory\csr_file$rdmux[0][4][1]$a$1568 [15] 1'0 $memory\csr_file$rdmux[0][4][1]$a$1568 [13] $memory\csr_file$rdmux[0][4][1]$a$1568 [10:9] $memory\csr_file$rdmux[0][4][1]$a$1568 [7] $memory\csr_file$rdmux[0][4][1]$a$1568 [7] $memory\csr_file$rdmux[0][4][1]$a$1568 [5:4] 1'0 $memory\csr_file$rdmux[0][4][1]$a$1568 [2] }, B={ $memory\csr_file$rdmux[0][4][1]$b$1569 [29] $memory\csr_file$rdmux[0][4][1]$b$1569 [29:28] $memory\csr_file$rdmux[0][4][1]$b$1569 [26:25] $memory\csr_file$rdmux[0][4][1]$b$1569 [4] $memory\csr_file$rdmux[0][4][1]$b$1569 [21] $memory\csr_file$rdmux[0][4][1]$b$1569 [22:21] $memory\csr_file$rdmux[0][4][1]$b$1569 [4] $memory\csr_file$rdmux[0][4][1]$b$1569 [18] $memory\csr_file$rdmux[0][4][1]$b$1569 [15:13] $memory\csr_file$rdmux[0][4][1]$b$1569 [8] $memory\csr_file$rdmux[0][4][1]$b$1569 [8] $memory\csr_file$rdmux[0][4][1]$b$1569 [8:7] $memory\csr_file$rdmux[0][4][1]$b$1569 [5:4] $memory\csr_file$rdmux[0][4][1]$b$1569 [2] $memory\csr_file$rdmux[0][4][1]$b$1569 [2] }, Y={ $memory\csr_file$rdmux[0][3][0]$b$1542 [30:28] $memory\csr_file$rdmux[0][3][0]$b$1542 [26:20] $memory\csr_file$rdmux[0][3][0]$b$1542 [18] $memory\csr_file$rdmux[0][3][0]$b$1542 [15:13] $memory\csr_file$rdmux[0][3][0]$b$1542 [10:7] $memory\csr_file$rdmux[0][3][0]$b$1542 [5:2] }
      New connections: { $memory\csr_file$rdmux[0][3][0]$b$1542 [31] $memory\csr_file$rdmux[0][3][0]$b$1542 [27] $memory\csr_file$rdmux[0][3][0]$b$1542 [19] $memory\csr_file$rdmux[0][3][0]$b$1542 [17:16] $memory\csr_file$rdmux[0][3][0]$b$1542 [12:11] $memory\csr_file$rdmux[0][3][0]$b$1542 [6] $memory\csr_file$rdmux[0][3][0]$b$1542 [1:0] } = { $memory\csr_file$rdmux[0][3][0]$b$1542 [29] $memory\csr_file$rdmux[0][3][0]$b$1542 [26] 1'0 $memory\csr_file$rdmux[0][3][0]$b$1542 [15] $memory\csr_file$rdmux[0][3][0]$b$1542 [15] 2'00 $memory\csr_file$rdmux[0][3][0]$b$1542 [3] 2'11 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][4][5]$1579:
      Old ports: A=$memory\csr_file$rdmux[0][4][5]$a$1580, B=$memory\csr_file$rdmux[0][4][5]$b$1581, Y=$memory\csr_file$rdmux[0][3][2]$b$1548
      New ports: A={ $memory\csr_file$rdmux[0][4][5]$a$1580 [30] $memory\csr_file$rdmux[0][4][5]$a$1580 [28] $memory\csr_file$rdmux[0][4][5]$a$1580 [26:20] $memory\csr_file$rdmux[0][4][5]$a$1580 [17:12] 1'1 $memory\csr_file$rdmux[0][4][5]$a$1580 [8:7] 1'0 $memory\csr_file$rdmux[0][4][5]$a$1580 [5:4] }, B={ $memory\csr_file$rdmux[0][4][5]$b$1581 [30] $memory\csr_file$rdmux[0][4][5]$b$1581 [28] $memory\csr_file$rdmux[0][4][5]$b$1581 [26] $memory\csr_file$rdmux[0][4][5]$b$1581 [13] 1'0 $memory\csr_file$rdmux[0][4][5]$b$1581 [23:22] $memory\csr_file$rdmux[0][4][5]$b$1581 [5] $memory\csr_file$rdmux[0][4][5]$b$1581 [20] $memory\csr_file$rdmux[0][4][5]$b$1581 [17:15] $memory\csr_file$rdmux[0][4][5]$b$1581 [6] $memory\csr_file$rdmux[0][4][5]$b$1581 [13] 1'0 $memory\csr_file$rdmux[0][4][5]$b$1581 [9:4] }, Y={ $memory\csr_file$rdmux[0][3][2]$b$1548 [30] $memory\csr_file$rdmux[0][3][2]$b$1548 [28] $memory\csr_file$rdmux[0][3][2]$b$1548 [26:20] $memory\csr_file$rdmux[0][3][2]$b$1548 [17:12] $memory\csr_file$rdmux[0][3][2]$b$1548 [9:4] }
      New connections: { $memory\csr_file$rdmux[0][3][2]$b$1548 [31] $memory\csr_file$rdmux[0][3][2]$b$1548 [29] $memory\csr_file$rdmux[0][3][2]$b$1548 [27] $memory\csr_file$rdmux[0][3][2]$b$1548 [19:18] $memory\csr_file$rdmux[0][3][2]$b$1548 [11:10] $memory\csr_file$rdmux[0][3][2]$b$1548 [3:0] } = { $memory\csr_file$rdmux[0][3][2]$b$1548 [28] $memory\csr_file$rdmux[0][3][2]$b$1548 [28] $memory\csr_file$rdmux[0][3][2]$b$1548 [26] 8'01010011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][4][6]$1582:
      Old ports: A=$memory\csr_file$rdmux[0][4][6]$a$1583, B=$memory\csr_file$rdmux[0][4][6]$b$1584, Y=$memory\csr_file$rdmux[0][3][3]$a$1550
      New ports: A={ $memory\csr_file$rdmux[0][4][6]$a$1583 [23] $memory\csr_file$rdmux[0][4][6]$a$1583 [25] $memory\csr_file$rdmux[0][4][6]$a$1583 [27] $memory\csr_file$rdmux[0][4][6]$a$1583 [23] $memory\csr_file$rdmux[0][4][6]$a$1583 [25:22] $memory\csr_file$rdmux[0][4][6]$a$1583 [20] $memory\csr_file$rdmux[0][4][6]$a$1583 [20] $memory\csr_file$rdmux[0][4][6]$a$1583 [18] $memory\csr_file$rdmux[0][4][6]$a$1583 [15] $memory\csr_file$rdmux[0][4][6]$a$1583 [16:15] $memory\csr_file$rdmux[0][4][6]$a$1583 [6] $memory\csr_file$rdmux[0][4][6]$a$1583 [13] 1'0 $memory\csr_file$rdmux[0][4][6]$a$1583 [6] $memory\csr_file$rdmux[0][4][6]$a$1583 [10:4] 1'0 }, B={ $memory\csr_file$rdmux[0][4][6]$b$1584 [30] 2'00 $memory\csr_file$rdmux[0][4][6]$b$1584 [26:23] $memory\csr_file$rdmux[0][4][6]$b$1584 [11] $memory\csr_file$rdmux[0][4][6]$b$1584 [21:20] $memory\csr_file$rdmux[0][4][6]$b$1584 [18] $memory\csr_file$rdmux[0][4][6]$b$1584 [12] $memory\csr_file$rdmux[0][4][6]$b$1584 [16:4] $memory\csr_file$rdmux[0][4][6]$b$1584 [2] }, Y={ $memory\csr_file$rdmux[0][3][3]$a$1550 [30] $memory\csr_file$rdmux[0][3][3]$a$1550 [28:20] $memory\csr_file$rdmux[0][3][3]$a$1550 [18:4] $memory\csr_file$rdmux[0][3][3]$a$1550 [2] }
      New connections: { $memory\csr_file$rdmux[0][3][3]$a$1550 [31] $memory\csr_file$rdmux[0][3][3]$a$1550 [29] $memory\csr_file$rdmux[0][3][3]$a$1550 [19] $memory\csr_file$rdmux[0][3][3]$a$1550 [3] $memory\csr_file$rdmux[0][3][3]$a$1550 [1:0] } = { $memory\csr_file$rdmux[0][3][3]$a$1550 [27] $memory\csr_file$rdmux[0][3][3]$a$1550 [27] 4'0011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][4][8]$1588:
      Old ports: A=$memory\csr_file$rdmux[0][4][8]$a$1589, B=$memory\csr_file$rdmux[0][4][8]$b$1590, Y=$memory\csr_file$rdmux[0][3][4]$a$1553
      New ports: A={ $memory\csr_file$rdmux[0][4][8]$a$1589 [30] $memory\csr_file$rdmux[0][4][8]$a$1589 [12] $memory\csr_file$rdmux[0][4][8]$a$1589 [23:20] $memory\csr_file$rdmux[0][4][8]$a$1589 [17:15] $memory\csr_file$rdmux[0][4][8]$a$1589 [13] $memory\csr_file$rdmux[0][4][8]$a$1589 [13:11] $memory\csr_file$rdmux[0][4][8]$a$1589 [4] $memory\csr_file$rdmux[0][4][8]$a$1589 [9] $memory\csr_file$rdmux[0][4][8]$a$1589 [4] $memory\csr_file$rdmux[0][4][8]$a$1589 [7:4] $memory\csr_file$rdmux[0][4][8]$a$1589 [2] }, B={ $memory\csr_file$rdmux[0][4][8]$b$1590 [11] $memory\csr_file$rdmux[0][4][8]$b$1590 [11] $memory\csr_file$rdmux[0][4][8]$b$1590 [21] $memory\csr_file$rdmux[0][4][8]$b$1590 [21] $memory\csr_file$rdmux[0][4][8]$b$1590 [21:20] $memory\csr_file$rdmux[0][4][8]$b$1590 [17:4] $memory\csr_file$rdmux[0][4][8]$b$1590 [2] }, Y={ $memory\csr_file$rdmux[0][3][4]$a$1553 [30] $memory\csr_file$rdmux[0][3][4]$a$1553 [25] $memory\csr_file$rdmux[0][3][4]$a$1553 [23:20] $memory\csr_file$rdmux[0][3][4]$a$1553 [17:4] $memory\csr_file$rdmux[0][3][4]$a$1553 [2] }
      New connections: { $memory\csr_file$rdmux[0][3][4]$a$1553 [31] $memory\csr_file$rdmux[0][3][4]$a$1553 [29:26] $memory\csr_file$rdmux[0][3][4]$a$1553 [24] $memory\csr_file$rdmux[0][3][4]$a$1553 [19:18] $memory\csr_file$rdmux[0][3][4]$a$1553 [3] $memory\csr_file$rdmux[0][3][4]$a$1553 [1:0] } = { $memory\csr_file$rdmux[0][3][4]$a$1553 [25] $memory\csr_file$rdmux[0][3][4]$a$1553 [25] $memory\csr_file$rdmux[0][3][4]$a$1553 [25] $memory\csr_file$rdmux[0][3][4]$a$1553 [25] $memory\csr_file$rdmux[0][3][4]$a$1553 [25] $memory\csr_file$rdmux[0][3][4]$a$1553 [13] 1'0 $memory\csr_file$rdmux[0][3][4]$a$1553 [16] 3'011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][4][9]$1591:
      Old ports: A=$memory\csr_file$rdmux[0][4][9]$a$1592, B=$memory\csr_file$rdmux[0][4][9]$b$1593, Y=$memory\csr_file$rdmux[0][3][4]$b$1554
      New ports: A={ $memory\csr_file$rdmux[0][4][9]$a$1592 [5] $memory\csr_file$rdmux[0][4][9]$a$1592 [11] $memory\csr_file$rdmux[0][4][9]$a$1592 [11] $memory\csr_file$rdmux[0][4][9]$a$1592 [11] $memory\csr_file$rdmux[0][4][9]$a$1592 [11] $memory\csr_file$rdmux[0][4][9]$a$1592 [12] $memory\csr_file$rdmux[0][4][9]$a$1592 [8] $memory\csr_file$rdmux[0][4][9]$a$1592 [17] $memory\csr_file$rdmux[0][4][9]$a$1592 [15:14] $memory\csr_file$rdmux[0][4][9]$a$1592 [12] $memory\csr_file$rdmux[0][4][9]$a$1592 [12:4] 1'0 }, B={ $memory\csr_file$rdmux[0][4][9]$b$1593 [27] $memory\csr_file$rdmux[0][4][9]$b$1593 [5] $memory\csr_file$rdmux[0][4][9]$b$1593 [25] $memory\csr_file$rdmux[0][4][9]$b$1593 [23:22] 1'0 $memory\csr_file$rdmux[0][4][9]$b$1593 [20] $memory\csr_file$rdmux[0][4][9]$b$1593 [5] $memory\csr_file$rdmux[0][4][9]$b$1593 [15] $memory\csr_file$rdmux[0][4][9]$b$1593 [2] $memory\csr_file$rdmux[0][4][9]$b$1593 [13] $memory\csr_file$rdmux[0][4][9]$b$1593 [6] $memory\csr_file$rdmux[0][4][9]$b$1593 [11:4] $memory\csr_file$rdmux[0][4][9]$b$1593 [2] }, Y={ $memory\csr_file$rdmux[0][3][4]$b$1554 [27:25] $memory\csr_file$rdmux[0][3][4]$b$1554 [23:20] $memory\csr_file$rdmux[0][3][4]$b$1554 [17] $memory\csr_file$rdmux[0][3][4]$b$1554 [15:4] $memory\csr_file$rdmux[0][3][4]$b$1554 [2] }
      New connections: { $memory\csr_file$rdmux[0][3][4]$b$1554 [31:28] $memory\csr_file$rdmux[0][3][4]$b$1554 [24] $memory\csr_file$rdmux[0][3][4]$b$1554 [19:18] $memory\csr_file$rdmux[0][3][4]$b$1554 [16] $memory\csr_file$rdmux[0][3][4]$b$1554 [3] $memory\csr_file$rdmux[0][3][4]$b$1554 [1:0] } = { $memory\csr_file$rdmux[0][3][4]$b$1554 [5] $memory\csr_file$rdmux[0][3][4]$b$1554 [5] $memory\csr_file$rdmux[0][3][4]$b$1554 [5] $memory\csr_file$rdmux[0][3][4]$b$1554 [5] 1'0 $memory\csr_file$rdmux[0][3][4]$b$1554 [2] 2'11 $memory\csr_file$rdmux[0][3][4]$b$1554 [2] 2'11 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][4][0]$1564:
      Old ports: A=$memory\csr_file$rdmux[0][4][0]$a$1565, B=$memory\csr_file$rdmux[0][4][0]$b$1566, Y=$memory\csr_file$rdmux[0][3][0]$a$1541
      New ports: A={ $memory\csr_file$rdmux[0][4][0]$a$1565 [30] $memory\csr_file$rdmux[0][4][0]$a$1565 [25] $memory\csr_file$rdmux[0][4][0]$a$1565 [25] $memory\csr_file$rdmux[0][4][0]$a$1565 [10] $memory\csr_file$rdmux[0][4][0]$a$1565 [25:23] $memory\csr_file$rdmux[0][4][0]$a$1565 [3] 1'0 $memory\csr_file$rdmux[0][4][0]$a$1565 [9] 2'00 $memory\csr_file$rdmux[0][4][0]$a$1565 [16] 1'0 $memory\csr_file$rdmux[0][4][0]$a$1565 [13:12] $memory\csr_file$rdmux[0][4][0]$a$1565 [10:8] 1'0 $memory\csr_file$rdmux[0][4][0]$a$1565 [5:2] }, B={ $memory\csr_file$rdmux[0][4][0]$b$1566 [21] $memory\csr_file$rdmux[0][4][0]$b$1566 [24:23] $memory\csr_file$rdmux[0][4][0]$b$1566 [3] $memory\csr_file$rdmux[0][4][0]$b$1566 [25:23] $memory\csr_file$rdmux[0][4][0]$b$1566 [21] $memory\csr_file$rdmux[0][4][0]$b$1566 [21] 1'0 $memory\csr_file$rdmux[0][4][0]$b$1566 [18:15] 1'0 $memory\csr_file$rdmux[0][4][0]$b$1566 [12] $memory\csr_file$rdmux[0][4][0]$b$1566 [4] $memory\csr_file$rdmux[0][4][0]$b$1566 [9:7] $memory\csr_file$rdmux[0][4][0]$b$1566 [2] $memory\csr_file$rdmux[0][4][0]$b$1566 [4:2] }, Y={ $memory\csr_file$rdmux[0][3][0]$a$1541 [30] $memory\csr_file$rdmux[0][3][0]$a$1541 [28:20] $memory\csr_file$rdmux[0][3][0]$a$1541 [18:15] $memory\csr_file$rdmux[0][3][0]$a$1541 [13:12] $memory\csr_file$rdmux[0][3][0]$a$1541 [10:7] $memory\csr_file$rdmux[0][3][0]$a$1541 [5:2] }
      New connections: { $memory\csr_file$rdmux[0][3][0]$a$1541 [31] $memory\csr_file$rdmux[0][3][0]$a$1541 [29] $memory\csr_file$rdmux[0][3][0]$a$1541 [19] $memory\csr_file$rdmux[0][3][0]$a$1541 [14] $memory\csr_file$rdmux[0][3][0]$a$1541 [11] $memory\csr_file$rdmux[0][3][0]$a$1541 [6] $memory\csr_file$rdmux[0][3][0]$a$1541 [1:0] } = { $memory\csr_file$rdmux[0][3][0]$a$1541 [27] $memory\csr_file$rdmux[0][3][0]$a$1541 [27] 3'000 $memory\csr_file$rdmux[0][3][0]$a$1541 [3] 2'11 }
  Optimizing cells in module \csr_file.
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][3][2]$1546:
      Old ports: A=$memory\csr_file$rdmux[0][3][2]$a$1547, B=$memory\csr_file$rdmux[0][3][2]$b$1548, Y=$memory\csr_file$rdmux[0][2][1]$a$1532
      New ports: A={ $memory\csr_file$rdmux[0][3][2]$a$1547 [30] $memory\csr_file$rdmux[0][3][2]$a$1547 [28] $memory\csr_file$rdmux[0][3][2]$a$1547 [26:20] $memory\csr_file$rdmux[0][3][2]$a$1547 [17:12] $memory\csr_file$rdmux[0][3][2]$a$1547 [9:7] 1'0 $memory\csr_file$rdmux[0][3][2]$a$1547 [5:4] }, B={ $memory\csr_file$rdmux[0][3][2]$b$1548 [30] $memory\csr_file$rdmux[0][3][2]$b$1548 [28] $memory\csr_file$rdmux[0][3][2]$b$1548 [26:20] $memory\csr_file$rdmux[0][3][2]$b$1548 [17:12] $memory\csr_file$rdmux[0][3][2]$b$1548 [9:4] }, Y={ $memory\csr_file$rdmux[0][2][1]$a$1532 [30] $memory\csr_file$rdmux[0][2][1]$a$1532 [28] $memory\csr_file$rdmux[0][2][1]$a$1532 [26:20] $memory\csr_file$rdmux[0][2][1]$a$1532 [17:12] $memory\csr_file$rdmux[0][2][1]$a$1532 [9:4] }
      New connections: { $memory\csr_file$rdmux[0][2][1]$a$1532 [31] $memory\csr_file$rdmux[0][2][1]$a$1532 [29] $memory\csr_file$rdmux[0][2][1]$a$1532 [27] $memory\csr_file$rdmux[0][2][1]$a$1532 [19:18] $memory\csr_file$rdmux[0][2][1]$a$1532 [11:10] $memory\csr_file$rdmux[0][2][1]$a$1532 [3:0] } = { $memory\csr_file$rdmux[0][2][1]$a$1532 [28] $memory\csr_file$rdmux[0][2][1]$a$1532 [28] $memory\csr_file$rdmux[0][2][1]$a$1532 [26] 8'01010011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][3][3]$1549:
      Old ports: A=$memory\csr_file$rdmux[0][3][3]$a$1550, B=$memory\csr_file$rdmux[0][3][3]$b$1551, Y=$memory\csr_file$rdmux[0][2][1]$b$1533
      New ports: A={ $memory\csr_file$rdmux[0][3][3]$a$1550 [30] $memory\csr_file$rdmux[0][3][3]$a$1550 [27] $memory\csr_file$rdmux[0][3][3]$a$1550 [28:20] 1'0 $memory\csr_file$rdmux[0][3][3]$a$1550 [18:4] $memory\csr_file$rdmux[0][3][3]$a$1550 [2] }, B={ $memory\csr_file$rdmux[0][3][3]$b$1551 [28] $memory\csr_file$rdmux[0][3][3]$b$1551 [28] $memory\csr_file$rdmux[0][3][3]$b$1551 [28:22] $memory\csr_file$rdmux[0][3][3]$b$1551 [20] $memory\csr_file$rdmux[0][3][3]$b$1551 [20:4] 1'0 }, Y={ $memory\csr_file$rdmux[0][2][1]$b$1533 [30:4] $memory\csr_file$rdmux[0][2][1]$b$1533 [2] }
      New connections: { $memory\csr_file$rdmux[0][2][1]$b$1533 [31] $memory\csr_file$rdmux[0][2][1]$b$1533 [3] $memory\csr_file$rdmux[0][2][1]$b$1533 [1:0] } = { $memory\csr_file$rdmux[0][2][1]$b$1533 [29] 3'011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][3][0]$1540:
      Old ports: A=$memory\csr_file$rdmux[0][3][0]$a$1541, B=$memory\csr_file$rdmux[0][3][0]$b$1542, Y=$memory\csr_file$rdmux[0][2][0]$a$1529
      New ports: A={ $memory\csr_file$rdmux[0][3][0]$a$1541 [30] $memory\csr_file$rdmux[0][3][0]$a$1541 [27] $memory\csr_file$rdmux[0][3][0]$a$1541 [28:20] $memory\csr_file$rdmux[0][3][0]$a$1541 [18:15] 1'0 $memory\csr_file$rdmux[0][3][0]$a$1541 [13:12] $memory\csr_file$rdmux[0][3][0]$a$1541 [10:7] $memory\csr_file$rdmux[0][3][0]$a$1541 [5:2] }, B={ $memory\csr_file$rdmux[0][3][0]$b$1542 [30:28] $memory\csr_file$rdmux[0][3][0]$b$1542 [26] $memory\csr_file$rdmux[0][3][0]$b$1542 [26:20] $memory\csr_file$rdmux[0][3][0]$b$1542 [18] $memory\csr_file$rdmux[0][3][0]$b$1542 [15] $memory\csr_file$rdmux[0][3][0]$b$1542 [15] $memory\csr_file$rdmux[0][3][0]$b$1542 [15:13] 1'0 $memory\csr_file$rdmux[0][3][0]$b$1542 [10:7] $memory\csr_file$rdmux[0][3][0]$b$1542 [5:2] }, Y={ $memory\csr_file$rdmux[0][2][0]$a$1529 [30:20] $memory\csr_file$rdmux[0][2][0]$a$1529 [18:12] $memory\csr_file$rdmux[0][2][0]$a$1529 [10:7] $memory\csr_file$rdmux[0][2][0]$a$1529 [5:2] }
      New connections: { $memory\csr_file$rdmux[0][2][0]$a$1529 [31] $memory\csr_file$rdmux[0][2][0]$a$1529 [19] $memory\csr_file$rdmux[0][2][0]$a$1529 [11] $memory\csr_file$rdmux[0][2][0]$a$1529 [6] $memory\csr_file$rdmux[0][2][0]$a$1529 [1:0] } = { $memory\csr_file$rdmux[0][2][0]$a$1529 [29] 2'00 $memory\csr_file$rdmux[0][2][0]$a$1529 [3] 2'11 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][3][1]$1543:
      Old ports: A=$memory\csr_file$rdmux[0][3][1]$a$1544, B=$memory\csr_file$rdmux[0][3][1]$b$1545, Y=$memory\csr_file$rdmux[0][2][0]$b$1530
      New ports: A={ $memory\csr_file$rdmux[0][3][1]$a$1544 [30] $memory\csr_file$rdmux[0][3][1]$a$1544 [28:20] $memory\csr_file$rdmux[0][3][1]$a$1544 [17:13] $memory\csr_file$rdmux[0][3][1]$a$1544 [11] $memory\csr_file$rdmux[0][3][1]$a$1544 [11] $memory\csr_file$rdmux[0][3][1]$a$1544 [9] $memory\csr_file$rdmux[0][3][1]$a$1544 [9:4] $memory\csr_file$rdmux[0][3][1]$a$1544 [2] }, B={ $memory\csr_file$rdmux[0][3][1]$b$1545 [30] $memory\csr_file$rdmux[0][3][1]$b$1545 [28] $memory\csr_file$rdmux[0][3][1]$b$1545 [26] $memory\csr_file$rdmux[0][3][1]$b$1545 [26:20] $memory\csr_file$rdmux[0][3][1]$b$1545 [17:12] 2'01 $memory\csr_file$rdmux[0][3][1]$b$1545 [9:7] 1'0 $memory\csr_file$rdmux[0][3][1]$b$1545 [5:4] 1'0 }, Y={ $memory\csr_file$rdmux[0][2][0]$b$1530 [30] $memory\csr_file$rdmux[0][2][0]$b$1530 [28:20] $memory\csr_file$rdmux[0][2][0]$b$1530 [17:4] $memory\csr_file$rdmux[0][2][0]$b$1530 [2] }
      New connections: { $memory\csr_file$rdmux[0][2][0]$b$1530 [31] $memory\csr_file$rdmux[0][2][0]$b$1530 [29] $memory\csr_file$rdmux[0][2][0]$b$1530 [19:18] $memory\csr_file$rdmux[0][2][0]$b$1530 [3] $memory\csr_file$rdmux[0][2][0]$b$1530 [1:0] } = { $memory\csr_file$rdmux[0][2][0]$b$1530 [28] $memory\csr_file$rdmux[0][2][0]$b$1530 [28] 1'0 $memory\csr_file$rdmux[0][2][0]$b$1530 [10] $memory\csr_file$rdmux[0][2][0]$b$1530 [2] 2'11 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][3][4]$1552:
      Old ports: A=$memory\csr_file$rdmux[0][3][4]$a$1553, B=$memory\csr_file$rdmux[0][3][4]$b$1554, Y=$memory\csr_file$rdmux[0][2][2]$a$1535
      New ports: A={ $memory\csr_file$rdmux[0][3][4]$a$1553 [30] $memory\csr_file$rdmux[0][3][4]$a$1553 [25] $memory\csr_file$rdmux[0][3][4]$a$1553 [25] $memory\csr_file$rdmux[0][3][4]$a$1553 [25] $memory\csr_file$rdmux[0][3][4]$a$1553 [25] $memory\csr_file$rdmux[0][3][4]$a$1553 [13] $memory\csr_file$rdmux[0][3][4]$a$1553 [23:20] $memory\csr_file$rdmux[0][3][4]$a$1553 [17:4] 1'0 $memory\csr_file$rdmux[0][3][4]$a$1553 [2] }, B={ $memory\csr_file$rdmux[0][3][4]$b$1554 [5] $memory\csr_file$rdmux[0][3][4]$b$1554 [5] $memory\csr_file$rdmux[0][3][4]$b$1554 [27:25] 1'0 $memory\csr_file$rdmux[0][3][4]$b$1554 [23:20] $memory\csr_file$rdmux[0][3][4]$b$1554 [17] 1'1 $memory\csr_file$rdmux[0][3][4]$b$1554 [15:4] $memory\csr_file$rdmux[0][3][4]$b$1554 [2] $memory\csr_file$rdmux[0][3][4]$b$1554 [2] }, Y={ $memory\csr_file$rdmux[0][2][2]$a$1535 [30] $memory\csr_file$rdmux[0][2][2]$a$1535 [28:20] $memory\csr_file$rdmux[0][2][2]$a$1535 [17:2] }
      New connections: { $memory\csr_file$rdmux[0][2][2]$a$1535 [31] $memory\csr_file$rdmux[0][2][2]$a$1535 [29] $memory\csr_file$rdmux[0][2][2]$a$1535 [19:18] $memory\csr_file$rdmux[0][2][2]$a$1535 [1:0] } = { $memory\csr_file$rdmux[0][2][2]$a$1535 [28] $memory\csr_file$rdmux[0][2][2]$a$1535 [28] $memory\csr_file$rdmux[0][2][2]$a$1535 [3] $memory\csr_file$rdmux[0][2][2]$a$1535 [16] 2'11 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][3][5]$1555:
      Old ports: A=$memory\csr_file$rdmux[0][3][5]$a$1556, B=$memory\csr_file$rdmux[0][3][5]$b$1557, Y=$memory\csr_file$rdmux[0][2][2]$b$1536
      New ports: A={ $memory\csr_file$rdmux[0][3][5]$a$1556 [26] $memory\csr_file$rdmux[0][3][5]$a$1556 [26] $memory\csr_file$rdmux[0][3][5]$a$1556 [26:20] $memory\csr_file$rdmux[0][3][5]$a$1556 [17] $memory\csr_file$rdmux[0][3][5]$a$1556 [15] $memory\csr_file$rdmux[0][3][5]$a$1556 [13] $memory\csr_file$rdmux[0][3][5]$a$1556 [11:7] 1'0 $memory\csr_file$rdmux[0][3][5]$a$1556 [5:4] 2'01 }, B={ $memory\csr_file$rdmux[0][3][5]$b$1557 [0] $memory\csr_file$rdmux[0][3][5]$b$1557 [7] 1'0 $memory\csr_file$rdmux[0][3][5]$b$1557 [7] $memory\csr_file$rdmux[0][3][5]$b$1557 [2] $memory\csr_file$rdmux[0][3][5]$b$1557 [0] $memory\csr_file$rdmux[0][3][5]$b$1557 [7] $memory\csr_file$rdmux[0][3][5]$b$1557 [7] $memory\csr_file$rdmux[0][3][5]$b$1557 [0] $memory\csr_file$rdmux[0][3][5]$b$1557 [0] $memory\csr_file$rdmux[0][3][5]$b$1557 [2] $memory\csr_file$rdmux[0][3][5]$b$1557 [0] $memory\csr_file$rdmux[0][3][5]$b$1557 [7] 3'000 $memory\csr_file$rdmux[0][3][5]$b$1557 [7] $memory\csr_file$rdmux[0][3][5]$b$1557 [0] $memory\csr_file$rdmux[0][3][5]$b$1557 [0] 1'0 $memory\csr_file$rdmux[0][3][5]$b$1557 [2] $memory\csr_file$rdmux[0][3][5]$b$1557 [0] }, Y={ $memory\csr_file$rdmux[0][2][2]$b$1536 [28:20] $memory\csr_file$rdmux[0][2][2]$b$1536 [17] $memory\csr_file$rdmux[0][2][2]$b$1536 [15] $memory\csr_file$rdmux[0][2][2]$b$1536 [13] $memory\csr_file$rdmux[0][2][2]$b$1536 [11:4] $memory\csr_file$rdmux[0][2][2]$b$1536 [2] $memory\csr_file$rdmux[0][2][2]$b$1536 [0] }
      New connections: { $memory\csr_file$rdmux[0][2][2]$b$1536 [31:29] $memory\csr_file$rdmux[0][2][2]$b$1536 [19:18] $memory\csr_file$rdmux[0][2][2]$b$1536 [16] $memory\csr_file$rdmux[0][2][2]$b$1536 [14] $memory\csr_file$rdmux[0][2][2]$b$1536 [12] $memory\csr_file$rdmux[0][2][2]$b$1536 [3] $memory\csr_file$rdmux[0][2][2]$b$1536 [1] } = { $memory\csr_file$rdmux[0][2][2]$b$1536 [28] $memory\csr_file$rdmux[0][2][2]$b$1536 [28] $memory\csr_file$rdmux[0][2][2]$b$1536 [28] $memory\csr_file$rdmux[0][2][2]$b$1536 [2] $memory\csr_file$rdmux[0][2][2]$b$1536 [0] $memory\csr_file$rdmux[0][2][2]$b$1536 [0] $memory\csr_file$rdmux[0][2][2]$b$1536 [6] $memory\csr_file$rdmux[0][2][2]$b$1536 [2] $memory\csr_file$rdmux[0][2][2]$b$1536 [2] $memory\csr_file$rdmux[0][2][2]$b$1536 [0] }
  Optimizing cells in module \csr_file.
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][2][0]$1528:
      Old ports: A=$memory\csr_file$rdmux[0][2][0]$a$1529, B=$memory\csr_file$rdmux[0][2][0]$b$1530, Y=$memory\csr_file$rdmux[0][1][0]$a$1523
      New ports: A={ $memory\csr_file$rdmux[0][2][0]$a$1529 [30:20] $memory\csr_file$rdmux[0][2][0]$a$1529 [18:12] 1'0 $memory\csr_file$rdmux[0][2][0]$a$1529 [10:7] $memory\csr_file$rdmux[0][2][0]$a$1529 [3] $memory\csr_file$rdmux[0][2][0]$a$1529 [5:2] }, B={ $memory\csr_file$rdmux[0][2][0]$b$1530 [30] $memory\csr_file$rdmux[0][2][0]$b$1530 [28] $memory\csr_file$rdmux[0][2][0]$b$1530 [28:20] $memory\csr_file$rdmux[0][2][0]$b$1530 [10] $memory\csr_file$rdmux[0][2][0]$b$1530 [17:4] $memory\csr_file$rdmux[0][2][0]$b$1530 [2] $memory\csr_file$rdmux[0][2][0]$b$1530 [2] }, Y={ $memory\csr_file$rdmux[0][1][0]$a$1523 [30:20] $memory\csr_file$rdmux[0][1][0]$a$1523 [18:2] }
      New connections: { $memory\csr_file$rdmux[0][1][0]$a$1523 [31] $memory\csr_file$rdmux[0][1][0]$a$1523 [19] $memory\csr_file$rdmux[0][1][0]$a$1523 [1:0] } = { $memory\csr_file$rdmux[0][1][0]$a$1523 [29] 3'011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][2][1]$1531:
      Old ports: A=$memory\csr_file$rdmux[0][2][1]$a$1532, B=$memory\csr_file$rdmux[0][2][1]$b$1533, Y=$memory\csr_file$rdmux[0][1][0]$b$1524
      New ports: A={ $memory\csr_file$rdmux[0][2][1]$a$1532 [30] $memory\csr_file$rdmux[0][2][1]$a$1532 [28] $memory\csr_file$rdmux[0][2][1]$a$1532 [28] $memory\csr_file$rdmux[0][2][1]$a$1532 [26] $memory\csr_file$rdmux[0][2][1]$a$1532 [26:20] 2'01 $memory\csr_file$rdmux[0][2][1]$a$1532 [17:12] 2'01 $memory\csr_file$rdmux[0][2][1]$a$1532 [9:4] 1'0 }, B={ $memory\csr_file$rdmux[0][2][1]$b$1533 [30:4] $memory\csr_file$rdmux[0][2][1]$b$1533 [2] }, Y={ $memory\csr_file$rdmux[0][1][0]$b$1524 [30:4] $memory\csr_file$rdmux[0][1][0]$b$1524 [2] }
      New connections: { $memory\csr_file$rdmux[0][1][0]$b$1524 [31] $memory\csr_file$rdmux[0][1][0]$b$1524 [3] $memory\csr_file$rdmux[0][1][0]$b$1524 [1:0] } = { $memory\csr_file$rdmux[0][1][0]$b$1524 [29] 3'011 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][2][2]$1534:
      Old ports: A=$memory\csr_file$rdmux[0][2][2]$a$1535, B=$memory\csr_file$rdmux[0][2][2]$b$1536, Y=$memory\csr_file$rdmux[0][1][1]$a$1526
      New ports: A={ $memory\csr_file$rdmux[0][2][2]$a$1535 [30] $memory\csr_file$rdmux[0][2][2]$a$1535 [28:20] $memory\csr_file$rdmux[0][2][2]$a$1535 [17:2] 1'1 }, B={ $memory\csr_file$rdmux[0][2][2]$b$1536 [28] $memory\csr_file$rdmux[0][2][2]$b$1536 [28:20] $memory\csr_file$rdmux[0][2][2]$b$1536 [17] $memory\csr_file$rdmux[0][2][2]$b$1536 [0] $memory\csr_file$rdmux[0][2][2]$b$1536 [15] $memory\csr_file$rdmux[0][2][2]$b$1536 [6] $memory\csr_file$rdmux[0][2][2]$b$1536 [13] $memory\csr_file$rdmux[0][2][2]$b$1536 [2] $memory\csr_file$rdmux[0][2][2]$b$1536 [11:4] $memory\csr_file$rdmux[0][2][2]$b$1536 [2] $memory\csr_file$rdmux[0][2][2]$b$1536 [2] $memory\csr_file$rdmux[0][2][2]$b$1536 [0] }, Y={ $memory\csr_file$rdmux[0][1][1]$a$1526 [30] $memory\csr_file$rdmux[0][1][1]$a$1526 [28:20] $memory\csr_file$rdmux[0][1][1]$a$1526 [17:2] $memory\csr_file$rdmux[0][1][1]$a$1526 [0] }
      New connections: { $memory\csr_file$rdmux[0][1][1]$a$1526 [31] $memory\csr_file$rdmux[0][1][1]$a$1526 [29] $memory\csr_file$rdmux[0][1][1]$a$1526 [19:18] $memory\csr_file$rdmux[0][1][1]$a$1526 [1] } = { $memory\csr_file$rdmux[0][1][1]$a$1526 [28] $memory\csr_file$rdmux[0][1][1]$a$1526 [28] $memory\csr_file$rdmux[0][1][1]$a$1526 [3] $memory\csr_file$rdmux[0][1][1]$a$1526 [16] $memory\csr_file$rdmux[0][1][1]$a$1526 [0] }
  Optimizing cells in module \csr_file.
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][1][0]$1522:
      Old ports: A=$memory\csr_file$rdmux[0][1][0]$a$1523, B=$memory\csr_file$rdmux[0][1][0]$b$1524, Y=$memory\csr_file$rdmux[0][0][0]$a$1520
      New ports: A={ $memory\csr_file$rdmux[0][1][0]$a$1523 [30:20] 1'0 $memory\csr_file$rdmux[0][1][0]$a$1523 [18:2] }, B={ $memory\csr_file$rdmux[0][1][0]$b$1524 [30:4] 1'0 $memory\csr_file$rdmux[0][1][0]$b$1524 [2] }, Y=$memory\csr_file$rdmux[0][0][0]$a$1520 [30:2]
      New connections: { $memory\csr_file$rdmux[0][0][0]$a$1520 [31] $memory\csr_file$rdmux[0][0][0]$a$1520 [1:0] } = { $memory\csr_file$rdmux[0][0][0]$a$1520 [29] 2'11 }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][1][1]$1525:
      Old ports: A=$memory\csr_file$rdmux[0][1][1]$a$1526, B=0, Y=$memory\csr_file$rdmux[0][0][0]$b$1521
      New ports: A={ $memory\csr_file$rdmux[0][1][1]$a$1526 [30] $memory\csr_file$rdmux[0][1][1]$a$1526 [28:20] $memory\csr_file$rdmux[0][1][1]$a$1526 [17:2] $memory\csr_file$rdmux[0][1][1]$a$1526 [0] }, B=27'000000000000000000000000000, Y={ $memory\csr_file$rdmux[0][0][0]$b$1521 [30] $memory\csr_file$rdmux[0][0][0]$b$1521 [28:20] $memory\csr_file$rdmux[0][0][0]$b$1521 [17:2] $memory\csr_file$rdmux[0][0][0]$b$1521 [0] }
      New connections: { $memory\csr_file$rdmux[0][0][0]$b$1521 [31] $memory\csr_file$rdmux[0][0][0]$b$1521 [29] $memory\csr_file$rdmux[0][0][0]$b$1521 [19:18] $memory\csr_file$rdmux[0][0][0]$b$1521 [1] } = { $memory\csr_file$rdmux[0][0][0]$b$1521 [28] $memory\csr_file$rdmux[0][0][0]$b$1521 [28] $memory\csr_file$rdmux[0][0][0]$b$1521 [3] $memory\csr_file$rdmux[0][0][0]$b$1521 [16] $memory\csr_file$rdmux[0][0][0]$b$1521 [0] }
  Optimizing cells in module \csr_file.
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][0][0]$1519:
      Old ports: A=$memory\csr_file$rdmux[0][0][0]$a$1520, B=$memory\csr_file$rdmux[0][0][0]$b$1521, Y=$0\rdVal_CSR[31:0]
      New ports: A={ $memory\csr_file$rdmux[0][0][0]$a$1520 [30:2] 1'1 }, B={ $memory\csr_file$rdmux[0][0][0]$b$1521 [30] $memory\csr_file$rdmux[0][0][0]$b$1521 [28] $memory\csr_file$rdmux[0][0][0]$b$1521 [28:20] $memory\csr_file$rdmux[0][0][0]$b$1521 [3] $memory\csr_file$rdmux[0][0][0]$b$1521 [16] $memory\csr_file$rdmux[0][0][0]$b$1521 [17:2] $memory\csr_file$rdmux[0][0][0]$b$1521 [0] }, Y={ $0\rdVal_CSR[31:0] [30:2] $0\rdVal_CSR[31:0] [0] }
      New connections: { $0\rdVal_CSR[31:0] [31] $0\rdVal_CSR[31:0] [1] } = { $0\rdVal_CSR[31:0] [29] $0\rdVal_CSR[31:0] [0] }
  Optimizing cells in module \csr_file.
  Optimizing cells in module \data_mem.
  Optimizing cells in module \ex_mem.
  Optimizing cells in module \id_ex.
  Optimizing cells in module \if_id.
  Optimizing cells in module \imm_gen.
  Optimizing cells in module \mem_wb.
  Optimizing cells in module \mux2to1.
  Optimizing cells in module \program_counter.
  Optimizing cells in module \regfile.
  Optimizing cells in module \sign_mask_gen.
  Optimizing cells in module \top.
Performed a total of 181 changes.

19.26.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALUControl'.
Finding identical cells in module `\ForwardingUnit'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\alu'.
Finding identical cells in module `\branch_decision'.
Finding identical cells in module `\branch_predictor'.
Finding identical cells in module `\control'.
Finding identical cells in module `\cpu'.
Finding identical cells in module `\csr_file'.
<suppressed ~267 debug messages>
Finding identical cells in module `\data_mem'.
Finding identical cells in module `\ex_mem'.
Finding identical cells in module `\id_ex'.
Finding identical cells in module `\if_id'.
Finding identical cells in module `\imm_gen'.
Finding identical cells in module `\mem_wb'.
Finding identical cells in module `\mux2to1'.
Finding identical cells in module `\program_counter'.
Finding identical cells in module `\regfile'.
Finding identical cells in module `\sign_mask_gen'.
Finding identical cells in module `\top'.
Removed a total of 89 cells.

19.26.13. Executing OPT_RMDFF pass (remove dff with constant values).

19.26.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALUControl..
Finding unused cells or wires in module \ForwardingUnit..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \branch_decision..
Finding unused cells or wires in module \branch_predictor..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \cpu..
Finding unused cells or wires in module \csr_file..
Finding unused cells or wires in module \data_mem..
Finding unused cells or wires in module \ex_mem..
Finding unused cells or wires in module \id_ex..
Finding unused cells or wires in module \if_id..
Finding unused cells or wires in module \imm_gen..
Finding unused cells or wires in module \mem_wb..
Finding unused cells or wires in module \mux2to1..
Finding unused cells or wires in module \program_counter..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \sign_mask_gen..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 163 unused wires.
<suppressed ~1 debug messages>

19.26.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALUControl.
Optimizing module ForwardingUnit.
Optimizing module adder.
Optimizing module alu.
Optimizing module branch_decision.
Optimizing module branch_predictor.
Optimizing module control.
Optimizing module cpu.
Optimizing module csr_file.
Optimizing module data_mem.
Optimizing module ex_mem.
Optimizing module id_ex.
Optimizing module if_id.
Optimizing module imm_gen.
Optimizing module mem_wb.
Optimizing module mux2to1.
Optimizing module program_counter.
Optimizing module regfile.
Optimizing module sign_mask_gen.
Optimizing module top.

19.26.16. Rerunning OPT passes. (Maybe there is more to do..)

19.26.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALUControl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ForwardingUnit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \adder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \branch_decision..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \branch_predictor..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \control..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \csr_file..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \data_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ex_mem..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \id_ex..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \if_id..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \imm_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mem_wb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mux2to1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \program_counter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \regfile..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sign_mask_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~33 debug messages>

19.26.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALUControl.
  Optimizing cells in module \ForwardingUnit.
  Optimizing cells in module \adder.
  Optimizing cells in module \alu.
  Optimizing cells in module \branch_decision.
  Optimizing cells in module \branch_predictor.
  Optimizing cells in module \control.
  Optimizing cells in module \cpu.
  Optimizing cells in module \csr_file.
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][10]$1738:
      Old ports: A={ $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 1'0 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 2'10 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 1'1 }, B={ 1'1 $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 4'0011 $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 1'0 }, Y={ $memory\csr_file$rdmux[0][5][5]$a$1628 [27] $memory\csr_file$rdmux[0][5][5]$a$1628 [31] $memory\csr_file$rdmux[0][5][5]$a$1628 [25] $memory\csr_file$rdmux[0][5][5]$a$1628 [30] $memory\csr_file$rdmux[0][5][5]$a$1628 [20] $memory\csr_file$rdmux[0][5][5]$a$1628 [23] $memory\csr_file$rdmux[0][5][5]$a$1628 [16] $memory\csr_file$rdmux[0][5][5]$a$1628 [8:7] $memory\csr_file$rdmux[0][5][5]$a$1628 [13] $memory\csr_file$rdmux[0][5][5]$a$1628 [22] $memory\csr_file$rdmux[0][5][5]$a$1628 [4] }
      New ports: A={ $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 1'0 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 3'101 }, B={ 1'1 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 4'0011 $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 1'0 }, Y={ $memory\csr_file$rdmux[0][5][5]$a$1628 [27] $memory\csr_file$rdmux[0][5][5]$a$1628 [25] $memory\csr_file$rdmux[0][5][5]$a$1628 [30] $memory\csr_file$rdmux[0][5][5]$a$1628 [20] $memory\csr_file$rdmux[0][5][5]$a$1628 [23] $memory\csr_file$rdmux[0][5][5]$a$1628 [16] $memory\csr_file$rdmux[0][5][5]$a$1628 [8:7] $memory\csr_file$rdmux[0][5][5]$a$1628 [13] $memory\csr_file$rdmux[0][5][5]$a$1628 [4] }
      New connections: { $memory\csr_file$rdmux[0][5][5]$a$1628 [31] $memory\csr_file$rdmux[0][5][5]$a$1628 [22] } = { $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][12]$1744:
      Old ports: A={ $memory\csr_file$rdmux[0][6][0]$b$1710 [30] 1'0 $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] 2'10 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] }, B={ $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 1'0 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 1'0 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 1'1 }, Y={ $memory\csr_file$rdmux[0][5][6]$a$1631 [31] $memory\csr_file$rdmux[0][5][6]$a$1631 [24:23] $memory\csr_file$rdmux[0][5][6]$a$1631 [16] $memory\csr_file$rdmux[0][5][6]$a$1631 [20] $memory\csr_file$rdmux[0][5][6]$a$1631 [13] $memory\csr_file$rdmux[0][5][6]$a$1631 [8] $memory\csr_file$rdmux[0][5][6]$a$1631 [21] $memory\csr_file$rdmux[0][5][6]$a$1631 [4] }
      New ports: A={ 1'0 $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] 2'10 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] }, B={ $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 2'00 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 1'1 }, Y={ $memory\csr_file$rdmux[0][5][6]$a$1631 [24:23] $memory\csr_file$rdmux[0][5][6]$a$1631 [16] $memory\csr_file$rdmux[0][5][6]$a$1631 [13] $memory\csr_file$rdmux[0][5][6]$a$1631 [8] $memory\csr_file$rdmux[0][5][6]$a$1631 [21] $memory\csr_file$rdmux[0][5][6]$a$1631 [4] }
      New connections: { $memory\csr_file$rdmux[0][5][6]$a$1631 [31] $memory\csr_file$rdmux[0][5][6]$a$1631 [20] } = { $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][15]$1753:
      Old ports: A={ $memory\csr_file$rdmux[0][6][11]$b$1743 [31] $memory\csr_file$rdmux[0][6][11]$b$1743 [31] 1'0 $memory\csr_file$rdmux[0][6][11]$b$1743 [22] $memory\csr_file$rdmux[0][6][11]$b$1743 [22] 1'0 $memory\csr_file$rdmux[0][6][11]$b$1743 [22] 2'01 }, B={ $memory\csr_file$rdmux[0][6][11]$b$1743 [31] 2'01 $memory\csr_file$rdmux[0][6][11]$b$1743 [22] $memory\csr_file$rdmux[0][6][11]$b$1743 [31] $memory\csr_file$rdmux[0][6][11]$b$1743 [31] 1'1 $memory\csr_file$rdmux[0][6][11]$b$1743 [22] $memory\csr_file$rdmux[0][6][11]$b$1743 [22] }, Y={ $memory\csr_file$rdmux[0][5][10]$a$1643 [31:30] $memory\csr_file$rdmux[0][5][10]$a$1643 [23] $memory\csr_file$rdmux[0][5][10]$a$1643 [20] $memory\csr_file$rdmux[0][5][10]$a$1643 [16] $memory\csr_file$rdmux[0][5][10]$a$1643 [14] $memory\csr_file$rdmux[0][5][10]$a$1643 [17] $memory\csr_file$rdmux[0][5][10]$a$1643 [22] $memory\csr_file$rdmux[0][5][10]$a$1643 [4] }
      New ports: A={ $memory\csr_file$rdmux[0][6][11]$b$1743 [31] 1'0 $memory\csr_file$rdmux[0][6][11]$b$1743 [22] 1'0 $memory\csr_file$rdmux[0][6][11]$b$1743 [22] 2'01 }, B={ 2'01 $memory\csr_file$rdmux[0][6][11]$b$1743 [31] $memory\csr_file$rdmux[0][6][11]$b$1743 [31] 1'1 $memory\csr_file$rdmux[0][6][11]$b$1743 [22] $memory\csr_file$rdmux[0][6][11]$b$1743 [22] }, Y={ $memory\csr_file$rdmux[0][5][10]$a$1643 [30] $memory\csr_file$rdmux[0][5][10]$a$1643 [23] $memory\csr_file$rdmux[0][5][10]$a$1643 [16] $memory\csr_file$rdmux[0][5][10]$a$1643 [14] $memory\csr_file$rdmux[0][5][10]$a$1643 [17] $memory\csr_file$rdmux[0][5][10]$a$1643 [22] $memory\csr_file$rdmux[0][5][10]$a$1643 [4] }
      New connections: { $memory\csr_file$rdmux[0][5][10]$a$1643 [31] $memory\csr_file$rdmux[0][5][10]$a$1643 [20] } = { $memory\csr_file$rdmux[0][6][11]$b$1743 [31] $memory\csr_file$rdmux[0][6][11]$b$1743 [22] }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][19]$1765:
      Old ports: A={ $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 2'00 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 1'1 }, B={ 1'1 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 2'01 $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 2'00 }, Y={ $memory\csr_file$rdmux[0][5][9]$b$1641 [31:30] $memory\csr_file$rdmux[0][5][9]$b$1641 [24:23] $memory\csr_file$rdmux[0][5][9]$b$1641 [17] $memory\csr_file$rdmux[0][5][9]$b$1641 [15] $memory\csr_file$rdmux[0][5][9]$b$1641 [13] $memory\csr_file$rdmux[0][5][9]$b$1641 [22:21] $memory\csr_file$rdmux[0][5][9]$b$1641 [4] }
      New ports: A={ $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 2'00 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 1'1 }, B={ 1'1 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 2'01 $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 2'00 }, Y={ $memory\csr_file$rdmux[0][5][9]$b$1641 [31:30] $memory\csr_file$rdmux[0][5][9]$b$1641 [24:23] $memory\csr_file$rdmux[0][5][9]$b$1641 [17] $memory\csr_file$rdmux[0][5][9]$b$1641 [15] $memory\csr_file$rdmux[0][5][9]$b$1641 [13] $memory\csr_file$rdmux[0][5][9]$b$1641 [21] $memory\csr_file$rdmux[0][5][9]$b$1641 [4] }
      New connections: $memory\csr_file$rdmux[0][5][9]$b$1641 [22] = $memory\csr_file$rdmux[0][6][0]$b$1710 [22]
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][27]$1789:
      Old ports: A={ 1'1 $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] 1'0 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 1'1 }, B={ $memory\csr_file$rdmux[0][6][0]$b$1710 [30] 1'0 $memory\csr_file$rdmux[0][6][0]$b$1710 [30] 2'01 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] }, Y={ $memory\csr_file$rdmux[0][5][13]$b$1653 [18] $memory\csr_file$rdmux[0][5][13]$b$1653 [14] $memory\csr_file$rdmux[0][5][13]$b$1653 [17] $memory\csr_file$rdmux[0][5][13]$b$1653 [23] $memory\csr_file$rdmux[0][5][13]$b$1653 [9] $memory\csr_file$rdmux[0][5][13]$b$1653 [21] $memory\csr_file$rdmux[0][5][13]$b$1653 [26] $memory\csr_file$rdmux[0][5][13]$b$1653 [5] $memory\csr_file$rdmux[0][5][13]$b$1653 [7] }
      New ports: A={ 1'1 $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] 1'0 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 1'1 }, B={ $memory\csr_file$rdmux[0][6][0]$b$1710 [30] 3'001 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] }, Y={ $memory\csr_file$rdmux[0][5][13]$b$1653 [18] $memory\csr_file$rdmux[0][5][13]$b$1653 [14] $memory\csr_file$rdmux[0][5][13]$b$1653 [23] $memory\csr_file$rdmux[0][5][13]$b$1653 [9] $memory\csr_file$rdmux[0][5][13]$b$1653 [21] $memory\csr_file$rdmux[0][5][13]$b$1653 [26] $memory\csr_file$rdmux[0][5][13]$b$1653 [5] $memory\csr_file$rdmux[0][5][13]$b$1653 [7] }
      New connections: $memory\csr_file$rdmux[0][5][13]$b$1653 [17] = $memory\csr_file$rdmux[0][6][0]$b$1710 [30]
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][2]$1714:
      Old ports: A={ $memory\csr_file$rdmux[0][6][11]$b$1743 [31] $memory\csr_file$rdmux[0][6][11]$b$1743 [31] 1'0 $memory\csr_file$rdmux[0][6][11]$b$1743 [31] 2'01 $memory\csr_file$rdmux[0][6][11]$b$1743 [22] $memory\csr_file$rdmux[0][6][11]$b$1743 [22] }, B={ $memory\csr_file$rdmux[0][6][11]$b$1743 [31] 1'0 $memory\csr_file$rdmux[0][6][11]$b$1743 [31] $memory\csr_file$rdmux[0][6][11]$b$1743 [22] $memory\csr_file$rdmux[0][6][11]$b$1743 [22] $memory\csr_file$rdmux[0][6][11]$b$1743 [22] 2'10 }, Y={ $memory\csr_file$rdmux[0][5][1]$a$1616 [25] $memory\csr_file$rdmux[0][5][1]$a$1616 [31:30] $memory\csr_file$rdmux[0][5][1]$a$1616 [18:17] $memory\csr_file$rdmux[0][5][1]$a$1616 [8:7] $memory\csr_file$rdmux[0][5][1]$a$1616 [12] }
      New ports: A={ $memory\csr_file$rdmux[0][6][11]$b$1743 [31] 1'0 $memory\csr_file$rdmux[0][6][11]$b$1743 [31] 2'01 $memory\csr_file$rdmux[0][6][11]$b$1743 [22] $memory\csr_file$rdmux[0][6][11]$b$1743 [22] }, B={ 1'0 $memory\csr_file$rdmux[0][6][11]$b$1743 [31] $memory\csr_file$rdmux[0][6][11]$b$1743 [22] $memory\csr_file$rdmux[0][6][11]$b$1743 [22] $memory\csr_file$rdmux[0][6][11]$b$1743 [22] 2'10 }, Y={ $memory\csr_file$rdmux[0][5][1]$a$1616 [31:30] $memory\csr_file$rdmux[0][5][1]$a$1616 [18:17] $memory\csr_file$rdmux[0][5][1]$a$1616 [8:7] $memory\csr_file$rdmux[0][5][1]$a$1616 [12] }
      New connections: $memory\csr_file$rdmux[0][5][1]$a$1616 [25] = $memory\csr_file$rdmux[0][6][11]$b$1743 [31]
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][30]$1798:
      Old ports: A={ 1'0 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] 1'0 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 1'1 }, B={ $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 2'11 $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] }, Y={ $memory\csr_file$rdmux[0][5][15]$a$1658 [22] $memory\csr_file$rdmux[0][5][15]$a$1658 [17] $memory\csr_file$rdmux[0][5][15]$a$1658 [15] $memory\csr_file$rdmux[0][5][15]$a$1658 [13] $memory\csr_file$rdmux[0][5][15]$a$1658 [8] $memory\csr_file$rdmux[0][5][15]$a$1658 [16] }
      New ports: A={ 1'0 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] 2'01 }, B={ $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 2'11 $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] }, Y={ $memory\csr_file$rdmux[0][5][15]$a$1658 [22] $memory\csr_file$rdmux[0][5][15]$a$1658 [17] $memory\csr_file$rdmux[0][5][15]$a$1658 [15] $memory\csr_file$rdmux[0][5][15]$a$1658 [13] $memory\csr_file$rdmux[0][5][15]$a$1658 [16] }
      New connections: $memory\csr_file$rdmux[0][5][15]$a$1658 [8] = $memory\csr_file$rdmux[0][6][0]$b$1710 [22]
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][33]$1807:
      Old ports: A={ 2'11 $memory\csr_file$rdmux[0][6][11]$b$1743 [22] $memory\csr_file$rdmux[0][6][11]$b$1743 [31] 1'0 $memory\csr_file$rdmux[0][6][11]$b$1743 [22] $memory\csr_file$rdmux[0][6][11]$b$1743 [31] 1'1 $memory\csr_file$rdmux[0][6][11]$b$1743 [22] 1'0 }, B={ 1'0 $memory\csr_file$rdmux[0][6][11]$b$1743 [31] $memory\csr_file$rdmux[0][6][11]$b$1743 [22] 1'0 $memory\csr_file$rdmux[0][6][11]$b$1743 [31] 1'0 $memory\csr_file$rdmux[0][6][11]$b$1743 [22] $memory\csr_file$rdmux[0][6][11]$b$1743 [22] $memory\csr_file$rdmux[0][6][11]$b$1743 [31] $memory\csr_file$rdmux[0][6][11]$b$1743 [22] }, Y={ $memory\csr_file$rdmux[0][5][16]$b$1662 [20] $memory\csr_file$rdmux[0][5][16]$b$1662 [18] $memory\csr_file$rdmux[0][5][16]$b$1662 [15] $memory\csr_file$rdmux[0][5][16]$b$1662 [24] $memory\csr_file$rdmux[0][5][16]$b$1662 [9] $memory\csr_file$rdmux[0][5][16]$b$1662 [23] $memory\csr_file$rdmux[0][5][16]$b$1662 [6:5] $memory\csr_file$rdmux[0][5][16]$b$1662 [10] $memory\csr_file$rdmux[0][5][16]$b$1662 [2] }
      New ports: A={ 2'11 $memory\csr_file$rdmux[0][6][11]$b$1743 [31] 1'0 $memory\csr_file$rdmux[0][6][11]$b$1743 [22] $memory\csr_file$rdmux[0][6][11]$b$1743 [31] 1'1 $memory\csr_file$rdmux[0][6][11]$b$1743 [22] 1'0 }, B={ 1'0 $memory\csr_file$rdmux[0][6][11]$b$1743 [31] 1'0 $memory\csr_file$rdmux[0][6][11]$b$1743 [31] 1'0 $memory\csr_file$rdmux[0][6][11]$b$1743 [22] $memory\csr_file$rdmux[0][6][11]$b$1743 [22] $memory\csr_file$rdmux[0][6][11]$b$1743 [31] $memory\csr_file$rdmux[0][6][11]$b$1743 [22] }, Y={ $memory\csr_file$rdmux[0][5][16]$b$1662 [20] $memory\csr_file$rdmux[0][5][16]$b$1662 [18] $memory\csr_file$rdmux[0][5][16]$b$1662 [24] $memory\csr_file$rdmux[0][5][16]$b$1662 [9] $memory\csr_file$rdmux[0][5][16]$b$1662 [23] $memory\csr_file$rdmux[0][5][16]$b$1662 [6:5] $memory\csr_file$rdmux[0][5][16]$b$1662 [10] $memory\csr_file$rdmux[0][5][16]$b$1662 [2] }
      New connections: $memory\csr_file$rdmux[0][5][16]$b$1662 [15] = $memory\csr_file$rdmux[0][6][11]$b$1743 [22]
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][38]$1822:
      Old ports: A={ $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] 1'1 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] 3'110 $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 1'0 }, B={ 1'0 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 1'1 $memory\csr_file$rdmux[0][6][0]$b$1710 [30] 1'0 $memory\csr_file$rdmux[0][6][0]$b$1710 [30] 3'110 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] }, Y={ $memory\csr_file$rdmux[0][5][19]$a$1670 [23] $memory\csr_file$rdmux[0][5][19]$a$1670 [25] $memory\csr_file$rdmux[0][5][19]$a$1670 [20] $memory\csr_file$rdmux[0][5][19]$a$1670 [15] $memory\csr_file$rdmux[0][5][19]$a$1670 [27] $memory\csr_file$rdmux[0][5][19]$a$1670 [10] $memory\csr_file$rdmux[0][5][19]$a$1670 [7] $memory\csr_file$rdmux[0][5][19]$a$1670 [12] $memory\csr_file$rdmux[0][5][19]$a$1670 [31] $memory\csr_file$rdmux[0][5][19]$a$1670 [4] $memory\csr_file$rdmux[0][5][19]$a$1670 [19] }
      New ports: A={ $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] 1'1 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 3'110 $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 1'0 }, B={ 1'0 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 2'10 $memory\csr_file$rdmux[0][6][0]$b$1710 [30] 3'110 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] }, Y={ $memory\csr_file$rdmux[0][5][19]$a$1670 [23] $memory\csr_file$rdmux[0][5][19]$a$1670 [25] $memory\csr_file$rdmux[0][5][19]$a$1670 [20] $memory\csr_file$rdmux[0][5][19]$a$1670 [15] $memory\csr_file$rdmux[0][5][19]$a$1670 [10] $memory\csr_file$rdmux[0][5][19]$a$1670 [7] $memory\csr_file$rdmux[0][5][19]$a$1670 [12] $memory\csr_file$rdmux[0][5][19]$a$1670 [31] $memory\csr_file$rdmux[0][5][19]$a$1670 [4] $memory\csr_file$rdmux[0][5][19]$a$1670 [19] }
      New connections: $memory\csr_file$rdmux[0][5][19]$a$1670 [27] = $memory\csr_file$rdmux[0][6][0]$b$1710 [30]
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][39]$1825:
      Old ports: A={ $memory\csr_file$rdmux[0][6][11]$b$1743 [31] $memory\csr_file$rdmux[0][6][11]$b$1743 [22] 2'01 }, B={ $memory\csr_file$rdmux[0][6][11]$b$1743 [31] 2'11 $memory\csr_file$rdmux[0][6][11]$b$1743 [22] }, Y={ $memory\csr_file$rdmux[0][5][19]$b$1671 [22] $memory\csr_file$rdmux[0][5][19]$b$1671 [10] $memory\csr_file$rdmux[0][5][19]$b$1671 [23] $memory\csr_file$rdmux[0][5][19]$b$1671 [7] }
      New ports: A={ $memory\csr_file$rdmux[0][6][11]$b$1743 [22] 2'01 }, B={ 2'11 $memory\csr_file$rdmux[0][6][11]$b$1743 [22] }, Y={ $memory\csr_file$rdmux[0][5][19]$b$1671 [10] $memory\csr_file$rdmux[0][5][19]$b$1671 [23] $memory\csr_file$rdmux[0][5][19]$b$1671 [7] }
      New connections: $memory\csr_file$rdmux[0][5][19]$b$1671 [22] = $memory\csr_file$rdmux[0][6][11]$b$1743 [31]
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][3]$1717:
      Old ports: A={ 1'1 $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 2'10 }, B={ 2'00 $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] }, Y={ $memory\csr_file$rdmux[0][5][1]$b$1617 [15] $memory\csr_file$rdmux[0][5][1]$b$1617 [9] $memory\csr_file$rdmux[0][5][1]$b$1617 [16] $memory\csr_file$rdmux[0][5][1]$b$1617 [7] $memory\csr_file$rdmux[0][5][1]$b$1617 [18] $memory\csr_file$rdmux[0][5][1]$b$1617 [28] }
      New ports: A={ 1'1 $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 2'10 }, B={ 2'00 $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] }, Y={ $memory\csr_file$rdmux[0][5][1]$b$1617 [15] $memory\csr_file$rdmux[0][5][1]$b$1617 [9] $memory\csr_file$rdmux[0][5][1]$b$1617 [16] $memory\csr_file$rdmux[0][5][1]$b$1617 [18] $memory\csr_file$rdmux[0][5][1]$b$1617 [28] }
      New connections: $memory\csr_file$rdmux[0][5][1]$b$1617 [7] = $memory\csr_file$rdmux[0][6][0]$b$1710 [22]
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][40]$1828:
      Old ports: A={ 1'0 $memory\csr_file$rdmux[0][6][11]$b$1743 [31] 4'1110 $memory\csr_file$rdmux[0][6][11]$b$1743 [22] }, B={ 1'1 $memory\csr_file$rdmux[0][6][11]$b$1743 [31] $memory\csr_file$rdmux[0][6][11]$b$1743 [31] 1'0 $memory\csr_file$rdmux[0][6][11]$b$1743 [22] $memory\csr_file$rdmux[0][6][11]$b$1743 [22] 1'0 }, Y={ $memory\csr_file$rdmux[0][5][20]$a$1673 [23:22] $memory\csr_file$rdmux[0][5][20]$a$1673 [11:7] }
      New ports: A={ 5'01110 $memory\csr_file$rdmux[0][6][11]$b$1743 [22] }, B={ 1'1 $memory\csr_file$rdmux[0][6][11]$b$1743 [31] 1'0 $memory\csr_file$rdmux[0][6][11]$b$1743 [22] $memory\csr_file$rdmux[0][6][11]$b$1743 [22] 1'0 }, Y={ $memory\csr_file$rdmux[0][5][20]$a$1673 [23] $memory\csr_file$rdmux[0][5][20]$a$1673 [11:7] }
      New connections: $memory\csr_file$rdmux[0][5][20]$a$1673 [22] = $memory\csr_file$rdmux[0][6][11]$b$1743 [31]
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][42]$1834:
      Old ports: A={ $memory\csr_file$rdmux[0][6][0]$b$1710 [30] 2'01 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] }, B={ $memory\csr_file$rdmux[0][6][0]$b$1710 [30] 2'10 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] }, Y={ $memory\csr_file$rdmux[0][5][21]$a$1676 [20] $memory\csr_file$rdmux[0][5][21]$a$1676 [11] $memory\csr_file$rdmux[0][5][21]$a$1676 [21] $memory\csr_file$rdmux[0][5][21]$a$1676 [9] }
      New ports: A=2'01, B=2'10, Y={ $memory\csr_file$rdmux[0][5][21]$a$1676 [11] $memory\csr_file$rdmux[0][5][21]$a$1676 [21] }
      New connections: { $memory\csr_file$rdmux[0][5][21]$a$1676 [20] $memory\csr_file$rdmux[0][5][21]$a$1676 [9] } = { $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][4]$1720:
      Old ports: A={ 1'1 $memory\csr_file$rdmux[0][6][11]$b$1743 [31] 1'1 $memory\csr_file$rdmux[0][6][11]$b$1743 [31] $memory\csr_file$rdmux[0][6][11]$b$1743 [22] 1'0 }, B={ $memory\csr_file$rdmux[0][6][11]$b$1743 [31] $memory\csr_file$rdmux[0][6][11]$b$1743 [31] $memory\csr_file$rdmux[0][6][11]$b$1743 [22] 1'1 $memory\csr_file$rdmux[0][6][11]$b$1743 [22] $memory\csr_file$rdmux[0][6][11]$b$1743 [22] }, Y={ $memory\csr_file$rdmux[0][5][2]$a$1619 [30] $memory\csr_file$rdmux[0][5][2]$a$1619 [31] $memory\csr_file$rdmux[0][5][2]$a$1619 [9] $memory\csr_file$rdmux[0][5][2]$a$1619 [13] $memory\csr_file$rdmux[0][5][2]$a$1619 [10] $memory\csr_file$rdmux[0][5][2]$a$1619 [2] }
      New ports: A={ 2'11 $memory\csr_file$rdmux[0][6][11]$b$1743 [31] 1'0 }, B={ $memory\csr_file$rdmux[0][6][11]$b$1743 [31] $memory\csr_file$rdmux[0][6][11]$b$1743 [22] 1'1 $memory\csr_file$rdmux[0][6][11]$b$1743 [22] }, Y={ $memory\csr_file$rdmux[0][5][2]$a$1619 [30] $memory\csr_file$rdmux[0][5][2]$a$1619 [9] $memory\csr_file$rdmux[0][5][2]$a$1619 [13] $memory\csr_file$rdmux[0][5][2]$a$1619 [2] }
      New connections: { $memory\csr_file$rdmux[0][5][2]$a$1619 [31] $memory\csr_file$rdmux[0][5][2]$a$1619 [10] } = { $memory\csr_file$rdmux[0][6][11]$b$1743 [31] $memory\csr_file$rdmux[0][6][11]$b$1743 [22] }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][6]$1726:
      Old ports: A={ 1'0 $memory\csr_file$rdmux[0][6][11]$b$1743 [22] 2'11 $memory\csr_file$rdmux[0][6][11]$b$1743 [31] $memory\csr_file$rdmux[0][6][11]$b$1743 [31] $memory\csr_file$rdmux[0][6][11]$b$1743 [22] 1'0 $memory\csr_file$rdmux[0][6][11]$b$1743 [31] $memory\csr_file$rdmux[0][6][11]$b$1743 [22] 1'0 }, B={ 2'11 $memory\csr_file$rdmux[0][6][11]$b$1743 [22] 2'00 $memory\csr_file$rdmux[0][6][11]$b$1743 [31] $memory\csr_file$rdmux[0][6][11]$b$1743 [31] $memory\csr_file$rdmux[0][6][11]$b$1743 [31] $memory\csr_file$rdmux[0][6][11]$b$1743 [22] 1'0 $memory\csr_file$rdmux[0][6][11]$b$1743 [22] }, Y={ $memory\csr_file$rdmux[0][5][3]$a$1622 [28] $memory\csr_file$rdmux[0][5][3]$a$1622 [25] $memory\csr_file$rdmux[0][5][3]$a$1622 [22] $memory\csr_file$rdmux[0][5][3]$a$1622 [23] $memory\csr_file$rdmux[0][5][3]$a$1622 [17] $memory\csr_file$rdmux[0][5][3]$a$1622 [18] $memory\csr_file$rdmux[0][5][3]$a$1622 [27] $memory\csr_file$rdmux[0][5][3]$a$1622 [31] $memory\csr_file$rdmux[0][5][3]$a$1622 [5] $memory\csr_file$rdmux[0][5][3]$a$1622 [24] $memory\csr_file$rdmux[0][5][3]$a$1622 [6] }
      New ports: A={ 1'0 $memory\csr_file$rdmux[0][6][11]$b$1743 [22] 2'11 $memory\csr_file$rdmux[0][6][11]$b$1743 [31] $memory\csr_file$rdmux[0][6][11]$b$1743 [22] 1'0 $memory\csr_file$rdmux[0][6][11]$b$1743 [31] $memory\csr_file$rdmux[0][6][11]$b$1743 [22] 1'0 }, B={ 2'11 $memory\csr_file$rdmux[0][6][11]$b$1743 [22] 2'00 $memory\csr_file$rdmux[0][6][11]$b$1743 [31] $memory\csr_file$rdmux[0][6][11]$b$1743 [31] $memory\csr_file$rdmux[0][6][11]$b$1743 [22] 1'0 $memory\csr_file$rdmux[0][6][11]$b$1743 [22] }, Y={ $memory\csr_file$rdmux[0][5][3]$a$1622 [28] $memory\csr_file$rdmux[0][5][3]$a$1622 [25] $memory\csr_file$rdmux[0][5][3]$a$1622 [22] $memory\csr_file$rdmux[0][5][3]$a$1622 [23] $memory\csr_file$rdmux[0][5][3]$a$1622 [17] $memory\csr_file$rdmux[0][5][3]$a$1622 [27] $memory\csr_file$rdmux[0][5][3]$a$1622 [31] $memory\csr_file$rdmux[0][5][3]$a$1622 [5] $memory\csr_file$rdmux[0][5][3]$a$1622 [24] $memory\csr_file$rdmux[0][5][3]$a$1622 [6] }
      New connections: $memory\csr_file$rdmux[0][5][3]$a$1622 [18] = $memory\csr_file$rdmux[0][6][11]$b$1743 [31]
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][7]$1729:
      Old ports: A={ $memory\csr_file$rdmux[0][6][0]$b$1710 [22] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 1'1 $memory\csr_file$rdmux[0][6][0]$b$1710 [30] 1'1 $memory\csr_file$rdmux[0][6][0]$b$1710 [30] 1'0 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] }, B={ $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 1'1 $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 1'0 }, Y={ $memory\csr_file$rdmux[0][5][3]$b$1623 [31] $memory\csr_file$rdmux[0][5][3]$b$1623 [23] $memory\csr_file$rdmux[0][5][3]$b$1623 [17] $memory\csr_file$rdmux[0][5][3]$b$1623 [13] $memory\csr_file$rdmux[0][5][3]$b$1623 [10] $memory\csr_file$rdmux[0][5][3]$b$1623 [7] $memory\csr_file$rdmux[0][5][3]$b$1623 [5] $memory\csr_file$rdmux[0][5][3]$b$1623 [24] }
      New ports: A={ $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 1'1 $memory\csr_file$rdmux[0][6][0]$b$1710 [30] 2'10 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] }, B={ $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 1'1 $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 1'0 }, Y={ $memory\csr_file$rdmux[0][5][3]$b$1623 [31] $memory\csr_file$rdmux[0][5][3]$b$1623 [17] $memory\csr_file$rdmux[0][5][3]$b$1623 [13] $memory\csr_file$rdmux[0][5][3]$b$1623 [10] $memory\csr_file$rdmux[0][5][3]$b$1623 [5] $memory\csr_file$rdmux[0][5][3]$b$1623 [24] }
      New connections: { $memory\csr_file$rdmux[0][5][3]$b$1623 [23] $memory\csr_file$rdmux[0][5][3]$b$1623 [7] } = { $memory\csr_file$rdmux[0][6][0]$b$1710 [22] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] }
    Consolidated identical input bits for $mux cell $memory\csr_file$rdmux[0][6][8]$1732:
      Old ports: A={ $memory\csr_file$rdmux[0][6][0]$b$1710 [22] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] 4'0010 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] }, B={ $memory\csr_file$rdmux[0][6][0]$b$1710 [22] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] 2'11 $memory\csr_file$rdmux[0][6][0]$b$1710 [30] 1'0 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 1'0 }, Y={ $memory\csr_file$rdmux[0][5][4]$a$1625 [24] $memory\csr_file$rdmux[0][5][4]$a$1625 [13] $memory\csr_file$rdmux[0][5][4]$a$1625 [31] $memory\csr_file$rdmux[0][5][4]$a$1625 [8] $memory\csr_file$rdmux[0][5][4]$a$1625 [23] $memory\csr_file$rdmux[0][5][4]$a$1625 [5:4] $memory\csr_file$rdmux[0][5][4]$a$1625 [6] }
      New ports: A={ $memory\csr_file$rdmux[0][6][0]$b$1710 [30] 4'0010 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] }, B={ 2'11 $memory\csr_file$rdmux[0][6][0]$b$1710 [30] 1'0 $memory\csr_file$rdmux[0][6][0]$b$1710 [22] 1'0 }, Y={ $memory\csr_file$rdmux[0][5][4]$a$1625 [31] $memory\csr_file$rdmux[0][5][4]$a$1625 [8] $memory\csr_file$rdmux[0][5][4]$a$1625 [23] $memory\csr_file$rdmux[0][5][4]$a$1625 [5:4] $memory\csr_file$rdmux[0][5][4]$a$1625 [6] }
      New connections: { $memory\csr_file$rdmux[0][5][4]$a$1625 [24] $memory\csr_file$rdmux[0][5][4]$a$1625 [13] } = { $memory\csr_file$rdmux[0][6][0]$b$1710 [22] $memory\csr_file$rdmux[0][6][0]$b$1710 [30] }
  Optimizing cells in module \csr_file.
  Optimizing cells in module \data_mem.
  Optimizing cells in module \ex_mem.
  Optimizing cells in module \id_ex.
  Optimizing cells in module \if_id.
  Optimizing cells in module \imm_gen.
  Optimizing cells in module \mem_wb.
  Optimizing cells in module \mux2to1.
  Optimizing cells in module \program_counter.
  Optimizing cells in module \regfile.
  Optimizing cells in module \sign_mask_gen.
  Optimizing cells in module \top.
Performed a total of 17 changes.

19.26.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALUControl'.
Finding identical cells in module `\ForwardingUnit'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\alu'.
Finding identical cells in module `\branch_decision'.
Finding identical cells in module `\branch_predictor'.
Finding identical cells in module `\control'.
Finding identical cells in module `\cpu'.
Finding identical cells in module `\csr_file'.
Finding identical cells in module `\data_mem'.
Finding identical cells in module `\ex_mem'.
Finding identical cells in module `\id_ex'.
Finding identical cells in module `\if_id'.
Finding identical cells in module `\imm_gen'.
Finding identical cells in module `\mem_wb'.
Finding identical cells in module `\mux2to1'.
Finding identical cells in module `\program_counter'.
Finding identical cells in module `\regfile'.
Finding identical cells in module `\sign_mask_gen'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

19.26.20. Executing OPT_RMDFF pass (remove dff with constant values).

19.26.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALUControl..
Finding unused cells or wires in module \ForwardingUnit..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \branch_decision..
Finding unused cells or wires in module \branch_predictor..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \cpu..
Finding unused cells or wires in module \csr_file..
Finding unused cells or wires in module \data_mem..
Finding unused cells or wires in module \ex_mem..
Finding unused cells or wires in module \id_ex..
Finding unused cells or wires in module \if_id..
Finding unused cells or wires in module \imm_gen..
Finding unused cells or wires in module \mem_wb..
Finding unused cells or wires in module \mux2to1..
Finding unused cells or wires in module \program_counter..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \sign_mask_gen..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

19.26.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALUControl.
Optimizing module ForwardingUnit.
Optimizing module adder.
Optimizing module alu.
Optimizing module branch_decision.
Optimizing module branch_predictor.
Optimizing module control.
Optimizing module cpu.
Optimizing module csr_file.
Optimizing module data_mem.
Optimizing module ex_mem.
Optimizing module id_ex.
Optimizing module if_id.
Optimizing module imm_gen.
Optimizing module mem_wb.
Optimizing module mux2to1.
Optimizing module program_counter.
Optimizing module regfile.
Optimizing module sign_mask_gen.
Optimizing module top.

19.26.23. Rerunning OPT passes. (Maybe there is more to do..)

19.26.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALUControl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ForwardingUnit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \adder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \branch_decision..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \branch_predictor..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \control..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \cpu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \csr_file..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \data_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ex_mem..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \id_ex..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \if_id..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \imm_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mem_wb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mux2to1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \program_counter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \regfile..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sign_mask_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~33 debug messages>

19.26.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALUControl.
  Optimizing cells in module \ForwardingUnit.
  Optimizing cells in module \adder.
  Optimizing cells in module \alu.
  Optimizing cells in module \branch_decision.
  Optimizing cells in module \branch_predictor.
  Optimizing cells in module \control.
  Optimizing cells in module \cpu.
  Optimizing cells in module \csr_file.
  Optimizing cells in module \data_mem.
  Optimizing cells in module \ex_mem.
  Optimizing cells in module \id_ex.
  Optimizing cells in module \if_id.
  Optimizing cells in module \imm_gen.
  Optimizing cells in module \mem_wb.
  Optimizing cells in module \mux2to1.
  Optimizing cells in module \program_counter.
  Optimizing cells in module \regfile.
  Optimizing cells in module \sign_mask_gen.
  Optimizing cells in module \top.
Performed a total of 0 changes.

19.26.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALUControl'.
Finding identical cells in module `\ForwardingUnit'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\alu'.
Finding identical cells in module `\branch_decision'.
Finding identical cells in module `\branch_predictor'.
Finding identical cells in module `\control'.
Finding identical cells in module `\cpu'.
Finding identical cells in module `\csr_file'.
Finding identical cells in module `\data_mem'.
Finding identical cells in module `\ex_mem'.
Finding identical cells in module `\id_ex'.
Finding identical cells in module `\if_id'.
Finding identical cells in module `\imm_gen'.
Finding identical cells in module `\mem_wb'.
Finding identical cells in module `\mux2to1'.
Finding identical cells in module `\program_counter'.
Finding identical cells in module `\regfile'.
Finding identical cells in module `\sign_mask_gen'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

19.26.27. Executing OPT_RMDFF pass (remove dff with constant values).

19.26.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALUControl..
Finding unused cells or wires in module \ForwardingUnit..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \branch_decision..
Finding unused cells or wires in module \branch_predictor..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \cpu..
Finding unused cells or wires in module \csr_file..
Finding unused cells or wires in module \data_mem..
Finding unused cells or wires in module \ex_mem..
Finding unused cells or wires in module \id_ex..
Finding unused cells or wires in module \if_id..
Finding unused cells or wires in module \imm_gen..
Finding unused cells or wires in module \mem_wb..
Finding unused cells or wires in module \mux2to1..
Finding unused cells or wires in module \program_counter..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \sign_mask_gen..
Finding unused cells or wires in module \top..

19.26.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALUControl.
Optimizing module ForwardingUnit.
Optimizing module adder.
Optimizing module alu.
Optimizing module branch_decision.
Optimizing module branch_predictor.
Optimizing module control.
Optimizing module cpu.
Optimizing module csr_file.
Optimizing module data_mem.
Optimizing module ex_mem.
Optimizing module id_ex.
Optimizing module if_id.
Optimizing module imm_gen.
Optimizing module mem_wb.
Optimizing module mux2to1.
Optimizing module program_counter.
Optimizing module regfile.
Optimizing module sign_mask_gen.
Optimizing module top.

19.26.30. Finished OPT passes. (There is nothing left to do.)

19.27. Executing ICE40_WRAPCARRY pass (wrap carries).

19.28. Executing TECHMAP pass (map to technology primitives).

19.28.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

19.28.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

19.28.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod\_90_pmux\WIDTH=31\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=3 for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=7 for cells of type $pmux.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=11 for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $ne.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
No more expansions possible.
<suppressed ~1893 debug messages>

19.29. Executing OPT pass (performing simple optimizations).

19.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALUControl.
<suppressed ~254 debug messages>
Optimizing module ForwardingUnit.
Optimizing module adder.
<suppressed ~32 debug messages>
Optimizing module alu.
<suppressed ~221 debug messages>
Optimizing module branch_decision.
Optimizing module branch_predictor.
<suppressed ~32 debug messages>
Optimizing module control.
Optimizing module cpu.
Optimizing module csr_file.
<suppressed ~38 debug messages>
Optimizing module data_mem.
<suppressed ~296 debug messages>
Optimizing module ex_mem.
Optimizing module id_ex.
Optimizing module if_id.
Optimizing module imm_gen.
<suppressed ~54 debug messages>
Optimizing module mem_wb.
Optimizing module mux2to1.
Optimizing module program_counter.
Optimizing module regfile.
Optimizing module sign_mask_gen.
<suppressed ~16 debug messages>
Optimizing module top.

19.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALUControl'.
<suppressed ~270 debug messages>
Finding identical cells in module `\ForwardingUnit'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\alu'.
<suppressed ~909 debug messages>
Finding identical cells in module `\branch_decision'.
Finding identical cells in module `\branch_predictor'.
Finding identical cells in module `\control'.
Finding identical cells in module `\cpu'.
Finding identical cells in module `\csr_file'.
<suppressed ~1362 debug messages>
Finding identical cells in module `\data_mem'.
<suppressed ~240 debug messages>
Finding identical cells in module `\ex_mem'.
Finding identical cells in module `\id_ex'.
Finding identical cells in module `\if_id'.
Finding identical cells in module `\imm_gen'.
<suppressed ~273 debug messages>
Finding identical cells in module `\mem_wb'.
Finding identical cells in module `\mux2to1'.
Finding identical cells in module `\program_counter'.
Finding identical cells in module `\regfile'.
Finding identical cells in module `\sign_mask_gen'.
<suppressed ~9 debug messages>
Finding identical cells in module `\top'.
Removed a total of 1021 cells.

19.29.3. Executing OPT_RMDFF pass (remove dff with constant values).

19.29.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALUControl..
Finding unused cells or wires in module \ForwardingUnit..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \branch_decision..
Finding unused cells or wires in module \branch_predictor..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \cpu..
Finding unused cells or wires in module \csr_file..
Finding unused cells or wires in module \data_mem..
Finding unused cells or wires in module \ex_mem..
Finding unused cells or wires in module \id_ex..
Finding unused cells or wires in module \if_id..
Finding unused cells or wires in module \imm_gen..
Finding unused cells or wires in module \mem_wb..
Finding unused cells or wires in module \mux2to1..
Finding unused cells or wires in module \program_counter..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \sign_mask_gen..
Finding unused cells or wires in module \top..
Removed 218 unused cells and 876 unused wires.
<suppressed ~228 debug messages>

19.29.5. Finished fast OPT passes.

19.30. Executing ICE40_OPT pass (performing simple optimizations).

19.30.1. Running ICE40 specific optimizations.

19.30.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALUControl.
Optimizing module ForwardingUnit.
Optimizing module adder.
Optimizing module alu.
Optimizing module branch_decision.
Optimizing module branch_predictor.
Optimizing module control.
Optimizing module cpu.
Optimizing module csr_file.
<suppressed ~19 debug messages>
Optimizing module data_mem.
<suppressed ~32 debug messages>
Optimizing module ex_mem.
Optimizing module id_ex.
Optimizing module if_id.
Optimizing module imm_gen.
Optimizing module mem_wb.
Optimizing module mux2to1.
Optimizing module program_counter.
Optimizing module regfile.
Optimizing module sign_mask_gen.
Optimizing module top.

19.30.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALUControl'.
Finding identical cells in module `\ForwardingUnit'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\alu'.
Finding identical cells in module `\branch_decision'.
Finding identical cells in module `\branch_predictor'.
Finding identical cells in module `\control'.
Finding identical cells in module `\cpu'.
Finding identical cells in module `\csr_file'.
<suppressed ~12 debug messages>
Finding identical cells in module `\data_mem'.
Finding identical cells in module `\ex_mem'.
Finding identical cells in module `\id_ex'.
Finding identical cells in module `\if_id'.
Finding identical cells in module `\imm_gen'.
Finding identical cells in module `\mem_wb'.
Finding identical cells in module `\mux2to1'.
Finding identical cells in module `\program_counter'.
Finding identical cells in module `\regfile'.
Finding identical cells in module `\sign_mask_gen'.
Finding identical cells in module `\top'.
Removed a total of 4 cells.

19.30.4. Executing OPT_RMDFF pass (remove dff with constant values).

19.30.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALUControl..
Finding unused cells or wires in module \ForwardingUnit..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \branch_decision..
Finding unused cells or wires in module \branch_predictor..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \cpu..
Finding unused cells or wires in module \csr_file..
Finding unused cells or wires in module \data_mem..
Finding unused cells or wires in module \ex_mem..
Finding unused cells or wires in module \id_ex..
Finding unused cells or wires in module \if_id..
Finding unused cells or wires in module \imm_gen..
Finding unused cells or wires in module \mem_wb..
Finding unused cells or wires in module \mux2to1..
Finding unused cells or wires in module \program_counter..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \sign_mask_gen..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

19.30.6. Rerunning OPT passes. (Removed registers in this run.)

19.30.7. Running ICE40 specific optimizations.

19.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALUControl.
Optimizing module ForwardingUnit.
Optimizing module adder.
Optimizing module alu.
Optimizing module branch_decision.
Optimizing module branch_predictor.
Optimizing module control.
Optimizing module cpu.
Optimizing module csr_file.
Optimizing module data_mem.
Optimizing module ex_mem.
Optimizing module id_ex.
Optimizing module if_id.
Optimizing module imm_gen.
Optimizing module mem_wb.
Optimizing module mux2to1.
Optimizing module program_counter.
Optimizing module regfile.
Optimizing module sign_mask_gen.
Optimizing module top.

19.30.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALUControl'.
Finding identical cells in module `\ForwardingUnit'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\alu'.
Finding identical cells in module `\branch_decision'.
Finding identical cells in module `\branch_predictor'.
Finding identical cells in module `\control'.
Finding identical cells in module `\cpu'.
Finding identical cells in module `\csr_file'.
Finding identical cells in module `\data_mem'.
Finding identical cells in module `\ex_mem'.
Finding identical cells in module `\id_ex'.
Finding identical cells in module `\if_id'.
Finding identical cells in module `\imm_gen'.
Finding identical cells in module `\mem_wb'.
Finding identical cells in module `\mux2to1'.
Finding identical cells in module `\program_counter'.
Finding identical cells in module `\regfile'.
Finding identical cells in module `\sign_mask_gen'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

19.30.10. Executing OPT_RMDFF pass (remove dff with constant values).

19.30.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALUControl..
Finding unused cells or wires in module \ForwardingUnit..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \branch_decision..
Finding unused cells or wires in module \branch_predictor..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \cpu..
Finding unused cells or wires in module \csr_file..
Finding unused cells or wires in module \data_mem..
Finding unused cells or wires in module \ex_mem..
Finding unused cells or wires in module \id_ex..
Finding unused cells or wires in module \if_id..
Finding unused cells or wires in module \imm_gen..
Finding unused cells or wires in module \mem_wb..
Finding unused cells or wires in module \mux2to1..
Finding unused cells or wires in module \program_counter..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \sign_mask_gen..
Finding unused cells or wires in module \top..

19.30.12. Finished OPT passes. (There is nothing left to do.)

19.31. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module ALUControl:
Transforming FF to FF+Enable cells in module ForwardingUnit:
Transforming FF to FF+Enable cells in module adder:
Transforming FF to FF+Enable cells in module alu:
Transforming FF to FF+Enable cells in module branch_decision:
Transforming FF to FF+Enable cells in module branch_predictor:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9234 to $_DFFE_PP_ for $0\s[1:0] [0] -> \s [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9235 to $_DFFE_PP_ for $0\s[1:0] [1] -> \s [1].
Transforming FF to FF+Enable cells in module control:
Transforming FF to FF+Enable cells in module cpu:
Transforming FF to FF+Enable cells in module csr_file:
Transforming FF to FF+Enable cells in module data_mem:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10266 to $_DFFE_PP_ for $0\read_data[31:0] [0] -> \read_data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10267 to $_DFFE_PP_ for $0\read_data[31:0] [1] -> \read_data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10268 to $_DFFE_PP_ for $0\read_data[31:0] [2] -> \read_data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10269 to $_DFFE_PP_ for $0\read_data[31:0] [3] -> \read_data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10270 to $_DFFE_PP_ for $0\read_data[31:0] [4] -> \read_data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10271 to $_DFFE_PP_ for $0\read_data[31:0] [5] -> \read_data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10272 to $_DFFE_PP_ for $0\read_data[31:0] [6] -> \read_data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10273 to $_DFFE_PP_ for $0\read_data[31:0] [7] -> \read_data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10274 to $_DFFE_PP_ for $0\read_data[31:0] [8] -> \read_data [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10275 to $_DFFE_PP_ for $0\read_data[31:0] [9] -> \read_data [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10276 to $_DFFE_PP_ for $0\read_data[31:0] [10] -> \read_data [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10277 to $_DFFE_PP_ for $0\read_data[31:0] [11] -> \read_data [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10278 to $_DFFE_PP_ for $0\read_data[31:0] [12] -> \read_data [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10279 to $_DFFE_PP_ for $0\read_data[31:0] [13] -> \read_data [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10280 to $_DFFE_PP_ for $0\read_data[31:0] [14] -> \read_data [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10281 to $_DFFE_PP_ for $0\read_data[31:0] [15] -> \read_data [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10282 to $_DFFE_PP_ for $0\read_data[31:0] [16] -> \read_data [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10283 to $_DFFE_PP_ for $0\read_data[31:0] [17] -> \read_data [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10284 to $_DFFE_PP_ for $0\read_data[31:0] [18] -> \read_data [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10285 to $_DFFE_PP_ for $0\read_data[31:0] [19] -> \read_data [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10286 to $_DFFE_PP_ for $0\read_data[31:0] [20] -> \read_data [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10287 to $_DFFE_PP_ for $0\read_data[31:0] [21] -> \read_data [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10288 to $_DFFE_PP_ for $0\read_data[31:0] [22] -> \read_data [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10289 to $_DFFE_PP_ for $0\read_data[31:0] [23] -> \read_data [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10290 to $_DFFE_PP_ for $0\read_data[31:0] [24] -> \read_data [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10291 to $_DFFE_PP_ for $0\read_data[31:0] [25] -> \read_data [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10292 to $_DFFE_PP_ for $0\read_data[31:0] [26] -> \read_data [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10293 to $_DFFE_PP_ for $0\read_data[31:0] [27] -> \read_data [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10294 to $_DFFE_PP_ for $0\read_data[31:0] [28] -> \read_data [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10295 to $_DFFE_PP_ for $0\read_data[31:0] [29] -> \read_data [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10296 to $_DFFE_PP_ for $0\read_data[31:0] [30] -> \read_data [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10297 to $_DFFE_PP_ for $0\read_data[31:0] [31] -> \read_data [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10298 to $_DFFE_PP_ for $0\clk_stall[0:0] -> \clk_stall.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10299 to $_DFFE_PP_ for $0\state[31:0] [0] -> \state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10300 to $_DFFE_PP_ for $0\state[31:0] [1] -> \state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10301 to $_DFFE_PP_ for $0\state[31:0] [2] -> \state [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10302 to $_DFFE_PP_ for $0\state[31:0] [3] -> \state [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10303 to $_DFFE_PP_ for $0\state[31:0] [4] -> \state [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10304 to $_DFFE_PP_ for $0\state[31:0] [5] -> \state [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10305 to $_DFFE_PP_ for $0\state[31:0] [6] -> \state [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10306 to $_DFFE_PP_ for $0\state[31:0] [7] -> \state [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10307 to $_DFFE_PP_ for $0\state[31:0] [8] -> \state [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10308 to $_DFFE_PP_ for $0\state[31:0] [9] -> \state [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10309 to $_DFFE_PP_ for $0\state[31:0] [10] -> \state [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10310 to $_DFFE_PP_ for $0\state[31:0] [11] -> \state [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10311 to $_DFFE_PP_ for $0\state[31:0] [12] -> \state [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10312 to $_DFFE_PP_ for $0\state[31:0] [13] -> \state [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10313 to $_DFFE_PP_ for $0\state[31:0] [14] -> \state [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10314 to $_DFFE_PP_ for $0\state[31:0] [15] -> \state [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10315 to $_DFFE_PP_ for $0\state[31:0] [16] -> \state [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10316 to $_DFFE_PP_ for $0\state[31:0] [17] -> \state [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10317 to $_DFFE_PP_ for $0\state[31:0] [18] -> \state [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10318 to $_DFFE_PP_ for $0\state[31:0] [19] -> \state [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10319 to $_DFFE_PP_ for $0\state[31:0] [20] -> \state [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10320 to $_DFFE_PP_ for $0\state[31:0] [21] -> \state [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10321 to $_DFFE_PP_ for $0\state[31:0] [22] -> \state [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10322 to $_DFFE_PP_ for $0\state[31:0] [23] -> \state [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10323 to $_DFFE_PP_ for $0\state[31:0] [24] -> \state [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10324 to $_DFFE_PP_ for $0\state[31:0] [25] -> \state [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10325 to $_DFFE_PP_ for $0\state[31:0] [26] -> \state [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10326 to $_DFFE_PP_ for $0\state[31:0] [27] -> \state [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10327 to $_DFFE_PP_ for $0\state[31:0] [28] -> \state [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10328 to $_DFFE_PP_ for $0\state[31:0] [29] -> \state [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10329 to $_DFFE_PP_ for $0\state[31:0] [30] -> \state [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10330 to $_DFFE_PP_ for $0\state[31:0] [31] -> \state [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10331 to $_DFFE_PP_ for $0\memread_buf[0:0] -> \memread_buf.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10332 to $_DFFE_PP_ for $0\memwrite_buf[0:0] -> \memwrite_buf.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10333 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [0] -> \write_data_buffer [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10334 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [1] -> \write_data_buffer [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10335 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [2] -> \write_data_buffer [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10336 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [3] -> \write_data_buffer [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10337 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [4] -> \write_data_buffer [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10338 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [5] -> \write_data_buffer [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10339 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [6] -> \write_data_buffer [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10340 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [7] -> \write_data_buffer [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10341 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [8] -> \write_data_buffer [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10342 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [9] -> \write_data_buffer [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10343 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [10] -> \write_data_buffer [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10344 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [11] -> \write_data_buffer [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10345 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [12] -> \write_data_buffer [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10346 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [13] -> \write_data_buffer [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10347 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [14] -> \write_data_buffer [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10348 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [15] -> \write_data_buffer [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10349 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [16] -> \write_data_buffer [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10350 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [17] -> \write_data_buffer [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10351 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [18] -> \write_data_buffer [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10352 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [19] -> \write_data_buffer [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10353 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [20] -> \write_data_buffer [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10354 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [21] -> \write_data_buffer [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10355 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [22] -> \write_data_buffer [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10356 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [23] -> \write_data_buffer [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10357 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [24] -> \write_data_buffer [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10358 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [25] -> \write_data_buffer [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10359 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [26] -> \write_data_buffer [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10360 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [27] -> \write_data_buffer [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10361 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [28] -> \write_data_buffer [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10362 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [29] -> \write_data_buffer [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10363 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [30] -> \write_data_buffer [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10364 to $_DFFE_PP_ for $0\write_data_buffer[31:0] [31] -> \write_data_buffer [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10365 to $_DFFE_PP_ for $0\addr_buf[31:0] [0] -> \addr_buf [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10366 to $_DFFE_PP_ for $0\addr_buf[31:0] [1] -> \addr_buf [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10367 to $_DFFE_PP_ for $0\addr_buf[31:0] [2] -> \addr_buf [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10368 to $_DFFE_PP_ for $0\addr_buf[31:0] [3] -> \addr_buf [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10369 to $_DFFE_PP_ for $0\addr_buf[31:0] [4] -> \addr_buf [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10370 to $_DFFE_PP_ for $0\addr_buf[31:0] [5] -> \addr_buf [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10371 to $_DFFE_PP_ for $0\addr_buf[31:0] [6] -> \addr_buf [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10372 to $_DFFE_PP_ for $0\addr_buf[31:0] [7] -> \addr_buf [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10373 to $_DFFE_PP_ for $0\addr_buf[31:0] [8] -> \addr_buf [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10374 to $_DFFE_PP_ for $0\addr_buf[31:0] [9] -> \addr_buf [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10375 to $_DFFE_PP_ for $0\addr_buf[31:0] [10] -> \addr_buf [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10376 to $_DFFE_PP_ for $0\addr_buf[31:0] [11] -> \addr_buf [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10398 to $_DFFE_PP_ for $0\sign_mask_buf[3:0] [1] -> \sign_mask_buf [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10399 to $_DFFE_PP_ for $0\sign_mask_buf[3:0] [2] -> \sign_mask_buf [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10400 to $_DFFE_PP_ for $0\sign_mask_buf[3:0] [3] -> \sign_mask_buf [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10401 to $_DFFE_PP_ for $0\led_reg[31:0] [0] -> \led_reg [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10402 to $_DFFE_PP_ for $0\led_reg[31:0] [1] -> \led_reg [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10403 to $_DFFE_PP_ for $0\led_reg[31:0] [2] -> \led_reg [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10404 to $_DFFE_PP_ for $0\led_reg[31:0] [3] -> \led_reg [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10405 to $_DFFE_PP_ for $0\led_reg[31:0] [4] -> \led_reg [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10406 to $_DFFE_PP_ for $0\led_reg[31:0] [5] -> \led_reg [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10407 to $_DFFE_PP_ for $0\led_reg[31:0] [6] -> \led_reg [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10408 to $_DFFE_PP_ for $0\led_reg[31:0] [7] -> \led_reg [7].
Transforming FF to FF+Enable cells in module ex_mem:
Transforming FF to FF+Enable cells in module id_ex:
Transforming FF to FF+Enable cells in module if_id:
Transforming FF to FF+Enable cells in module imm_gen:
Transforming FF to FF+Enable cells in module mem_wb:
Transforming FF to FF+Enable cells in module mux2to1:
Transforming FF to FF+Enable cells in module program_counter:
Transforming FF to FF+Enable cells in module regfile:
Transforming FF to FF+Enable cells in module sign_mask_gen:
Transforming FF to FF+Enable cells in module top:

19.32. Executing TECHMAP pass (map to technology primitives).

19.32.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

19.32.2. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_N_ for cells of type $_DFF_N_.
No more expansions possible.
<suppressed ~781 debug messages>

19.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALUControl.
Optimizing module ForwardingUnit.
Optimizing module adder.
Optimizing module alu.
Optimizing module branch_decision.
Optimizing module branch_predictor.
<suppressed ~4 debug messages>
Optimizing module control.
Optimizing module cpu.
Optimizing module csr_file.
Optimizing module data_mem.
<suppressed ~244 debug messages>
Optimizing module ex_mem.
Optimizing module id_ex.
Optimizing module if_id.
Optimizing module imm_gen.
Optimizing module mem_wb.
Optimizing module mux2to1.
Optimizing module program_counter.
Optimizing module regfile.
Optimizing module sign_mask_gen.
Optimizing module top.

19.34. Executing SIMPLEMAP pass (map simple cells to gate primitives).

19.35. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in ALUControl.
Handling FF init values in ForwardingUnit.
Handling FF init values in adder.
Handling FF init values in alu.
Handling FF init values in branch_decision.
Handling FF init values in branch_predictor.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9235 (SB_DFFE): \s [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9236 (SB_DFFN): \branch_mem_sig_reg = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9234 (SB_DFFE): \s [0] = 0
Handling FF init values in control.
Handling FF init values in cpu.
Handling FF init values in csr_file.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4139 (SB_DFF): \rdVal_CSR [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4110 (SB_DFF): \rdVal_CSR [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4111 (SB_DFF): \rdVal_CSR [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4112 (SB_DFF): \rdVal_CSR [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4113 (SB_DFF): \rdVal_CSR [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4114 (SB_DFF): \rdVal_CSR [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4115 (SB_DFF): \rdVal_CSR [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4116 (SB_DFF): \rdVal_CSR [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4117 (SB_DFF): \rdVal_CSR [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4118 (SB_DFF): \rdVal_CSR [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4119 (SB_DFF): \rdVal_CSR [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4120 (SB_DFF): \rdVal_CSR [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4121 (SB_DFF): \rdVal_CSR [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4122 (SB_DFF): \rdVal_CSR [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4123 (SB_DFF): \rdVal_CSR [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4124 (SB_DFF): \rdVal_CSR [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4125 (SB_DFF): \rdVal_CSR [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4126 (SB_DFF): \rdVal_CSR [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4127 (SB_DFF): \rdVal_CSR [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4128 (SB_DFF): \rdVal_CSR [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4129 (SB_DFF): \rdVal_CSR [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4130 (SB_DFF): \rdVal_CSR [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4131 (SB_DFF): \rdVal_CSR [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4132 (SB_DFF): \rdVal_CSR [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4133 (SB_DFF): \rdVal_CSR [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4134 (SB_DFF): \rdVal_CSR [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4135 (SB_DFF): \rdVal_CSR [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4136 (SB_DFF): \rdVal_CSR [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4137 (SB_DFF): \rdVal_CSR [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4138 (SB_DFF): \rdVal_CSR [29] = 0
Handling FF init values in data_mem.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10298 (SB_DFFE): \clk_stall = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10300 (SB_DFFE): \state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10301 (SB_DFFE): \state [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10302 (SB_DFFE): \state [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10303 (SB_DFFE): \state [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10304 (SB_DFFE): \state [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10305 (SB_DFFE): \state [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10306 (SB_DFFE): \state [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10307 (SB_DFFE): \state [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10308 (SB_DFFE): \state [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10309 (SB_DFFE): \state [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10310 (SB_DFFE): \state [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10311 (SB_DFFE): \state [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10312 (SB_DFFE): \state [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10313 (SB_DFFE): \state [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10314 (SB_DFFE): \state [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10315 (SB_DFFE): \state [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10316 (SB_DFFE): \state [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10317 (SB_DFFE): \state [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10318 (SB_DFFE): \state [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10319 (SB_DFFE): \state [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10320 (SB_DFFE): \state [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10321 (SB_DFFE): \state [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10322 (SB_DFFE): \state [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10323 (SB_DFFE): \state [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10324 (SB_DFFE): \state [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10325 (SB_DFFE): \state [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10326 (SB_DFFE): \state [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10327 (SB_DFFE): \state [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10328 (SB_DFFE): \state [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10329 (SB_DFFE): \state [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10299 (SB_DFFE): \state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10330 (SB_DFFE): \state [31] = 0
Handling FF init values in ex_mem.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8885 (SB_DFF): \data_out [154] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8731 (SB_DFF): \data_out [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8732 (SB_DFF): \data_out [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8733 (SB_DFF): \data_out [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8734 (SB_DFF): \data_out [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8735 (SB_DFF): \data_out [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8736 (SB_DFF): \data_out [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8737 (SB_DFF): \data_out [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8738 (SB_DFF): \data_out [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8739 (SB_DFF): \data_out [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8740 (SB_DFF): \data_out [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8741 (SB_DFF): \data_out [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8742 (SB_DFF): \data_out [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8743 (SB_DFF): \data_out [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8744 (SB_DFF): \data_out [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8745 (SB_DFF): \data_out [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8746 (SB_DFF): \data_out [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8747 (SB_DFF): \data_out [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8748 (SB_DFF): \data_out [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8749 (SB_DFF): \data_out [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8750 (SB_DFF): \data_out [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8751 (SB_DFF): \data_out [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8752 (SB_DFF): \data_out [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8753 (SB_DFF): \data_out [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8754 (SB_DFF): \data_out [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8755 (SB_DFF): \data_out [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8756 (SB_DFF): \data_out [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8757 (SB_DFF): \data_out [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8758 (SB_DFF): \data_out [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8759 (SB_DFF): \data_out [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8760 (SB_DFF): \data_out [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8761 (SB_DFF): \data_out [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8762 (SB_DFF): \data_out [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8763 (SB_DFF): \data_out [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8764 (SB_DFF): \data_out [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8765 (SB_DFF): \data_out [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8766 (SB_DFF): \data_out [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8767 (SB_DFF): \data_out [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8768 (SB_DFF): \data_out [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8769 (SB_DFF): \data_out [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8770 (SB_DFF): \data_out [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8771 (SB_DFF): \data_out [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8772 (SB_DFF): \data_out [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8773 (SB_DFF): \data_out [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8774 (SB_DFF): \data_out [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8775 (SB_DFF): \data_out [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8776 (SB_DFF): \data_out [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8777 (SB_DFF): \data_out [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8778 (SB_DFF): \data_out [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8779 (SB_DFF): \data_out [48] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8780 (SB_DFF): \data_out [49] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8781 (SB_DFF): \data_out [50] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8782 (SB_DFF): \data_out [51] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8783 (SB_DFF): \data_out [52] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8784 (SB_DFF): \data_out [53] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8785 (SB_DFF): \data_out [54] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8786 (SB_DFF): \data_out [55] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8787 (SB_DFF): \data_out [56] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8788 (SB_DFF): \data_out [57] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8789 (SB_DFF): \data_out [58] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8790 (SB_DFF): \data_out [59] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8791 (SB_DFF): \data_out [60] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8792 (SB_DFF): \data_out [61] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8793 (SB_DFF): \data_out [62] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8794 (SB_DFF): \data_out [63] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8795 (SB_DFF): \data_out [64] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8796 (SB_DFF): \data_out [65] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8797 (SB_DFF): \data_out [66] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8798 (SB_DFF): \data_out [67] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8799 (SB_DFF): \data_out [68] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8800 (SB_DFF): \data_out [69] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8801 (SB_DFF): \data_out [70] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8802 (SB_DFF): \data_out [71] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8803 (SB_DFF): \data_out [72] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8804 (SB_DFF): \data_out [73] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8805 (SB_DFF): \data_out [74] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8806 (SB_DFF): \data_out [75] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8807 (SB_DFF): \data_out [76] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8808 (SB_DFF): \data_out [77] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8809 (SB_DFF): \data_out [78] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8810 (SB_DFF): \data_out [79] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8811 (SB_DFF): \data_out [80] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8812 (SB_DFF): \data_out [81] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8813 (SB_DFF): \data_out [82] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8814 (SB_DFF): \data_out [83] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8815 (SB_DFF): \data_out [84] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8816 (SB_DFF): \data_out [85] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8817 (SB_DFF): \data_out [86] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8818 (SB_DFF): \data_out [87] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8819 (SB_DFF): \data_out [88] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8820 (SB_DFF): \data_out [89] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8821 (SB_DFF): \data_out [90] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8822 (SB_DFF): \data_out [91] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8823 (SB_DFF): \data_out [92] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8824 (SB_DFF): \data_out [93] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8825 (SB_DFF): \data_out [94] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8826 (SB_DFF): \data_out [95] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8827 (SB_DFF): \data_out [96] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8828 (SB_DFF): \data_out [97] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8829 (SB_DFF): \data_out [98] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8830 (SB_DFF): \data_out [99] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8831 (SB_DFF): \data_out [100] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8832 (SB_DFF): \data_out [101] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8833 (SB_DFF): \data_out [102] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8834 (SB_DFF): \data_out [103] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8835 (SB_DFF): \data_out [104] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8836 (SB_DFF): \data_out [105] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8837 (SB_DFF): \data_out [106] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8838 (SB_DFF): \data_out [107] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8839 (SB_DFF): \data_out [108] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8840 (SB_DFF): \data_out [109] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8841 (SB_DFF): \data_out [110] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8842 (SB_DFF): \data_out [111] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8843 (SB_DFF): \data_out [112] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8844 (SB_DFF): \data_out [113] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8845 (SB_DFF): \data_out [114] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8846 (SB_DFF): \data_out [115] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8847 (SB_DFF): \data_out [116] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8848 (SB_DFF): \data_out [117] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8849 (SB_DFF): \data_out [118] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8850 (SB_DFF): \data_out [119] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8851 (SB_DFF): \data_out [120] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8852 (SB_DFF): \data_out [121] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8853 (SB_DFF): \data_out [122] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8854 (SB_DFF): \data_out [123] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8855 (SB_DFF): \data_out [124] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8856 (SB_DFF): \data_out [125] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8857 (SB_DFF): \data_out [126] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8858 (SB_DFF): \data_out [127] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8859 (SB_DFF): \data_out [128] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8860 (SB_DFF): \data_out [129] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8861 (SB_DFF): \data_out [130] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8862 (SB_DFF): \data_out [131] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8863 (SB_DFF): \data_out [132] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8864 (SB_DFF): \data_out [133] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8865 (SB_DFF): \data_out [134] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8866 (SB_DFF): \data_out [135] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8867 (SB_DFF): \data_out [136] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8868 (SB_DFF): \data_out [137] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8869 (SB_DFF): \data_out [138] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8870 (SB_DFF): \data_out [139] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8871 (SB_DFF): \data_out [140] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8872 (SB_DFF): \data_out [141] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8873 (SB_DFF): \data_out [142] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8874 (SB_DFF): \data_out [143] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8875 (SB_DFF): \data_out [144] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8876 (SB_DFF): \data_out [145] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8877 (SB_DFF): \data_out [146] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8878 (SB_DFF): \data_out [147] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8879 (SB_DFF): \data_out [148] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8880 (SB_DFF): \data_out [149] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8881 (SB_DFF): \data_out [150] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8882 (SB_DFF): \data_out [151] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8883 (SB_DFF): \data_out [152] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8884 (SB_DFF): \data_out [153] = 0
Handling FF init values in id_ex.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5560 (SB_DFF): \data_out [177] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5383 (SB_DFF): \data_out [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5384 (SB_DFF): \data_out [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5385 (SB_DFF): \data_out [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5386 (SB_DFF): \data_out [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5387 (SB_DFF): \data_out [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5388 (SB_DFF): \data_out [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5389 (SB_DFF): \data_out [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5390 (SB_DFF): \data_out [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5391 (SB_DFF): \data_out [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5392 (SB_DFF): \data_out [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5393 (SB_DFF): \data_out [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5394 (SB_DFF): \data_out [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5395 (SB_DFF): \data_out [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5396 (SB_DFF): \data_out [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5397 (SB_DFF): \data_out [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5398 (SB_DFF): \data_out [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5399 (SB_DFF): \data_out [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5400 (SB_DFF): \data_out [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5401 (SB_DFF): \data_out [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5402 (SB_DFF): \data_out [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5403 (SB_DFF): \data_out [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5404 (SB_DFF): \data_out [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5405 (SB_DFF): \data_out [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5406 (SB_DFF): \data_out [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5407 (SB_DFF): \data_out [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5408 (SB_DFF): \data_out [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5409 (SB_DFF): \data_out [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5410 (SB_DFF): \data_out [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5411 (SB_DFF): \data_out [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5412 (SB_DFF): \data_out [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5413 (SB_DFF): \data_out [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5414 (SB_DFF): \data_out [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5415 (SB_DFF): \data_out [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5416 (SB_DFF): \data_out [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5417 (SB_DFF): \data_out [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5418 (SB_DFF): \data_out [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5419 (SB_DFF): \data_out [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5420 (SB_DFF): \data_out [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5421 (SB_DFF): \data_out [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5422 (SB_DFF): \data_out [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5423 (SB_DFF): \data_out [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5424 (SB_DFF): \data_out [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5425 (SB_DFF): \data_out [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5426 (SB_DFF): \data_out [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5427 (SB_DFF): \data_out [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5428 (SB_DFF): \data_out [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5429 (SB_DFF): \data_out [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5430 (SB_DFF): \data_out [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5431 (SB_DFF): \data_out [48] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5432 (SB_DFF): \data_out [49] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5433 (SB_DFF): \data_out [50] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5434 (SB_DFF): \data_out [51] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5435 (SB_DFF): \data_out [52] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5436 (SB_DFF): \data_out [53] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5437 (SB_DFF): \data_out [54] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5438 (SB_DFF): \data_out [55] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5439 (SB_DFF): \data_out [56] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5440 (SB_DFF): \data_out [57] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5441 (SB_DFF): \data_out [58] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5442 (SB_DFF): \data_out [59] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5443 (SB_DFF): \data_out [60] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5444 (SB_DFF): \data_out [61] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5445 (SB_DFF): \data_out [62] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5446 (SB_DFF): \data_out [63] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5447 (SB_DFF): \data_out [64] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5448 (SB_DFF): \data_out [65] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5449 (SB_DFF): \data_out [66] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5450 (SB_DFF): \data_out [67] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5451 (SB_DFF): \data_out [68] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5452 (SB_DFF): \data_out [69] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5453 (SB_DFF): \data_out [70] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5454 (SB_DFF): \data_out [71] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5455 (SB_DFF): \data_out [72] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5456 (SB_DFF): \data_out [73] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5457 (SB_DFF): \data_out [74] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5458 (SB_DFF): \data_out [75] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5459 (SB_DFF): \data_out [76] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5460 (SB_DFF): \data_out [77] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5461 (SB_DFF): \data_out [78] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5462 (SB_DFF): \data_out [79] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5463 (SB_DFF): \data_out [80] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5464 (SB_DFF): \data_out [81] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5465 (SB_DFF): \data_out [82] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5466 (SB_DFF): \data_out [83] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5467 (SB_DFF): \data_out [84] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5468 (SB_DFF): \data_out [85] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5469 (SB_DFF): \data_out [86] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5470 (SB_DFF): \data_out [87] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5471 (SB_DFF): \data_out [88] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5472 (SB_DFF): \data_out [89] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5473 (SB_DFF): \data_out [90] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5474 (SB_DFF): \data_out [91] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5475 (SB_DFF): \data_out [92] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5476 (SB_DFF): \data_out [93] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5477 (SB_DFF): \data_out [94] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5478 (SB_DFF): \data_out [95] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5479 (SB_DFF): \data_out [96] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5480 (SB_DFF): \data_out [97] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5481 (SB_DFF): \data_out [98] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5482 (SB_DFF): \data_out [99] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5483 (SB_DFF): \data_out [100] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5484 (SB_DFF): \data_out [101] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5485 (SB_DFF): \data_out [102] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5486 (SB_DFF): \data_out [103] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5487 (SB_DFF): \data_out [104] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5488 (SB_DFF): \data_out [105] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5489 (SB_DFF): \data_out [106] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5490 (SB_DFF): \data_out [107] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5491 (SB_DFF): \data_out [108] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5492 (SB_DFF): \data_out [109] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5493 (SB_DFF): \data_out [110] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5494 (SB_DFF): \data_out [111] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5495 (SB_DFF): \data_out [112] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5496 (SB_DFF): \data_out [113] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5497 (SB_DFF): \data_out [114] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5498 (SB_DFF): \data_out [115] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5499 (SB_DFF): \data_out [116] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5500 (SB_DFF): \data_out [117] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5501 (SB_DFF): \data_out [118] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5502 (SB_DFF): \data_out [119] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5503 (SB_DFF): \data_out [120] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5504 (SB_DFF): \data_out [121] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5505 (SB_DFF): \data_out [122] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5506 (SB_DFF): \data_out [123] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5507 (SB_DFF): \data_out [124] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5508 (SB_DFF): \data_out [125] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5509 (SB_DFF): \data_out [126] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5510 (SB_DFF): \data_out [127] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5511 (SB_DFF): \data_out [128] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5512 (SB_DFF): \data_out [129] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5513 (SB_DFF): \data_out [130] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5514 (SB_DFF): \data_out [131] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5515 (SB_DFF): \data_out [132] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5516 (SB_DFF): \data_out [133] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5517 (SB_DFF): \data_out [134] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5518 (SB_DFF): \data_out [135] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5519 (SB_DFF): \data_out [136] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5520 (SB_DFF): \data_out [137] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5521 (SB_DFF): \data_out [138] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5522 (SB_DFF): \data_out [139] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5523 (SB_DFF): \data_out [140] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5524 (SB_DFF): \data_out [141] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5525 (SB_DFF): \data_out [142] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5526 (SB_DFF): \data_out [143] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5527 (SB_DFF): \data_out [144] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5528 (SB_DFF): \data_out [145] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5529 (SB_DFF): \data_out [146] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5530 (SB_DFF): \data_out [147] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5531 (SB_DFF): \data_out [148] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5532 (SB_DFF): \data_out [149] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5533 (SB_DFF): \data_out [150] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5534 (SB_DFF): \data_out [151] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5535 (SB_DFF): \data_out [152] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5536 (SB_DFF): \data_out [153] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5537 (SB_DFF): \data_out [154] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5538 (SB_DFF): \data_out [155] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5539 (SB_DFF): \data_out [156] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5540 (SB_DFF): \data_out [157] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5541 (SB_DFF): \data_out [158] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5542 (SB_DFF): \data_out [159] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5543 (SB_DFF): \data_out [160] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5544 (SB_DFF): \data_out [161] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5545 (SB_DFF): \data_out [162] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5546 (SB_DFF): \data_out [163] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5547 (SB_DFF): \data_out [164] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5548 (SB_DFF): \data_out [165] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5549 (SB_DFF): \data_out [166] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5550 (SB_DFF): \data_out [167] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5551 (SB_DFF): \data_out [168] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5552 (SB_DFF): \data_out [169] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5553 (SB_DFF): \data_out [170] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5554 (SB_DFF): \data_out [171] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5555 (SB_DFF): \data_out [172] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5556 (SB_DFF): \data_out [173] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5557 (SB_DFF): \data_out [174] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5558 (SB_DFF): \data_out [175] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5559 (SB_DFF): \data_out [176] = 0
Handling FF init values in if_id.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2532 (SB_DFF): \data_out [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2533 (SB_DFF): \data_out [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2534 (SB_DFF): \data_out [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2535 (SB_DFF): \data_out [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2536 (SB_DFF): \data_out [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2537 (SB_DFF): \data_out [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2538 (SB_DFF): \data_out [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2539 (SB_DFF): \data_out [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2540 (SB_DFF): \data_out [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2541 (SB_DFF): \data_out [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2542 (SB_DFF): \data_out [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2543 (SB_DFF): \data_out [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2544 (SB_DFF): \data_out [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2545 (SB_DFF): \data_out [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2546 (SB_DFF): \data_out [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2547 (SB_DFF): \data_out [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2548 (SB_DFF): \data_out [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2549 (SB_DFF): \data_out [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2550 (SB_DFF): \data_out [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2551 (SB_DFF): \data_out [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2552 (SB_DFF): \data_out [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2553 (SB_DFF): \data_out [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2554 (SB_DFF): \data_out [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2555 (SB_DFF): \data_out [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2556 (SB_DFF): \data_out [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2557 (SB_DFF): \data_out [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2558 (SB_DFF): \data_out [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2559 (SB_DFF): \data_out [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2560 (SB_DFF): \data_out [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2561 (SB_DFF): \data_out [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2562 (SB_DFF): \data_out [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2563 (SB_DFF): \data_out [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2564 (SB_DFF): \data_out [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2565 (SB_DFF): \data_out [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2566 (SB_DFF): \data_out [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2567 (SB_DFF): \data_out [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2568 (SB_DFF): \data_out [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2569 (SB_DFF): \data_out [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2570 (SB_DFF): \data_out [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2571 (SB_DFF): \data_out [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2572 (SB_DFF): \data_out [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2573 (SB_DFF): \data_out [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2574 (SB_DFF): \data_out [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2575 (SB_DFF): \data_out [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2576 (SB_DFF): \data_out [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2577 (SB_DFF): \data_out [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2578 (SB_DFF): \data_out [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2579 (SB_DFF): \data_out [48] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2580 (SB_DFF): \data_out [49] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2581 (SB_DFF): \data_out [50] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2582 (SB_DFF): \data_out [51] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2583 (SB_DFF): \data_out [52] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2584 (SB_DFF): \data_out [53] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2585 (SB_DFF): \data_out [54] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2586 (SB_DFF): \data_out [55] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2587 (SB_DFF): \data_out [56] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2588 (SB_DFF): \data_out [57] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2589 (SB_DFF): \data_out [58] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2590 (SB_DFF): \data_out [59] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2591 (SB_DFF): \data_out [60] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2592 (SB_DFF): \data_out [61] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2593 (SB_DFF): \data_out [62] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2594 (SB_DFF): \data_out [63] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2531 (SB_DFF): \data_out [0] = 0
Handling FF init values in imm_gen.
Handling FF init values in mem_wb.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9008 (SB_DFF): \data_out [116] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8892 (SB_DFF): \data_out [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8893 (SB_DFF): \data_out [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8894 (SB_DFF): \data_out [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8895 (SB_DFF): \data_out [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8896 (SB_DFF): \data_out [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8897 (SB_DFF): \data_out [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8898 (SB_DFF): \data_out [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8899 (SB_DFF): \data_out [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8900 (SB_DFF): \data_out [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8901 (SB_DFF): \data_out [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8902 (SB_DFF): \data_out [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8903 (SB_DFF): \data_out [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8904 (SB_DFF): \data_out [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8905 (SB_DFF): \data_out [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8906 (SB_DFF): \data_out [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8907 (SB_DFF): \data_out [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8908 (SB_DFF): \data_out [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8909 (SB_DFF): \data_out [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8910 (SB_DFF): \data_out [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8911 (SB_DFF): \data_out [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8912 (SB_DFF): \data_out [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8913 (SB_DFF): \data_out [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8914 (SB_DFF): \data_out [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8915 (SB_DFF): \data_out [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8916 (SB_DFF): \data_out [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8917 (SB_DFF): \data_out [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8918 (SB_DFF): \data_out [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8919 (SB_DFF): \data_out [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8920 (SB_DFF): \data_out [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8921 (SB_DFF): \data_out [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8922 (SB_DFF): \data_out [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8923 (SB_DFF): \data_out [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8924 (SB_DFF): \data_out [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8925 (SB_DFF): \data_out [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8926 (SB_DFF): \data_out [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8927 (SB_DFF): \data_out [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8928 (SB_DFF): \data_out [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8929 (SB_DFF): \data_out [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8930 (SB_DFF): \data_out [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8931 (SB_DFF): \data_out [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8932 (SB_DFF): \data_out [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8933 (SB_DFF): \data_out [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8934 (SB_DFF): \data_out [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8935 (SB_DFF): \data_out [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8936 (SB_DFF): \data_out [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8937 (SB_DFF): \data_out [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8938 (SB_DFF): \data_out [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8939 (SB_DFF): \data_out [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8940 (SB_DFF): \data_out [48] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8941 (SB_DFF): \data_out [49] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8942 (SB_DFF): \data_out [50] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8943 (SB_DFF): \data_out [51] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8944 (SB_DFF): \data_out [52] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8945 (SB_DFF): \data_out [53] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8946 (SB_DFF): \data_out [54] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8947 (SB_DFF): \data_out [55] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8948 (SB_DFF): \data_out [56] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8949 (SB_DFF): \data_out [57] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8950 (SB_DFF): \data_out [58] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8951 (SB_DFF): \data_out [59] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8952 (SB_DFF): \data_out [60] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8953 (SB_DFF): \data_out [61] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8954 (SB_DFF): \data_out [62] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8955 (SB_DFF): \data_out [63] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8956 (SB_DFF): \data_out [64] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8957 (SB_DFF): \data_out [65] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8958 (SB_DFF): \data_out [66] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8959 (SB_DFF): \data_out [67] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8960 (SB_DFF): \data_out [68] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8961 (SB_DFF): \data_out [69] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8962 (SB_DFF): \data_out [70] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8963 (SB_DFF): \data_out [71] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8964 (SB_DFF): \data_out [72] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8965 (SB_DFF): \data_out [73] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8966 (SB_DFF): \data_out [74] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8967 (SB_DFF): \data_out [75] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8968 (SB_DFF): \data_out [76] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8969 (SB_DFF): \data_out [77] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8970 (SB_DFF): \data_out [78] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8971 (SB_DFF): \data_out [79] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8972 (SB_DFF): \data_out [80] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8973 (SB_DFF): \data_out [81] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8974 (SB_DFF): \data_out [82] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8975 (SB_DFF): \data_out [83] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8976 (SB_DFF): \data_out [84] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8977 (SB_DFF): \data_out [85] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8978 (SB_DFF): \data_out [86] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8979 (SB_DFF): \data_out [87] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8980 (SB_DFF): \data_out [88] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8981 (SB_DFF): \data_out [89] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8982 (SB_DFF): \data_out [90] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8983 (SB_DFF): \data_out [91] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8984 (SB_DFF): \data_out [92] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8985 (SB_DFF): \data_out [93] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8986 (SB_DFF): \data_out [94] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8987 (SB_DFF): \data_out [95] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8988 (SB_DFF): \data_out [96] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8989 (SB_DFF): \data_out [97] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8990 (SB_DFF): \data_out [98] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8991 (SB_DFF): \data_out [99] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8992 (SB_DFF): \data_out [100] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8993 (SB_DFF): \data_out [101] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8994 (SB_DFF): \data_out [102] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8995 (SB_DFF): \data_out [103] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8996 (SB_DFF): \data_out [104] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8997 (SB_DFF): \data_out [105] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8998 (SB_DFF): \data_out [106] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8999 (SB_DFF): \data_out [107] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9000 (SB_DFF): \data_out [108] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9001 (SB_DFF): \data_out [109] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9002 (SB_DFF): \data_out [110] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9003 (SB_DFF): \data_out [111] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9004 (SB_DFF): \data_out [112] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9005 (SB_DFF): \data_out [113] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9006 (SB_DFF): \data_out [114] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9007 (SB_DFF): \data_out [115] = 0
Handling FF init values in mux2to1.
Handling FF init values in program_counter.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2500 (SB_DFF): \bufferedOutAddr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2501 (SB_DFF): \bufferedOutAddr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2502 (SB_DFF): \bufferedOutAddr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2503 (SB_DFF): \bufferedOutAddr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2504 (SB_DFF): \bufferedOutAddr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2505 (SB_DFF): \bufferedOutAddr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2506 (SB_DFF): \bufferedOutAddr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2507 (SB_DFF): \bufferedOutAddr [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2508 (SB_DFF): \bufferedOutAddr [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2509 (SB_DFF): \bufferedOutAddr [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2510 (SB_DFF): \bufferedOutAddr [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2511 (SB_DFF): \bufferedOutAddr [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2512 (SB_DFF): \bufferedOutAddr [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2513 (SB_DFF): \bufferedOutAddr [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2514 (SB_DFF): \bufferedOutAddr [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2515 (SB_DFF): \bufferedOutAddr [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2516 (SB_DFF): \bufferedOutAddr [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2517 (SB_DFF): \bufferedOutAddr [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2518 (SB_DFF): \bufferedOutAddr [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2519 (SB_DFF): \bufferedOutAddr [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2520 (SB_DFF): \bufferedOutAddr [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2521 (SB_DFF): \bufferedOutAddr [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2522 (SB_DFF): \bufferedOutAddr [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2523 (SB_DFF): \bufferedOutAddr [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2524 (SB_DFF): \bufferedOutAddr [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2525 (SB_DFF): \bufferedOutAddr [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2526 (SB_DFF): \bufferedOutAddr [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2527 (SB_DFF): \bufferedOutAddr [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2528 (SB_DFF): \bufferedOutAddr [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2529 (SB_DFF): \bufferedOutAddr [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2530 (SB_DFF): \bufferedOutAddr [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2499 (SB_DFF): \bufferedOutAddr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2467 (SB_DFF): \outAddr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2468 (SB_DFF): \outAddr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2469 (SB_DFF): \outAddr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2470 (SB_DFF): \outAddr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2471 (SB_DFF): \outAddr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2472 (SB_DFF): \outAddr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2473 (SB_DFF): \outAddr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2474 (SB_DFF): \outAddr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2475 (SB_DFF): \outAddr [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2476 (SB_DFF): \outAddr [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2477 (SB_DFF): \outAddr [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2478 (SB_DFF): \outAddr [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2479 (SB_DFF): \outAddr [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2480 (SB_DFF): \outAddr [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2481 (SB_DFF): \outAddr [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2482 (SB_DFF): \outAddr [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2483 (SB_DFF): \outAddr [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2484 (SB_DFF): \outAddr [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2485 (SB_DFF): \outAddr [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2486 (SB_DFF): \outAddr [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2487 (SB_DFF): \outAddr [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2488 (SB_DFF): \outAddr [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2489 (SB_DFF): \outAddr [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2490 (SB_DFF): \outAddr [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2491 (SB_DFF): \outAddr [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2492 (SB_DFF): \outAddr [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2493 (SB_DFF): \outAddr [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2494 (SB_DFF): \outAddr [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2495 (SB_DFF): \outAddr [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2496 (SB_DFF): \outAddr [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2497 (SB_DFF): \outAddr [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2498 (SB_DFF): \outAddr [31] = 0
Handling FF init values in regfile.
Handling FF init values in sign_mask_gen.
Handling FF init values in top.

19.36. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in ALUControl.
Merging set/reset $_MUX_ cells into SB_FFs in ForwardingUnit.
Merging set/reset $_MUX_ cells into SB_FFs in adder.
Merging set/reset $_MUX_ cells into SB_FFs in alu.
Merging set/reset $_MUX_ cells into SB_FFs in branch_decision.
Merging set/reset $_MUX_ cells into SB_FFs in branch_predictor.
Merging set/reset $_MUX_ cells into SB_FFs in control.
Merging set/reset $_MUX_ cells into SB_FFs in cpu.
Merging set/reset $_MUX_ cells into SB_FFs in csr_file.
  Merging $auto$simplemap.cc:277:simplemap_mux$4141 (A=1'1, B=$memory\csr_file$rdmux[0][0][0]$b$1521 [1], S=\rdAddr_CSR [9]) into $auto$simplemap.cc:420:simplemap_dff$4110 (SB_DFF).
Merging set/reset $_MUX_ cells into SB_FFs in data_mem.
Merging set/reset $_MUX_ cells into SB_FFs in ex_mem.
Merging set/reset $_MUX_ cells into SB_FFs in id_ex.
Merging set/reset $_MUX_ cells into SB_FFs in if_id.
Merging set/reset $_MUX_ cells into SB_FFs in imm_gen.
Merging set/reset $_MUX_ cells into SB_FFs in mem_wb.
Merging set/reset $_MUX_ cells into SB_FFs in mux2to1.
Merging set/reset $_MUX_ cells into SB_FFs in program_counter.
Merging set/reset $_MUX_ cells into SB_FFs in regfile.
Merging set/reset $_MUX_ cells into SB_FFs in sign_mask_gen.
Merging set/reset $_MUX_ cells into SB_FFs in top.

19.37. Executing ICE40_OPT pass (performing simple optimizations).

19.37.1. Running ICE40 specific optimizations.

19.37.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALUControl.
<suppressed ~11 debug messages>
Optimizing module ForwardingUnit.
<suppressed ~2 debug messages>
Optimizing module adder.
Optimizing module alu.
<suppressed ~33 debug messages>
Optimizing module branch_decision.
Optimizing module branch_predictor.
Optimizing module control.
Optimizing module cpu.
Optimizing module csr_file.
<suppressed ~55 debug messages>
Optimizing module data_mem.
<suppressed ~8 debug messages>
Optimizing module ex_mem.
Optimizing module id_ex.
Optimizing module if_id.
Optimizing module imm_gen.
Optimizing module mem_wb.
Optimizing module mux2to1.
Optimizing module program_counter.
Optimizing module regfile.
Optimizing module sign_mask_gen.
<suppressed ~4 debug messages>
Optimizing module top.
<suppressed ~1 debug messages>

19.37.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALUControl'.
Finding identical cells in module `\ForwardingUnit'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\alu'.
Finding identical cells in module `\branch_decision'.
Finding identical cells in module `\branch_predictor'.
Finding identical cells in module `\control'.
Finding identical cells in module `\cpu'.
Finding identical cells in module `\csr_file'.
Finding identical cells in module `\data_mem'.
<suppressed ~243 debug messages>
Finding identical cells in module `\ex_mem'.
Finding identical cells in module `\id_ex'.
Finding identical cells in module `\if_id'.
Finding identical cells in module `\imm_gen'.
Finding identical cells in module `\mem_wb'.
Finding identical cells in module `\mux2to1'.
Finding identical cells in module `\program_counter'.
Finding identical cells in module `\regfile'.
Finding identical cells in module `\sign_mask_gen'.
Finding identical cells in module `\top'.
Removed a total of 81 cells.

19.37.4. Executing OPT_RMDFF pass (remove dff with constant values).

19.37.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALUControl..
Finding unused cells or wires in module \ForwardingUnit..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \branch_decision..
Finding unused cells or wires in module \branch_predictor..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \cpu..
Finding unused cells or wires in module \csr_file..
Finding unused cells or wires in module \data_mem..
Finding unused cells or wires in module \ex_mem..
Finding unused cells or wires in module \id_ex..
Finding unused cells or wires in module \if_id..
Finding unused cells or wires in module \imm_gen..
Finding unused cells or wires in module \mem_wb..
Finding unused cells or wires in module \mux2to1..
Finding unused cells or wires in module \program_counter..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \sign_mask_gen..
Finding unused cells or wires in module \top..
Removed 1 unused cells and 2808 unused wires.
<suppressed ~11 debug messages>

19.37.6. Rerunning OPT passes. (Removed registers in this run.)

19.37.7. Running ICE40 specific optimizations.

19.37.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALUControl.
Optimizing module ForwardingUnit.
Optimizing module adder.
Optimizing module alu.
Optimizing module branch_decision.
Optimizing module branch_predictor.
Optimizing module control.
Optimizing module cpu.
Optimizing module csr_file.
Optimizing module data_mem.
Optimizing module ex_mem.
Optimizing module id_ex.
Optimizing module if_id.
Optimizing module imm_gen.
Optimizing module mem_wb.
Optimizing module mux2to1.
Optimizing module program_counter.
Optimizing module regfile.
Optimizing module sign_mask_gen.
Optimizing module top.

19.37.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALUControl'.
Finding identical cells in module `\ForwardingUnit'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\alu'.
Finding identical cells in module `\branch_decision'.
Finding identical cells in module `\branch_predictor'.
Finding identical cells in module `\control'.
Finding identical cells in module `\cpu'.
Finding identical cells in module `\csr_file'.
Finding identical cells in module `\data_mem'.
Finding identical cells in module `\ex_mem'.
Finding identical cells in module `\id_ex'.
Finding identical cells in module `\if_id'.
Finding identical cells in module `\imm_gen'.
Finding identical cells in module `\mem_wb'.
Finding identical cells in module `\mux2to1'.
Finding identical cells in module `\program_counter'.
Finding identical cells in module `\regfile'.
Finding identical cells in module `\sign_mask_gen'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

19.37.10. Executing OPT_RMDFF pass (remove dff with constant values).

19.37.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALUControl..
Finding unused cells or wires in module \ForwardingUnit..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \alu..
Finding unused cells or wires in module \branch_decision..
Finding unused cells or wires in module \branch_predictor..
Finding unused cells or wires in module \control..
Finding unused cells or wires in module \cpu..
Finding unused cells or wires in module \csr_file..
Finding unused cells or wires in module \data_mem..
Finding unused cells or wires in module \ex_mem..
Finding unused cells or wires in module \id_ex..
Finding unused cells or wires in module \if_id..
Finding unused cells or wires in module \imm_gen..
Finding unused cells or wires in module \mem_wb..
Finding unused cells or wires in module \mux2to1..
Finding unused cells or wires in module \program_counter..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \sign_mask_gen..
Finding unused cells or wires in module \top..

19.37.12. Finished OPT passes. (There is nothing left to do.)

19.38. Executing TECHMAP pass (map to technology primitives).

19.38.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

19.38.2. Continuing TECHMAP pass.
No more expansions possible.

19.39. Executing ABC pass (technology mapping using ABC).

19.39.1. Extracting gate netlist of module `\ALUControl' to `<abc-temp-dir>/input.blif'..
Extracted 167 gates and 179 wires to a netlist network with 11 inputs and 7 outputs.

19.39.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =      15.
ABC: Participating nodes from both networks       =      42.
ABC: Participating nodes from the first network   =      14. (  41.18 % of nodes)
ABC: Participating nodes from the second network  =      28. (  82.35 % of nodes)
ABC: Node pairs (any polarity)                    =      14. (  41.18 % of names can be moved)
ABC: Node pairs (same polarity)                   =       9. (  26.47 % of names can be moved)
ABC: Total runtime =     0.00 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

19.39.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       33
ABC RESULTS:        internal signals:      161
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:        7
Removing temp directory.

19.39.2. Extracting gate netlist of module `\ForwardingUnit' to `<abc-temp-dir>/input.blif'..
Extracted 143 gates and 203 wires to a netlist network with 60 inputs and 4 outputs.

19.39.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =      15.
ABC: Participating nodes from both networks       =      28.
ABC: Participating nodes from the first network   =      14. (  22.95 % of nodes)
ABC: Participating nodes from the second network  =      14. (  22.95 % of nodes)
ABC: Node pairs (any polarity)                    =      14. (  22.95 % of names can be moved)
ABC: Node pairs (same polarity)                   =       6. (   9.84 % of names can be moved)
ABC: Total runtime =     0.00 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

19.39.2.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       60
ABC RESULTS:        internal signals:      139
ABC RESULTS:           input signals:       60
ABC RESULTS:          output signals:        4
Removing temp directory.

19.39.3. Extracting gate netlist of module `\adder' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

19.39.4. Extracting gate netlist of module `\alu' to `<abc-temp-dir>/input.blif'..
Extracted 1392 gates and 1532 wires to a netlist network with 139 inputs and 65 outputs.

19.39.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =     292.
ABC: Participating nodes from both networks       =     638.
ABC: Participating nodes from the first network   =     291. (  45.05 % of nodes)
ABC: Participating nodes from the second network  =     347. (  53.72 % of nodes)
ABC: Node pairs (any polarity)                    =     291. (  45.05 % of names can be moved)
ABC: Node pairs (same polarity)                   =     135. (  20.90 % of names can be moved)
ABC: Total runtime =     0.03 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

19.39.4.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      645
ABC RESULTS:        internal signals:     1328
ABC RESULTS:           input signals:      139
ABC RESULTS:          output signals:       65
Removing temp directory.

19.39.5. Extracting gate netlist of module `\branch_decision' to `<abc-temp-dir>/input.blif'..
Extracted 6 gates and 10 wires to a netlist network with 4 inputs and 3 outputs.

19.39.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =       4.
ABC: Participating nodes from both networks       =       7.
ABC: Participating nodes from the first network   =       3. (  75.00 % of nodes)
ABC: Participating nodes from the second network  =       4. ( 100.00 % of nodes)
ABC: Node pairs (any polarity)                    =       3. (  75.00 % of names can be moved)
ABC: Node pairs (same polarity)                   =       3. (  75.00 % of names can be moved)
ABC: Total runtime =     0.00 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

19.39.5.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:        3
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        3
Removing temp directory.

19.39.6. Extracting gate netlist of module `\branch_predictor' to `<abc-temp-dir>/input.blif'..
Extracted 11 gates and 15 wires to a netlist network with 4 inputs and 3 outputs.

19.39.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =       4.
ABC: Participating nodes from both networks       =       6.
ABC: Participating nodes from the first network   =       3. (  75.00 % of nodes)
ABC: Participating nodes from the second network  =       3. (  75.00 % of nodes)
ABC: Node pairs (any polarity)                    =       3. (  75.00 % of names can be moved)
ABC: Node pairs (same polarity)                   =       3. (  75.00 % of names can be moved)
ABC: Total runtime =     0.00 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

19.39.6.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:        3
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        3
Removing temp directory.

19.39.7. Extracting gate netlist of module `\control' to `<abc-temp-dir>/input.blif'..
Extracted 36 gates and 43 wires to a netlist network with 7 inputs and 12 outputs.

19.39.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =      13.
ABC: Participating nodes from both networks       =      24.
ABC: Participating nodes from the first network   =      12. (  85.71 % of nodes)
ABC: Participating nodes from the second network  =      12. (  85.71 % of nodes)
ABC: Node pairs (any polarity)                    =      12. (  85.71 % of names can be moved)
ABC: Node pairs (same polarity)                   =      12. (  85.71 % of names can be moved)
ABC: Total runtime =     0.00 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

19.39.7.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       13
ABC RESULTS:        internal signals:       24
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:       12
Removing temp directory.

19.39.8. Extracting gate netlist of module `\cpu' to `<abc-temp-dir>/input.blif'..
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 3 outputs.

19.39.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =       4.
ABC: Participating nodes from both networks       =       6.
ABC: Participating nodes from the first network   =       3. (  75.00 % of nodes)
ABC: Participating nodes from the second network  =       3. (  75.00 % of nodes)
ABC: Node pairs (any polarity)                    =       3. (  75.00 % of names can be moved)
ABC: Node pairs (same polarity)                   =       3. (  75.00 % of names can be moved)
ABC: Total runtime =     0.00 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

19.39.8.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:        3
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        3
Removing temp directory.

19.39.9. Extracting gate netlist of module `\csr_file' to `<abc-temp-dir>/input.blif'..
Extracted 729 gates and 739 wires to a netlist network with 8 inputs and 31 outputs.

19.39.9.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =     162.
ABC: Participating nodes from both networks       =     355.
ABC: Participating nodes from the first network   =     162. (  33.26 % of nodes)
ABC: Participating nodes from the second network  =     193. (  39.63 % of nodes)
ABC: Node pairs (any polarity)                    =     161. (  33.06 % of names can be moved)
ABC: Node pairs (same polarity)                   =      94. (  19.30 % of names can be moved)
ABC: Total runtime =     0.06 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

19.39.9.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      486
ABC RESULTS:        internal signals:      700
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:       31
Removing temp directory.

19.39.10. Extracting gate netlist of module `\data_mem' to `<abc-temp-dir>/input.blif'..
Extracted 608 gates and 746 wires to a netlist network with 137 inputs and 104 outputs.

19.39.10.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =      91.
ABC: Participating nodes from both networks       =     303.
ABC: Participating nodes from the first network   =     120. (  50.42 % of nodes)
ABC: Participating nodes from the second network  =     183. (  76.89 % of nodes)
ABC: Node pairs (any polarity)                    =     120. (  50.42 % of names can be moved)
ABC: Node pairs (same polarity)                   =     101. (  42.44 % of names can be moved)
ABC: Total runtime =     0.01 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

19.39.10.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      207
ABC RESULTS:        internal signals:      505
ABC RESULTS:           input signals:      137
ABC RESULTS:          output signals:      104
Removing temp directory.

19.39.11. Extracting gate netlist of module `\ex_mem' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

19.39.12. Extracting gate netlist of module `\id_ex' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

19.39.13. Extracting gate netlist of module `\if_id' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

19.39.14. Extracting gate netlist of module `\imm_gen' to `<abc-temp-dir>/input.blif'..
Extracted 231 gates and 260 wires to a netlist network with 29 inputs and 31 outputs.

19.39.14.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =      48.
ABC: Participating nodes from both networks       =      95.
ABC: Participating nodes from the first network   =      47. (  88.68 % of nodes)
ABC: Participating nodes from the second network  =      48. (  90.57 % of nodes)
ABC: Node pairs (any polarity)                    =      47. (  88.68 % of names can be moved)
ABC: Node pairs (same polarity)                   =      46. (  86.79 % of names can be moved)
ABC: Total runtime =     0.00 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

19.39.14.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       52
ABC RESULTS:        internal signals:      200
ABC RESULTS:           input signals:       29
ABC RESULTS:          output signals:       31
Removing temp directory.

19.39.15. Extracting gate netlist of module `\mem_wb' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

19.39.16. Extracting gate netlist of module `\mux2to1' to `<abc-temp-dir>/input.blif'..
Extracted 32 gates and 97 wires to a netlist network with 65 inputs and 32 outputs.

19.39.16.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =      33.
ABC: Participating nodes from both networks       =      64.
ABC: Participating nodes from the first network   =      32. (  96.97 % of nodes)
ABC: Participating nodes from the second network  =      32. (  96.97 % of nodes)
ABC: Node pairs (any polarity)                    =      32. (  96.97 % of names can be moved)
ABC: Node pairs (same polarity)                   =      32. (  96.97 % of names can be moved)
ABC: Total runtime =     0.00 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

19.39.16.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       32
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       65
ABC RESULTS:          output signals:       32
Removing temp directory.

19.39.17. Extracting gate netlist of module `\program_counter' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

19.39.18. Extracting gate netlist of module `\regfile' to `<abc-temp-dir>/input.blif'..
Extracted 98 gates and 216 wires to a netlist network with 118 inputs and 66 outputs.

19.39.18.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =      69.
ABC: Participating nodes from both networks       =     138.
ABC: Participating nodes from the first network   =      69. (  84.15 % of nodes)
ABC: Participating nodes from the second network  =      69. (  84.15 % of nodes)
ABC: Node pairs (any polarity)                    =      69. (  84.15 % of names can be moved)
ABC: Node pairs (same polarity)                   =      67. (  81.71 % of names can be moved)
ABC: Total runtime =     0.00 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

19.39.18.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       81
ABC RESULTS:        internal signals:       32
ABC RESULTS:           input signals:      118
ABC RESULTS:          output signals:       66
Removing temp directory.

19.39.19. Extracting gate netlist of module `\sign_mask_gen' to `<abc-temp-dir>/input.blif'..
Extracted 13 gates and 16 wires to a netlist network with 3 inputs and 4 outputs.

19.39.19.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =       5.
ABC: Participating nodes from both networks       =      11.
ABC: Participating nodes from the first network   =       4. (  80.00 % of nodes)
ABC: Participating nodes from the second network  =       7. ( 140.00 % of nodes)
ABC: Node pairs (any polarity)                    =       4. (  80.00 % of names can be moved)
ABC: Node pairs (same polarity)                   =       4. (  80.00 % of names can be moved)
ABC: Total runtime =     0.00 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

19.39.19.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:        4
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        4
Removing temp directory.

19.39.20. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 1 gates and 3 wires to a netlist network with 2 inputs and 1 outputs.

19.39.20.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =       2.
ABC: Participating nodes from both networks       =       2.
ABC: Participating nodes from the first network   =       1. (  50.00 % of nodes)
ABC: Participating nodes from the second network  =       1. (  50.00 % of nodes)
ABC: Node pairs (any polarity)                    =       1. (  50.00 % of names can be moved)
ABC: Node pairs (same polarity)                   =       1. (  50.00 % of names can be moved)
ABC: Total runtime =     0.00 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

19.39.20.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:        1
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        1
Removing temp directory.

19.40. Executing ICE40_WRAPCARRY pass (wrap carries).

19.41. Executing TECHMAP pass (map to technology primitives).

19.41.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

19.41.2. Continuing TECHMAP pass.
No more expansions possible.
Removed 34 unused cells and 1542 unused wires.

19.42. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:       33
  2-LUT                4
  3-LUT               10
  4-LUT               19

Eliminating LUTs.
Number of LUTs:       33
  2-LUT                4
  3-LUT               10
  4-LUT               19

Combining LUTs.
Number of LUTs:       33
  2-LUT                4
  3-LUT               10
  4-LUT               19
Discovering LUTs.
Number of LUTs:       60
  2-LUT                5
  3-LUT                8
  4-LUT               47

Eliminating LUTs.
Number of LUTs:       60
  2-LUT                5
  3-LUT                8
  4-LUT               47

Combining LUTs.
Number of LUTs:       60
  2-LUT                5
  3-LUT                8
  4-LUT               47
Discovering LUTs.
Number of LUTs:       32
  2-LUT                1
  3-LUT               31

Eliminating LUTs.
Number of LUTs:       32
  2-LUT                1
  3-LUT               31

Combining LUTs.
Number of LUTs:       32
  2-LUT                1
  3-LUT               31
Discovering LUTs.
Number of LUTs:      710
  1-LUT               32
  2-LUT               59
  3-LUT              252
  4-LUT              367

Eliminating LUTs.
Number of LUTs:      710
  1-LUT               32
  2-LUT               59
  3-LUT              252
  4-LUT              367

Combining LUTs.
Number of LUTs:      702
  1-LUT               32
  2-LUT               52
  3-LUT              243
  4-LUT              375
Discovering LUTs.
Number of LUTs:        3
  2-LUT                1
  3-LUT                1
  4-LUT                1

Eliminating LUTs.
Number of LUTs:        3
  2-LUT                1
  3-LUT                1
  4-LUT                1

Combining LUTs.
Number of LUTs:        3
  2-LUT                1
  3-LUT                1
  4-LUT                1
Discovering LUTs.
Number of LUTs:       35
  2-LUT                2
  3-LUT               33

Eliminating LUTs.
Number of LUTs:       35
  2-LUT                2
  3-LUT               33

Combining LUTs.
Number of LUTs:       35
  2-LUT                2
  3-LUT               33
Discovering LUTs.
Number of LUTs:       13
  2-LUT                4
  3-LUT                4
  4-LUT                5

Eliminating LUTs.
Number of LUTs:       13
  2-LUT                4
  3-LUT                4
  4-LUT                5

Combining LUTs.
Number of LUTs:       13
  2-LUT                4
  3-LUT                4
  4-LUT                5
Discovering LUTs.
Number of LUTs:        3
  2-LUT                2
  4-LUT                1

Eliminating LUTs.
Number of LUTs:        3
  2-LUT                2
  4-LUT                1

Combining LUTs.
Number of LUTs:        3
  2-LUT                2
  4-LUT                1
Discovering LUTs.
Number of LUTs:      486
  1-LUT                1
  2-LUT               53
  3-LUT              119
  4-LUT              313

Eliminating LUTs.
Number of LUTs:      486
  1-LUT                1
  2-LUT               53
  3-LUT              119
  4-LUT              313

Combining LUTs.
Number of LUTs:      486
  1-LUT                1
  2-LUT               53
  3-LUT              119
  4-LUT              313
Discovering LUTs.
Number of LUTs:      207
  2-LUT               29
  3-LUT               70
  4-LUT              108

Eliminating LUTs.
Number of LUTs:      207
  2-LUT               29
  3-LUT               70
  4-LUT              108

Combining LUTs.
Number of LUTs:      207
  2-LUT               29
  3-LUT               70
  4-LUT              108
Discovering LUTs.
Number of LUTs:        0

Eliminating LUTs.
Number of LUTs:        0

Combining LUTs.
Number of LUTs:        0
Discovering LUTs.
Number of LUTs:        0

Eliminating LUTs.
Number of LUTs:        0

Combining LUTs.
Number of LUTs:        0
Discovering LUTs.
Number of LUTs:        0

Eliminating LUTs.
Number of LUTs:        0

Combining LUTs.
Number of LUTs:        0
Discovering LUTs.
Number of LUTs:       52
  2-LUT               19
  3-LUT               13
  4-LUT               20

Eliminating LUTs.
Number of LUTs:       52
  2-LUT               19
  3-LUT               13
  4-LUT               20

Combining LUTs.
Number of LUTs:       52
  2-LUT               19
  3-LUT               13
  4-LUT               20
Discovering LUTs.
Number of LUTs:        0

Eliminating LUTs.
Number of LUTs:        0

Combining LUTs.
Number of LUTs:        0
Discovering LUTs.
Number of LUTs:       32
  3-LUT               32

Eliminating LUTs.
Number of LUTs:       32
  3-LUT               32

Combining LUTs.
Number of LUTs:       32
  3-LUT               32
Discovering LUTs.
Number of LUTs:        0

Eliminating LUTs.
Number of LUTs:        0

Combining LUTs.
Number of LUTs:        0
Discovering LUTs.
Number of LUTs:       81
  1-LUT                1
  2-LUT                3
  3-LUT                4
  4-LUT               73

Eliminating LUTs.
Number of LUTs:       81
  1-LUT                1
  2-LUT                3
  3-LUT                4
  4-LUT               73

Combining LUTs.
Number of LUTs:       81
  1-LUT                1
  2-LUT                3
  3-LUT                4
  4-LUT               73
Discovering LUTs.
Number of LUTs:        4
  1-LUT                1
  2-LUT                3

Eliminating LUTs.
Number of LUTs:        4
  1-LUT                1
  2-LUT                3

Combining LUTs.
Number of LUTs:        4
  1-LUT                1
  2-LUT                3
Discovering LUTs.
Number of LUTs:        1
  2-LUT                1

Eliminating LUTs.
Number of LUTs:        1
  2-LUT                1

Combining LUTs.
Number of LUTs:        1
  2-LUT                1

Eliminated 0 LUTs.
Combined 8 LUTs.
<suppressed ~10544 debug messages>

19.43. Executing TECHMAP pass (map to technology primitives).

19.43.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

19.43.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000001100001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100000010110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011011111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101111100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010111111110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001000110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111111101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110011110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100110111011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100011000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110100100011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111111111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010111111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101001101100100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110000010011110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011110000000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010110001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101111101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010011100111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100011100011110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101011111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101010101011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111011111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101010000111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110010100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011100010100001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000110110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000110010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101001001110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000110110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111111101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110010101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111100110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111111111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000100110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110001110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010100111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001010010000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000011010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000111100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011001000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111011100101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110011000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111110001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010110001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111111111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101001100101101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110101110111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110100001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111011000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000011010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010000000111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001110111111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001111110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010001100111101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011111111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000100010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110100000110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100000000010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001011111000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011001000010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101110101101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001100111101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000010001110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000001101110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110000101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001101001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000001000101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111011100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011010010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101000011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111001100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011001100111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000101000111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110111001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100000011001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101011100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111001111000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011011100001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011001100000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110011111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010111111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000000110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010000011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101000111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101011101010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111101000100 for cells of type $lut.
No more expansions possible.
<suppressed ~5553 debug messages>
Removed 0 unused cells and 3496 unused wires.

19.44. Executing AUTONAME pass.
Renamed 210 objects in module ALUControl (16 iterations).
Renamed 356 objects in module ForwardingUnit (10 iterations).
Renamed 95 objects in module adder (3 iterations).
Renamed 6777 objects in module alu (23 iterations).
Renamed 3 objects in module branch_decision (2 iterations).
Renamed 172 objects in module branch_predictor (5 iterations).
Renamed 16 objects in module control (4 iterations).
Renamed 3 objects in module cpu (2 iterations).
Renamed 6472 objects in module csr_file (25 iterations).
Renamed 1374 objects in module data_mem (22 iterations).
Renamed 155 objects in module ex_mem (2 iterations).
Renamed 178 objects in module id_ex (2 iterations).
Renamed 64 objects in module if_id (2 iterations).
Renamed 169 objects in module imm_gen (12 iterations).
Renamed 117 objects in module mem_wb (2 iterations).
Renamed 32 objects in module mux2to1 (2 iterations).
Renamed 64 objects in module program_counter (2 iterations).
Renamed 262 objects in module regfile (14 iterations).
Renamed 4 objects in module sign_mask_gen (2 iterations).
Renamed 1 objects in module top (2 iterations).
<suppressed ~4089 debug messages>

19.45. Executing HIERARCHY pass (managing design hierarchy).

19.45.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \data_mem
Used module:     \cpu
Used module:         \csr_file
Used module:         \program_counter
Used module:         \mux2to1
Used module:         \adder
Used module:         \ALUControl
Used module:         \alu
Used module:         \branch_decision
Used module:         \branch_predictor
Used module:         \control
Used module:         \ex_mem
Used module:         \ForwardingUnit
Used module:         \id_ex
Used module:         \if_id
Used module:         \imm_gen
Used module:         \mem_wb
Used module:         \regfile
Used module:         \sign_mask_gen

19.45.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \data_mem
Used module:     \cpu
Used module:         \csr_file
Used module:         \program_counter
Used module:         \mux2to1
Used module:         \adder
Used module:         \ALUControl
Used module:         \alu
Used module:         \branch_decision
Used module:         \branch_predictor
Used module:         \control
Used module:         \ex_mem
Used module:         \ForwardingUnit
Used module:         \id_ex
Used module:         \if_id
Used module:         \imm_gen
Used module:         \mem_wb
Used module:         \regfile
Used module:         \sign_mask_gen
Removed 0 unused modules.

19.46. Printing statistics.

=== ALUControl ===

   Number of wires:                 29
   Number of wire bits:             44
   Number of public wires:          29
   Number of public wire bits:      44
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 33
     SB_LUT4                        33

=== ForwardingUnit ===

   Number of wires:                 71
   Number of wire bits:            120
   Number of public wires:          71
   Number of public wire bits:     120
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 60
     SB_LUT4                        60

=== adder ===

   Number of wires:                  4
   Number of wire bits:            128
   Number of public wires:           4
   Number of public wire bits:     128
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 63
     SB_CARRY                       31
     SB_LUT4                        32

=== alu ===

   Number of wires:                680
   Number of wire bits:            872
   Number of public wires:         680
   Number of public wire bits:     872
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                797
     SB_CARRY                       95
     SB_LUT4                       702

=== branch_decision ===

   Number of wires:                  7
   Number of wire bits:              7
   Number of public wires:           7
   Number of public wire bits:       7
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     SB_LUT4                         3

=== branch_predictor ===

   Number of wires:                 12
   Number of wire bits:            138
   Number of public wires:          12
   Number of public wire bits:     138
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 69
     SB_CARRY                       31
     SB_DFFE                         2
     SB_DFFN                         1
     SB_LUT4                        35

=== control ===

   Number of wires:                 14
   Number of wire bits:             20
   Number of public wires:          14
   Number of public wire bits:      20
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 13
     SB_LUT4                        13

=== cpu ===

   Number of wires:                 71
   Number of wire bits:           1740
   Number of public wires:          71
   Number of public wire bits:    1740
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 44
     ALUControl                      1
     ForwardingUnit                  1
     SB_LUT4                         3
     adder                           2
     alu                             1
     branch_decision                 1
     branch_predictor                1
     control                         1
     csr_file                        1
     ex_mem                          1
     id_ex                           1
     if_id                           1
     imm_gen                         1
     mem_wb                          1
     mux2to1                        24
     program_counter                 1
     regfile                         1
     sign_mask_gen                   1

=== csr_file ===

   Number of wires:                718
   Number of wire bits:           8727
   Number of public wires:         718
   Number of public wire bits:    8727
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                516
     SB_DFF                         29
     SB_DFFSS                        1
     SB_LUT4                       486

=== data_mem ===

   Number of wires:                181
   Number of wire bits:            848
   Number of public wires:         181
   Number of public wire bits:     848
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                337
     SB_DFFE                       122
     SB_LUT4                       207
     SB_RAM40_4K                     8

=== ex_mem ===

   Number of wires:                  3
   Number of wire bits:            311
   Number of public wires:           3
   Number of public wire bits:     311
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                155
     SB_DFF                        155

=== id_ex ===

   Number of wires:                  3
   Number of wire bits:            357
   Number of public wires:           3
   Number of public wire bits:     357
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                178
     SB_DFF                        178

=== if_id ===

   Number of wires:                  3
   Number of wire bits:            129
   Number of public wires:           3
   Number of public wire bits:     129
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 64
     SB_DFF                         64

=== imm_gen ===

   Number of wires:                 23
   Number of wire bits:             85
   Number of public wires:          23
   Number of public wire bits:      85
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 52
     SB_LUT4                        52

=== mem_wb ===

   Number of wires:                  3
   Number of wire bits:            235
   Number of public wires:           3
   Number of public wire bits:     235
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                117
     SB_DFF                        117

=== mux2to1 ===

   Number of wires:                  4
   Number of wire bits:             97
   Number of public wires:           4
   Number of public wire bits:      97
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 32
     SB_LUT4                        32

=== program_counter ===

   Number of wires:                  4
   Number of wire bits:             97
   Number of public wires:           4
   Number of public wire bits:      97
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 64
     SB_DFF                         64

=== regfile ===

   Number of wires:                 32
   Number of wire bits:            273
   Number of public wires:          32
   Number of public wire bits:     273
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                133
     SB_DFF                         48
     SB_LUT4                        81
     SB_RAM40_4K                     4

=== sign_mask_gen ===

   Number of wires:                  3
   Number of wire bits:             10
   Number of public wires:           3
   Number of public wire bits:      10
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     SB_LUT4                         4

=== top ===

   Number of wires:                 12
   Number of wire bits:            115
   Number of public wires:          12
   Number of public wire bits:     115
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     SB_HFOSC                        1
     SB_LUT4                         1
     cpu                             1
     data_mem                        1

=== design hierarchy ===

   top                               1
     cpu                             1
       ALUControl                    1
       ForwardingUnit                1
       adder                         2
       alu                           1
       branch_decision               1
       branch_predictor              1
       control                       1
       csr_file                      1
       ex_mem                        1
       id_ex                         1
       if_id                         1
       imm_gen                       1
       mem_wb                        1
       mux2to1                      24
       program_counter               1
       regfile                       1
       sign_mask_gen                 1
     data_mem                        1

   Number of wires:               1973
   Number of wire bits:          16712
   Number of public wires:        1973
   Number of public wire bits:   16712
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3494
     SB_CARRY                      188
     SB_DFF                        655
     SB_DFFE                       124
     SB_DFFN                         1
     SB_DFFSS                        1
     SB_HFOSC                        1
     SB_LUT4                      2512
     SB_RAM40_4K                    12

19.47. Executing CHECK pass (checking for obvious problems).
checking module ALUControl..
Warning: Wire ALUControl.ALUCtl has an unprocessed 'init' attribute.
checking module ForwardingUnit..
checking module adder..
checking module alu..
Warning: Wire alu.ALUOut has an unprocessed 'init' attribute.
Warning: Wire alu.Branch_Enable has an unprocessed 'init' attribute.
checking module branch_decision..
checking module branch_predictor..
checking module control..
checking module cpu..
checking module csr_file..
checking module data_mem..
checking module ex_mem..
checking module id_ex..
checking module if_id..
checking module imm_gen..
Warning: Wire imm_gen.imm has an unprocessed 'init' attribute.
checking module mem_wb..
checking module mux2to1..
checking module program_counter..
checking module regfile..
checking module sign_mask_gen..
checking module top..
found and reported 4 problems.

19.48. Executing BLIF backend.

20. Executing JSON backend.

Warnings: 4 unique messages, 4 total
End of script. Logfile hash: 72433f21d6, CPU: user 5.70s system 0.19s, MEM: 178.92 MB peak
Yosys 0.9+2406 (git sha1 UNKNOWN, clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 21% 7x techmap (1 sec), 16% 24x opt_expr (0 sec), ...
